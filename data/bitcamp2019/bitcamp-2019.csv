Submission Title,Submission Url,Plain Description,Video,Website,File Url,Desired Prizes,Built With,"Does Your Hack Need To Stay At Your Current Table? (I.E. Hardware, Vr/Ar Hacks That Are Difficult To Move.) If So, What Table Number Are You At?",Mlh Points,Mlh Hardware Lab,Mlh Software Lab,Submitter Screen Name,Submitter First Name,Submitter Last Name,Submitter Email,College/Universities Of Team Members,Additional Team Member Count,Team Member 1 Screen Name,Team Member 1 First Name,Team Member 1 Last Name,Team Member 1 Email,...,,,,,,,,,,,
TrackMyMood,https://bitcamp2019.devpost.com/submissions/118562-trackmymood,"Inspiration

We believe that mental health is important, and today more than ever your mental health can both be influenced and reflected by your social media presense. We wanted to create a simple way for people to be kept up to date with how their mental health is being influenced by social media.

What it does

When someone tweets with the hashtag #TrackMyMood, our program will fetch the recent tweets and analyses them using  IBM Watson's tone analyzer to determine whether or not the user is in a bad mental state and offers them the analysis result and possible recommendations on how to get into a better one. The negative emotions will be under the line and positive will be stacked above

How we built it

We used Tweepy to collect Twitter information, then passed that information into IBM Watson's tone tracker API and the plotted the trends using Matpltlib.

Challenges we ran into

The two challenges we ran into were running out of API calls and having trouble creating a graph the properly reflects the data that we want to convey to users. We overcame these opticals by taking our time and doing research on different types of Matpltlib graphs to determine which would most accurately display the information that we wanted to get across.  

Accomplishments that we're proud of

Attaching the front end to the back end. Attaching front and back ends is always the biggest obstacle in a hackathon, but we are proud that we were able to seamlessly integrate the front and back end of the project to create a fully functioning project.

What we learned

We learned all about plotting information as well as using IBM and Twitter APIs. (I learned much about python from plotting)

What's next for TrackMyMood

In the future we would like to use the technology we began using to track users information in real time and provide tips to them the moment we notice their mood begin to turn bad. We would also like to create a more visual friendly UI with a web app that displays different types of charts and graphs to give the user a better idea of how their mental state is reflected online.
",,https://github.com/jlap4567/Mental-Health-Buddy,,[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta,"python, tweepy, twitter, matpltlib, tonetracker, ibm-watson",,"Rutgers University, Montgomery College",,,Denteyon,Htet Myat,Aung,htetmyataung2027@gmail.com,"Montgomery College, Rutgers, The State University of New Jersey",1,jlap1234,Jacob,Lapinson,jlap4567@gmail.com,,,,,,,,,,,,
Speech Synthesis on the Sega Genesis,https://bitcamp2019.devpost.com/submissions/118603-speech-synthesis-on-the-sega-genesis,"After buying a sega genesis on ebay in January, we were trying to find a way to incorporate it into a hackathon. We ended up deciding on creating a speech synthesizer to run on the console. Our program allows a user to input words, and the console returns by speaking the words (or at least attempting to) using a library of phonemes we recorded (there are no pre-recorded words in our program or on the sega genesis).  Because the sega genesis is a 30 year old system with a 16-bit processor, there were many challenges faced along the way. There were countless times where the system would mispronounce words, and we would need to tweak it. Because it is a speech synthesizer working on old hardware, the voice it generates does seem pretty rudimentary, but this does not all take away from the accomplishment that we feel this project was. The fact that it talks in our opinion is amazing to us and we hope you feel the same. Over the course of the project we learned a lot about programming graphics and sound for 16-bit systems, and we also learned a lot about what such an old gaming console is truly capable of. In the future we hope to continue to tweak, and polish our project to make it into a very streamlined speech synthesizer
",,,,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Most Entertaining Hack - Bitcamp, Best Moonshot Hack - Bitcamp","a-sega-genesis-console-(original), c",R6,"University of Maryland Baltimore Country (UMBC), Montgomery College (MC)",,,JedShakarji,Jed,Shakarji,jedshakarji@gmail.com,"University of Maryland - Baltimore County, Montgomery College",1,jesseshakarji,Jesse,Shakarji,jesseshakarji@gmail.com,,,,,,,,,,,,
Circles,https://bitcamp2019.devpost.com/submissions/118606-circles,"Inspiration

Having happy employees benefits everyone and promoting it is one of the the most important things an organization can do. We want to encourage them to take better care of their employees' mental wellbeing by creating a happier, more supportive work environment.

What it does

Circles lets you connect better with the people you work with and facilitates the creation of close-knit communities in professional spaces.

Add people to your circles, flaunt your achievements or applaud someone else's work through the shared feed, create and RSVP to meetups within the organization on the meetups page.

Check out the live prototype to see everything you can do on Circles!

Our Process

We started by making rough sketches and brainstorming ideas for the problem identified.
Following that, we began to scope out project and thought about things like
Who is the target audience?
What are their needs? 
What design elements can best address those needs?

By making wireframes and user flows, we came up with a final design idea that we all agreed upon.

After picking the color scheme and logo, we divided the work such that each of us designed hi-fidelity screens for one user flow whilst taking feedback from everyone else.

The final step was to sit together and combine all the different user flows, addressing design language inconsistencies and making the final touches. The result is a fully-functional prototype! :D

Challenges

Collaborating on a project is never easy but it doesn't get harder than four designers trying to work on the same design at the same time. It was difficult not to get stuck on every little detail but we powered through and helped each other along the way -- by giving feedback when solicited and taking regular breaks :P

Accomplishments we're proud of

It works! And we are proud that our project solves multiple problems at the same time. Every feature has been thought out from the user's point of view and addresses a need. 

Also, it looks and feels pretty damn cool!

What we learned

We learned that it is possible to design a complete app in a couple of days. We learned that we work better when we allow room for everyone's opinion. We learned that feedback is what improves a product so it's silly to get attached and caught up in one design feature.

Also, it was Mahitha's first hackathon ever and she had a lot of fun :) 

What's next for Circles - Connect | Learn | Grow

This prototype was designed in the context of a university. We think it can be extended as a community building solution for any organization. We plan on completing this design, testing it with users and iterating to make it better. 
",https://www.youtube.com/watch?v=cio-Ydt2RQ8&feature=youtu.be,https://www.figma.com/proto/OK31caeDmqRQc1hRO3wYay/Circles-BitCamp2019?node-id=0%3A1&scaling=scale-down,,"[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Most Entertaining Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Hack for Education - Bloomberg LP","sketch, figma, photoshop, adobe-illustrator, origami, invision, adobe-xd",,University of Maryland College Park,,,AsthaK,Astha,Khurana,astha.khurana.umd@gmail.com,University of Maryland - College Park,3,anamb,Anam,Bhatia,anamb@terpmail.umd.edu,mahithakalyani95,Mahitha,Kalyani,mahithakalyani.95@gmail.com,akajla,Anavi,Kajla,akajla@terpmail.umd.edu,,,,
Rendezvous,https://bitcamp2019.devpost.com/submissions/118635-rendezvous,"Inspiration

A recent Cigna study which surveyed 20,000 U.S. adults 18 years and older using the UCLA Loneliness Scale found that most Americans are considered lonely. Alarmingly, the trend seems to only be worsening: the study revealed that Generation Z (adults ages 18-22) and Millennials (adults ages 23-37) are lonelier and claim to be in worse
health than older generations.  

Approximately 1 in 6 adults in the U.S. suffer from a mental health condition. When examining
the different issues affecting people with mental health conditions, there is a consistent part of the pathology:
they also suffer from loneliness. 

Loneliness has the same impact on mortality as smoking 15 cigarettes a day, making it even more dangerous
than obesity.

As members of Generation Z who have seen how easy it is to become lonely, we decided to build an app that helps support the techniques that help us avoid loneliness - an app that makes person-to-person interaction, which the study found to be the best way to reduce loneliness, become easier. 

What it does

We built an app that takes the pressure to initiate contact with other people off of the user and bolsters communication. Using Rendezvous, users can set up ""call groups"" with their friends or acquaintances that schedule a group call at a set time and day. The app will automatically give users the option to join the call at the scheduled time, meaning no one has to take the first step to initiate the call. For example, a group of friends from home can easily hop on a call at 7:45 every Tuesday and Thursday when they're already on their laptop or phone and get the notification from Rendezvous.

From students going to college, to graduates entering the workforce, to families who live in different countries, Rendezvous gives an easy, low-pressure way to maintain communication with loved ones and keep people from feeling lonely. 

Building it, and next steps

We used react-native to build out the application, to allow us to easily deploy the application on all platforms. We want Rendezvous to be available to anyone who needs it. Once we finish building out the application, we hope to launch Rendezvous to both the iOS and Android app stores by Fall 2019. 
",,,,[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta,react-native,,"Johns Hopkins University, University of Maryland",,,AKlyuev,Arsen,Klyuev,aklioue1@jhu.edu,Johns Hopkins University,0,,,,,,,,,,,,,,,,
Sibyl - The Wikipedia Simplifier,https://bitcamp2019.devpost.com/submissions/118640-sibyl-the-wikipedia-simplifier,"Inspiration

Simple Wikipedia is a wonderful attempt to simplify complex topics, only limited by the speed at which conversion can be performed. 

What it does

Sibyl has the potential to reduce or negate the time necessary to write up Simple Wikipedia pages by converting their Wikipedia counterparts into simple language.

How we built it

We used Java and the jsoup library to build Sibyl.

Challenges we ran into

We had to learn how to parse HTML with jsoup, and we had to figure out how to parse the definitions, wikipedia articles, and synonyms we were given into readable English when inserted into the text.

Accomplishments that we're proud of

We have a working terminal-environment file converter and lookup.

What we learned

This sort of project may have to rely on machine learning to smoothly integrate the language.

What's next for Sibyl - The Wikipedia Simplifier

By integrating Sibyl with tools like GPT-2 or Word2Vec, we may be able to improve our direct English transliteration.
",,https://github.com/jckong99/sibyl,,,java,,University of Maryland - College Park,,,KittehPwns,KittehPwns,,sylphcat8@gmail.com,University of Maryland - College Park,1,jckong99,Jim,,jckong99@gmail.com,,,,,,,,,,,,
"Treetop, Bitstrict Taco, BitPay, Brighten, Bitchella, +more",https://bitcamp2019.devpost.com/submissions/118641-treetop-bitstrict-taco-bitpay-brighten-bitchella-more,"Read my full submission at https://melody.dev/bitcamp/

Sketch file w/ prototypes at https://sketch.cloud/s/49qJo



Attached files:


















",,,,"[DESIGN DEN] Best Bitfolio - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best Hack to Democratize Financial Services - PayPal Credit, [Compass Challenge] Best Hack for X* - Bitcamp",,A1,Temple University,,,bitcamp,Melody,S,bitcamp@melody.cool,University of Northern New Jersey,0,,,,,,,,,,,,,,,,
SimpleNSecure,https://bitcamp2019.devpost.com/submissions/118651-simplensecure,"Inspiration

What it does

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for SimpleNSecure
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43472/zip_files/signin.html,,"html, react",,"University of Maryland, College Park",,,sssharifi,sssharifi,,ssharifi000@gmail.com,,0,,,,,,,,,,,,,,,,
Flash,https://bitcamp2019.devpost.com/submissions/118657-flash,"Inspiration

A practical solution to allocate more time away from mundane tasks

What it does

Uber-eat but for services

How we built it

Using Android Studio

Challenges we ran into

No one knows backend and really not many people working on it

Accomplishments that we're proud of

We finished it

What we learned

Planning is important

What's next for Flash
",,https://github.com/dfhdwe/BitCamp2019,https://s3.amazonaws.com/challengepost/zip_files/production/43476/zip_files/Flash.zip,"Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp",,,university of maryland college park,,,mwangbox,Michael,Wang,mwangbox@umd.edu,University of Maryland - College Park,1,athenfam,,,athenfam@gmail.com,,,,,,,,,,,,
Gee I hope it works,https://bitcamp2019.devpost.com/submissions/118659-gee-i-hope-it-works,"Some random thing someone thought of after our previous ideas failed

detects basic gestures to control lighting and hopefully more as it gets realized

We used a Cylon.js to connect a leap-motion module to an Arduino through a computer, hopefully wirelessly eventually.

the next step will be to integrate it wirelessly then to allow access of gestures over block-stack so it can be customized in a safe manner. 
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43477/zip_files/Bitcamp-20190414T025045Z-001.zip,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Best First-Time Hack - Bitcamp","javascript, leap-motion, cylon.js, arduino",,Capitol Technology university,Leap Motion,,ianpsweeney,Ian,Sweeney,ian.p.sweeney@gmail.com,Capitol Technology University,2,andygiovanni5,Andrew,Giovanni,andygiovanni5@gmail.com,mattdev0630,Matthew,McCloskey,mattdev0630@gmail.com,,,,,,,,
Sort Your Scraps,https://bitcamp2019.devpost.com/submissions/118660-sort-your-scraps,"Inspiration

The University of Maryland's dedication and initiative for recycling and composting has inspired us to better educate our peers to also be more conscientious about our trash. An important issue today in our world is our lack of awareness when it comes to throwing things away, and many items will end up in the wrong place. For example, glass bottles ending up in our landfills seriously damage the environment. We wanted to create something fun and effective in combating this issue.

What it does

This game is a simple falling object game where you control a bin that you can toggle between trash, recycling, and compost. Common daily items will fall from the sky, and the goal is to catch the items with the appropriate bin. While also fun, the fast paced nature of this game trains you to sort the different items instinctively, which would lead you to be more aware of where your scraps belong in real life. 

How we built it

We built this game using Python and Pygame. We self-created all of the images using PixilArt and Paint.net. All the music was composed using SoundTrap and the sound effects were taken from Freesound and edited. 

Challenges we ran into

It was challenging to work with a new language we had little experience with before. We discovered that certain functionalities we wanted to implement slowed down the game, or were not optimal for playing with. In response, we came up with alternative ideas so that the game was still robust.

Accomplishments that we're proud of

We are very proud of the way our sprites and soundtrack turned out as they were self-created. For a prototype of the first game we have ever made, we think that it came out pretty well.

What we learned

We learned a lot more about how Python works as a language as well as how to use Pygame. We figured out the functionality of groups with sprites so that we could handle an indefinite amount of sprites at once. We learned how to keep track of high scores through different executions of the game by reading and writing into a text file. We learned the basics of animating and timing different images in Python.

What's next for Sort Your Scraps

We would eventually like to add more functionality, as well as make the game more seamless. Future ideas can entail different game modes, additional items, adaptation to mobile devices. 
",,https://github.com/melissa-r-hoff/Sort-Your-Scraps/tree/master,https://s3.amazonaws.com/challengepost/zip_files/production/43478/zip_files/Sort-Your-Scraps-master.zip,"Most Entertaining Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo","python, pygame",,University of Maryland - College Park,,,klaohoo,Kaitlyn,Laohoo,klaohoo@gmail.com,University of Maryland - College Park,2,mohinid2018,,,mohinid2018@gmail.com,hazelfeather17777,hazelfeather17777,,ireneli77@gmail.com,,,,,,,,
BlockBoard,https://bitcamp2019.devpost.com/submissions/118663-blockboard,"Inspiration

we decided to make something that is easy and intuitive for people to use and learn with

What it does

Its a whiteboard, and it lets you draw your ideas out digitally.

How we built it

Blockstack, Node, React, and a whole lot of google.

Challenges we ran into

Making the server run cross ecosystems, and finding examples and refrences for Blockstack.

Accomplishments that we're proud of

Full stack functionality. Integration with all the products we set out to connect with.

What we learned

How to quickly and easily interface an application with BlockBoards ecosystem, how to generate an application using react.js, and how to plan a full stack web application to be compartmentalized for a team.

What's next for BlockBoard

Blackboard will ultimately go online in the blockstack ecosystem. Providing users with the ability to work on multiple white boards and take them with them wherever they need. With elevated security and consistency as provided by Blockstack's Blockchain.

Special Thanks

-@Bitcmp
-BitcampMentors
-That one specific mentor, didn't catch your name, but you're a real one.
-Isabella for the rad logo
-parents, for our existences, thanks guys
-and last but not last, Blockstack.
",,https://github.com/mistmurk/BlockBoard,https://s3.amazonaws.com/challengepost/zip_files/production/43496/zip_files/BlockBoard-master.zip,"Best use of Blockstack - MLH, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Hack for Education - Bloomberg LP","blockstack, react, javascript, blockchain, html5",,"University of Maryland College Park, Hampton University",,Blockstack,beForged,Richard,Yu,richardyu042@gmail.com,"University of Maryland - College Park, Hampton University",2,mistmurk,mistmurk,,lukev21@gmail.com,xmanflips,Xavier,Horton,xmanflips@gmail.com,,,,,,,,
PRAnalytics,https://bitcamp2019.devpost.com/submissions/118670-pranalytics,"Inspiration

With such a versatile economy, it is becoming increasingly difficult for everyday consumers to make important financial decisions.  There are a vast number of factors that can go into financial decision making for investors, companies, and most importantly, the people.  One factor that is overlooked, both mathematically and theoretically, is public relations.

What it does

Our website analyzes a company's public relations from 30,000 news sources around the world through a Natural Language API to find an arbitrary value of how that company is perceived by the public in the news.  This score is then rated on scale that is easy to understand for the consumer.  On top of that, the website offers real time information regarding the company and it's financial performance.

How we built it

We used several different APIs that we found for free online to first find the top headlines related to a company being searched for.  These article headlines and titles were then ran through the Google Cloud Natural Language API which analyzed the sentiment in the text.  Based on the scores received, we compiled this information into a simple score for the company which can be used to interpret whether a company is doing good or bad.

Challenges we ran into

We had trouble finding the correct APIs to use that would fit our needs and the response data would be easy to interpret.  We had trouble accessing a few of these APIs due to authentication problems or free tier limitations.  We were able to solve a lot of these problems by doing more research on what APIs are available and the documentation of how to use them.

Accomplishments that we're proud of

We managed to create a finished product while implementing many extra features that weren't a part of our MVP.

What we learned

We learned a lot about APIs, how to use them and how to process the data received from them to use for other applications.

What's next for PRAnalytics

In the future, we plan to use our first beta as a small component of a complete database that can predict changes in stock prices for publicly traded companies.  We plan to switch the Google Cloud Natural Language API to the AutoML API so that we can train the model ourselves for higher accuracy.  We also plan on doing research on better financial APIs that can help us expand in volume and reach.
",,http://pranalytics.net/,,"Best Use of Machine Learning - Metron, Best Hack to Democratize Financial Services - PayPal Credit, Best Domain Registered with Domain.com - MLH, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Financial Hack - Capital One","html, css, javascript, google-cloud, finance, api",,University of Maryland - CP,,Domain.com|-|Google Cloud Platform,ashish0810,Ashish,Bachavala,ashish0810@yahoo.com,University of Maryland - College Park,2,fzahid1,,,fzahid3098@gmail.com,matthewrbraun,Matthew,Braun,matthewrbraun@yahoo.com,,,,,,,,
Nyan Cat Light Show,https://bitcamp2019.devpost.com/submissions/118679-nyan-cat-light-show,"Inspiration

We wanted to paint something on the tent. We were inspired by the colorful Nyan cat and the great existing Bitcamp pixel art on the tent to paint a colorful Nyan cat.

What it does

It's a static image with pipe cleaners added on. We then added addressable RGB LED strips onto the pipe cleaners to give it some flair. A potentiometer controls one of four modes that the lights can take on - off, psychedelic, wave, and random. It mostly attracts attention from how bright it is.

How I built it

We spent 3 hours painting the Nyan cat, anticipating it would take us 1. The next day, we started the work soldering and coding an Arduino to control the LEDs with various patterns.

Challenges I ran into

We wanted to try to add music into our display of colorful lights, but the Arduino's memory was too small to store music files, and we couldn't get a library that used raw PWM data for the speaker to play more than 4 seconds of audio. Furthermore, we were barely able to hear it, so we scrapped the music idea.

Accomplishments that I'm proud of

Honestly, we're most proud of painting the cat. We masked different parts of the wood to move up the board and get the lines just straight. It was the most tedious part of the project and only the most time consuming after playing around with the sound library that didn't work.

What I learned

We learned that Arduinos have around 32KB of space for program memory. We also learned how to work with the Arduino IDE and the LED library that we used to control the LED strips.

What's next for Nyan Cat Light Show

Get the audio shield or SD card expansion shield to add onto the Arduino to play that sweet, sweet, Nyan cat music.
",https://youtu.be/8OFiBBsGGNo,,https://s3.amazonaws.com/challengepost/zip_files/production/43484/zip_files/sketch_apr13a.zip,Most Entertaining Hack - Bitcamp,arduino,,"University of Maryland, College Park",Arduino 101,,danny81299,Dan,Zou,danny81299@gmail.com,University of Maryland - College Park,1,bchin1,Brian,Chin,bqin.9215@gmail.com,,,,,,,,,,,,
EZ CV,https://bitcamp2019.devpost.com/submissions/118680-ez-cv,"Inspiration

A friend of mine is working on a side project that involves monitoring crops. He wants to build a system that can process pictures of the crops and find defects, classify different weeds, and find early signals of crop damage. However, he does not know how to write code nor does he know any artificial intelligence, particularly computer vision. So him, and many others who have great use cases for computer vision are unable to complete their projects because they don't know programming.

What it does

A system where you can import images - either from your own library or from Google images - into the platform, label them using a easy to use interface, and with a click of a single button, train the model. The system also makes the model available for use in the browser or via an API.

Generally, there are 4 steps to any computer vision pipeline:

1) Gather data

2) Label the data

3) Find the appropriate model and train it

4) Deploy the model

All 4 of these steps are included in the EZ CV system. The ultimate goal is that an individual does not need to know how to program or know any artificial intelligence to get cutting edge computer vision results.

How I built it

There were a few major components to this project: the user interface, the server, and the algorithm to train the ML model.

The frontend was built in normal HTML and CSS with AngularJS as the MVC framework. I used the HTML5 Canvas API to create the ability to draw a bounding box over images. The search bar is powered by an amazing open source script (https://github.com/hardikvasa/google-images-download) that scrapes google images.

The server was built in Python using Flask.

Due to the time constraints, I decided to focus on a single problem within computer vision: object localization. This problem focuses on finding the types (car, bird, etc.) and locations of objects. To train such a model, the input data consists of images and and goal is to predict bounding boxes around the objects. So to focus on this problem, the UI only enables creating bounding boxes on images.

Challenges I ran into

Within the frontend, the Canvas API is very finicky, so that required a fair amount of debugging.

I decided to use Google Compute Engine for the server and training the computer vision algorithms. This was my first time using Google Cloud so I had to learn to navigate the console, understand the configurations, and debug errors in launching instances. I particularly was facing challenges with networking because I wanted to expose the server to the external IP so I had to add a few additional permissions.

Accomplishments that I'm proud of

I am surprised that I finished the entire front-end entirely within the hackathon. The front-end contains most of the functionality I envisioned, which is really fulfilling knowing that I was able to reach a goal I set prior to the hackathon.

What I learned

How to manage a project. There were many moving parts in this project and many frames of mind to think in (Design, User Experience, Server, AI/Computer Vision) as well as switching between multiple languages and frameworks (Languages: HTML, CSS, Javascript, Python and Libraries/Frameworks: AngularJS, Keras/Tensorflow).

What's next for EZ CV

I would love to use this for myself because in the past year of research and project development in computer vision that I have done, many times I am faced with annotating data and training models, which is a tedious process and can be blackbox-ed. I hope to bring more computer vision algorithms to the service: pure classification, semantic segmentation, instance segmentation, optical flow, and many more! Finally, I hope to help my peers like the one who inspired me use the service to solve their computer vision problems.
",https://www.youtube.com/watch?v=tv7qV-zHupw,https://github.com/ShivamHacks/EZ-CV,https://s3.amazonaws.com/challengepost/zip_files/production/43511/zip_files/Bitcamp_EZ-CV.zip,"Best Use of Machine Learning - Metron, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","python, angular.js, flask, keras, tensorflow, html5, css3, google-cloud, google-compute-engine, javascript",B13,"The University of Maryland, College Park",,Google Cloud Platform,ShivamAgrawal,Shivam,Agrawal,shivamlego@gmail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
FINRA Insights,https://bitcamp2019.devpost.com/submissions/118694-finra-insights,"Inspiration

Interested in finance and data science

What it does

Provide insights into datasets

How I built it

Python on google cloud

Challenges I ran into

Understanding datasets

Accomplishments that I'm proud of

Accurately processing information

What I learned

Developed more data science skills

What's next for FINRA Insights

Investment research project
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43540/zip_files/FINRA2.zip,,"python, google-cloud",,University of Maryland,,,AndrePimenta,Andre,Pimenta,andrepimenta1000@gmail.com,University of Maryland - College Park,3,ArdaArslan,Arda,Arslan,ardaarslan.student@gmail.com,Maosef,Andrew,Mao,pazzun@gmail.com,raymond180,Raymond,Chen,raymond180@hotmail.com,,,,
School Closure Alarm,https://bitcamp2019.devpost.com/submissions/118695-school-closure-alarm,"Inspiration

I (Clark) got tired of being woken up by my alarm when school was closed, so this app aims to allow people to sleep in.

What it does

You put in when your classes/activities are, and how long before the first one you want to wake up. If school is open on time, you will wake up the specified time before your first class. If school is closed, you will wake up at another time of your choosing.

How we built it

The app itself is written in Flutter/Dart and the server is written in Flask/Python. The server handles scraping the UMD alerts webpage to see if school is closed and has a GET endpoint which responds with when school is closed.

Challenges we ran into

None of us knew Flutter or Dart (and we still don't). However, through the power of internet searches and Stack Overflow we prevailed.

Accomplishments that we're proud of

Even though we had no experience with Flutter or mobile development in general we all helped each other out and combined our knowledge in order to complete this project.

What I learned

We learned the basics of Flutter and Dart.

What's next for School Closure Alarm

Figuring out how to make it work more like a native alarm app i.e. wake up the screen when your alarm goes off not just send a notification.
",,https://github.com/ctffarley/SchoolClosureAlarm,,Best First-Time Hack - Bitcamp,"flutter, dart, python, flask, beautiful-soup",,"University of Maryland, College Park",,,clarktfarley,Clark,Farley,clarktfarley@gmail.com,University of Maryland - College Park,2,suttonr75,suttonr75,,suttonr75@gmail.com,alecwwest,Alec,West,alec@wodell.com,,,,,,,,
BrokerHunt,https://bitcamp2019.devpost.com/submissions/118698-brokerhunt,"BrokerHunt

BrokerHunt is our solution to using the datapoint from the dataset provided to us by FINRA for their Bitcamp challenge. Using this dataset we are trying to create a more personalized experience for investors to:


Explore brokers based on their needs.
Check if their current brokers are registered/licensed.
Compare 2 brokers / broker firms in order to aid their decision making. 


BrokerHunt is a platform that provides ""Find a Broker"" option which is a survey that helps filter out the broker/broker firm lists based on the user's answers. It also provides ""Introduction to Investment""  links to provide newcomers information resources to understand basics on investments. For frequent investors, it provides a search engine to help them find their intended results. The survey also helps to gather information on the users which can be analyzed by FINRA to create products on the results. 

BrokerHunt is our way of trying to engage the investors using the dataset on investment advisors. 
",,https://sketch.cloud/s/KEYKV,https://s3.amazonaws.com/challengepost/zip_files/production/43590/zip_files/Finra_Challenge.docx,Best App or Site for Investment Advisor Rep Report - FINRA,"vue.js, bulma.io, sass, vanilla.js",,University of Maryland College Park,,,ijuichi,James,Chi,ijuichi@umd.edu,"University of Maryland - College Park, University of Maryland - University College",3,tmunzar,Talal,Munzar,tmunzar@gmail.com,alishagonsalves27,Alisha,Gonsalves,alisha.gonsalves27@gmail.com,syuan1,Jessica,Yuan,syuan1@terpmail.umd.edu,,,,
"Genoji, The Text/Emoji Adventure Game Discord Bot",https://bitcamp2019.devpost.com/submissions/118700-genoji-the-text-emoji-adventure-game-discord-bot,"Inspiration

Procedural Generation and Emojis => GENOJI!!! Inspired by text adventure games and fantasy role playing games

What it does

Generates a randomly generated maze dungeon with enemies, traps and treasure. Here's the catch: It's run completely within a discord bot. Attack the enemies by using emoji reactions. Certain classes are allowed to use specific emojis.

How I built it

We divided the project into four tasks:


Dungeon generation (Nana)
Combat engine (Bennett)
User interface (Matt)


Challenges I ran into


New to using python!
Deciding on data structure type


Accomplishments that I'm proud of


Implemented a functional combat engine
Detected and restricted user reactions
Integrated interface with combat engine


What I learned


Learned basic python
Learned how to delegate project responsibilities
Discord python API


What's next for Genoji, The Text/Emoji Adventure Game Discord Bot


Uploading custom images for dungeon map and monsters
Implement dungeon exploration engine
Add random monster generation
Refining/balancing the combat system
Implement leveling and loot

",,https://github.com/bablitz/genoji,,,"python, discord.py-library",,"University of Maryland, College Park",,,bablitz,Bennett,Blitz,bablitz@comcast.net,University of Maryland - College Park,2,mathstar2,mathstar2,,matthewyi5951@gmail.com,17nkwon,Nana,Kwon,17nkwon@gmail.com,,,,,,,,
Oravise,https://bitcamp2019.devpost.com/submissions/118702-oravise,"Inspiration

There are many prominent unsolved problems the world faces today. There are also many young people interested in these fields. In order to solve these issues in the future, the world needs more motivated and interested students with solutions. We hope that our platform can connect students and researchers to start their passions early and foster mentor relationships.

What it does

Our project is called Oravise, an oracle advisor. Oravise is a peer to peer scholarly website connecting individuals curious about unsolved world problems across academic fields including astronomy, computer science, mathematics, medicine, and other important subjects with researchers in those respective fields. The website allows users to select an academic researcher from a list given the users chosen subject, subcategory, and unsolved problem and connect with them.

How we built it

We scraped Wikipedia's list of unsolved problems webpage, putting the questions into a JSON file. Additionally, to obtain scholarly researchers through Google Scholars we tried to use a public API, however, it was depreciated, so instead, we created our own API using BeautifulSoup4. We then parsed these results into a Mongodb database. On the front end we used flask to create the website using a model, view, and controller structure along with Bootstrap. 

Challenges we ran into

Due to the formatting inconsistency across the Wikipedia pages, the collection of our data took longer than expected even with scraping.  Additionally, because we tried to use a public API that was depreciated, so we had to create our own API, which pushed our timeline back. Our group also had vastly different skillsets of frontend and backend development.

Accomplishments that we're proud of

Our model will connect a new wave of researchers with current academic researchers to develop solutions to the world's unsolved problems. Furthermore, bringing together the entire project was definitely a big task for us as we all came from different backgrounds. In the future, Oravise could be used to breed a new generation of motivated students with world-class mentors helping feed that passion.

What we learned

We learned how to create own our API using Python and BeautifulSoup4. We also learned how to use flask for web development. Both of these tools allowed were pivotal aspects to creating our model. 

What's next for Oravise

In the future, we would like to incorporate a wider range of subjects and researchers into our model, ultimately allowing any student to be able to get advice from a researcher. 
",,https://oravise.com,,"Best Domain Registered with Domain.com - MLH, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Hack for Education - Bloomberg LP","python, r, json, beautiful-soup, mongodb, flask, bootstrap, mongolab, google-cloud, digitalocean, html5, javascript, jquery, ajax",,"University of Maryland, College Park",,Domain.com,alexpollock8,alexpollock8,,alex.pollock8@gmail.com,University of Maryland - College Park,3,esteininger,Ethan,Steininger,esteininger21@gmail.com,mhsmathew,Mat,S.,mhsmathew@gmail.com,mattkalin,Matt,Kalin,mattalexk99@hotmail.com,,,,
MedReality,https://bitcamp2019.devpost.com/submissions/118704-medreality,"Inspiration

Anatomy is considered as one of the most comprehensive topics which often challenge students in general. Learning anatomy is difficult as it usually costs significant time and effort to memorize and comprehend. Our MedReality website provides an impactful solution to increase lively study environment and promote students imagination in learning anatomy. MedReality is a virtual reality website providing students exclusive experiences including several vibrant and descriptive anatomical lessons in both human and animals. Our inspiration is to allow students to both train by themselves and in groups, as multiple users can join a virtual space and experience a human and animal anatomy demonstration.

Additionally, this framework is deployed with an AI system which was trained on a cloud using human expert ground truth. The system's purpose is able to assist disease diagnosis,  medical imaging segmentation or even quantification.

What it does

With the VR experience in MedReality, users may explore organs and systems in a fully immersive environment in virtual reality, display diseases in varying states of severity, and add treatments to visualize and understand medical options.

Users can exploit brains, vessels, organs, bones, and muscles in order to explore anatomical structures in orthogonal views: coronal, sagital and axial. Moreover, with a richable amount of ex-vivo and clinical scan sources, MedReality promisingly encourages users to widely elaborate their learning knowledge and skills in respect to perceive a profound understanding of structures in respect to terminology and definitions. Our MedReality WebVR is an advanced learning tool that could help not only medical students but also individuals without a medical background to visualize and explore anatomy. 

In addition, MedReality also include an Artificial Intelligent which is trained using 3D deep neural network (3DUnet) to detect white matter, gray matter and cerebrospinal fluid. This AI can be further extended to detect structures in other organs like heart, kidney, liver, etc. Furthermore, it will help to correct/guide students in learning these anatomical structures. On the other hand, this AI highly aims to 1) support students and researchers working in radiology and medical imaging to segment and quantify structure volume and 2) assist medical doctors to diagnose abnormal structures in human body such as tumors. 

How we built it

Our projects include different advanced technology such as Microsoft BabylonJS for VR experience, Deep Learning for training brain images and Google Cloud Platform with Compute Engine. 

Challenges we ran into


Difficult time to locate the coordinates of the mesh to import new objects onto the mesh.
A lot of time is spent to create the contents for VR e.g. 3D mesh, scene, sounds, videos, images...
We also had problem when trying install  keras and tensorflow on Google Cloud platform. 


Accomplishments that we're proud of


Successfully use BabylonJS and implement deep learning on Google Cloud Platform.
Learn about anatomy in higher dimension for a unique experience using VR.


What we learned

We learn to develop in:


BabylonJS
Google Cloud Platform


What's next for MedReality


Develop further features and enrich the content of other anatomies
Improve clearer and cleaner user interface
-Integrate AI system to VR website-
-Allow users to upload their sccans/input for viewing, segmenting and measuring.

",https://youtu.be/CE0lzi7uTL8,https://github.com/maipbui/bitcamp2019,,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP","javascript, babylon.js, python, tensorflow, keras, webvr, oculus",N6,Catholic University of America,Samsung Gear VR,,buim,Mai,Bui,buim@cua.edu,Catholic University of America,3,75lam,Van,Lam,75lam@cua.edu,01bui,Vy,Bui,01bui@cua.edu,32nguyen,Thanh,Nguyen,32nguyen@cua.edu,,,,
Meep,https://bitcamp2019.devpost.com/submissions/118711-meep,"This was our first web app from a beginners stand point learning HTML, CSS, Javascript using Firebase hosting.
",,https://meep-3f8f4.firebaseapp.com/,,,"html5, css3, javascript",,"University of Maryland, University of Maryland Baltimore County",,,alfredhuynh,alfred,huynh,alfredhuynh@gmail.com,,1,Kimchee4Me,Esther,Malone,esther.m.malone@gmail.com,,,,,,,,,,,,
exerceo-bitcamp2019,https://bitcamp2019.devpost.com/submissions/118714-exerceo-bitcamp2019,"exerceo-bitcamp2019

Product Description
Note some of the information in the description listed is not fully implemented, but they are listed as part of the team's idea for this hack. 

This product aims to help individuals to continuously learn throughout their lifetimes. The web application has a listing of courses of various topics from sites such as Lynda.com, Codecademy, Khan Academy, and Udemy. Learners can select which courses/topics to enroll that fits in their schedule, interests, and goals. Each course/topic contains links to websites that contain content about the course as well as user reviews and even assessments. As the product aims to motivate learners to keep on learning, each course also has a point values that the learner can earn once a course is completed. Learners can compete with others for points on the leaderboard as they learn material, and they can also exchange their earned points for monetary or other rewards, including gift cards or charity. A learner (the user) has a profile which he/she is able to access a history of classes and course history. There is also a login for the learner to access their profile.  

_ Next Steps _
We would like to expand this hack by allowing a wiki-style summary panel which learners can also look at their past courses . This can be useful for learners to quickly refresh and review what they have learned without necessarily needing to go through the entire course again. We also hope to implement a notes panel that users can take as they complete courses. Additional features also include a scheduler that fits learners' courses onto their schedule, and pre-course assessments to ensure what users know. They may be features which users may compete for challenges and educational games to help reinforce their learning. 

This is part of Bitcamp 2019 at University of Maryland, College Park.
",,https://github.com/annguyen997/exerceo-bitcamp2019,https://s3.amazonaws.com/challengepost/zip_files/production/43609/zip_files/bitcamp2019.zip,"Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Hack for Education - Bloomberg LP","html, css, javascript, c#, json, sql, mysql",,"University of Maryland, College Park; George Mason University; University of Virginia",,Google Cloud Platform,annguyen997,An,Nguyen,anguye60@masonlive.gmu.edu,"George Mason University, University of Maryland - College Park, University of Virginia",3,eunice1028,Shao-Yun,Wang,eunicewang1995@gmail.com,SnehTalwar,Sneh,Talwar,izinfany@gmail.com,tanguyen5000,Thien,Nguyen,tanguyen5000@gmail.com,,,,
Konnex Cart,https://bitcamp2019.devpost.com/submissions/118722-konnex-cart,"Inspiration

My father is 70 years old and in a wheelchair. He does not have the ability to push wheelchairs anymore. We built a fully autonomous cart that will help assist elderly, senior citizens and people with disabilities.

What it does

Self-Powered Shopping cart that will follow you around in the grocery store, follow you to your car, Return back to ""home base"" at the store

How we built it

Dual Dc motors for powertrain.
Android IOT Face Recognition for grocceries. GPS, lidar, touch sensors, Bluetooth connectivity. 

Challenges we ran into

At first we couldn't find the motors, so we went to hobby works, home depot etc and couldn't find the right motor with the right torque. Also the drivetrain was complex but we found a simple solution.

Accomplishments that we're proud of

We made it go forward/backward and detect properly!

What we learned

Face Detection, Mechanical Engineering

What's next for Konnex Cart

Turning abilities, Romer Assist Arm for pick up groceries, entertainment system.
",,,,"[DESIGN DEN] Best Bitfolio - Bitcamp, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp, Most Realistic Workplace Hack - TCS, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Moonshot Hack - Bitcamp","dual-dc-motors, face-recogintion, lidar, voice, siri, alexa, google-voice, iot, java, android-studio, vr, computer-vision",A2,"University of Maryland, Georgia Tech, Rutgers, Princeton",,,Konnex,Auran,Shereef,ashereef35@gmail.com,"University of Maryland - College Park, University of Maryland - Baltimore, Harvard University, Mercer County Community College, Georgia Institute of Technology - Main Campus, Princeton University",3,scarletknight11,Sanjit,Singh,sanjitpsingh@yahoo.com,zxu322,Zheyuan,Xu,zxu322@gatech.edu,dbooth,David,Booth,dbooth@princeton.edu,,,,
Musical Lights,https://bitcamp2019.devpost.com/submissions/118732-musical-lights,"Inspiration

Imagine being able to see  music. Yes listening to music is fun, but it would be so much better to be able to see it at the same time. You could go to an expensive concert where the performers have spent hours making a custom light show for their music.... or you could open an app on your smartphone.

What it does

With Musical Lights, you can connect your phone to a LED strip via Bluetooth. Then simply run the app and play music from any source. The app will detect the music with a microphone and use the intensity to determine how many LEDs are turned on. This creates an effect where the light increases and decreases with the music you are listening to, enhancing the experience.

How we built it

The phone app was developed in android studio. The LED strip and microphone were connected to an ESP-32 micro controller. The ESP-32 comes with built in Bluetooth that was used to connect with the phone. The code for controlling LEDs was written in Arduino IDE. 

The physical components were purchased prior to the hackathon. The ESP32 microcontroller and the MAX9814 microphone were connected on a breadboard. A 5V, 15A power supply is used to provide power for the entire project.

Challenges we ran into

We ran into various UI and hardware challenges. For example, we had trouble implementing a color selector, and during testing our first ESP-32 short circuited and overheated. The LED strip was also problematic, having multiple LEDs burn out, which required cutting and resoldering. The ESP32 microcontroller also only uses 3.3V logic, whereas the LED strip expected 5V data. This causes some negligible glitches and flickering. 

Accomplishments that we're proud of

We were able to create a functioning product that communicates directly between a phone app and LEDs. The app uses Bluetooth to communicate with the ESP32 microcontroller, which then is able to set custom lighting and respond to ambient music. 

What we learned

We learned how to communicate via Bluetooth between Android devices and microcontrollers, and how to control individual lights on a LED strip. This was also an introduction into digital signal processing, by allowing us to work with Fast Fourier Transforms for Visualization and Beat Detection.

What's next for Musical Lights

We could expand our product with additional musical modes including a beat finding functionality that allows LEDs to interact more intricately with the music. We could also implement a mode that allows music to be input to the microcontroller directly from the phone's audio output instead of from a microphone. We will also work on implementing the beat detection algorithm that Zan demonstrated.
",,https://github.com/jasmaa/musical-lights,,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit","arduino, android-studio, javascript",,UMD,,,brnamovicz,brnamovicz,,brnamovicz@gmail.com,University of Maryland - College Park,3,prchandr,prchandr,,happyprems@gmail.com,jasmaa,Jason,Maa,jasonmaa3955@gmail.com,xuzanxu,Zan,Xu,xuzanxu@gmail.com,,,,
geo-sage,https://bitcamp2019.devpost.com/submissions/118734-geo-sage,"Inspiration

What it does

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for geo-sage

todo
",,,,,flask,,"The college of New Jersey, University of Maryland College Park",,,shenryHen,Henry,Shen,henry.shen@outlook.com,"The College of New Jersey, University of Maryland - University College",2,TomOrth212,Tom,Orth,torth212@gmail.com,jun6206kano,Jun,Kanoh,jun.6206.kano@gmail.com,,,,,,,,
Fighter Bots,https://bitcamp2019.devpost.com/submissions/118737-fighter-bots,"Inspiration

I love building apps to save the world but sometimes its great to just build something that's fun and absolutely ridiculous. So my friend and I decided to take his echo dot and my google home and turn them into trash talking robots.

What it does

First thing I did was make a quick web app in flask that lets people choose a team. If you're team Google you get to add jokes to a list that the google home with use to trash talk the echo dot, and vice versa if you're team Amazon. We also used Arduinos to build robot chases to put them on to actually fight!

How we built it

Flask for the webapp
Node for Alexa and Google skills
C for the Arduino

Challenges we ran into

The first servos I used to rotate the wheels were 180 when they needed to be 360. 

Accomplishments that we're proud of

What we learned

What's next for Fighter Bots
",,https://fighter-bot-app.herokuapp.com/,,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Most Entertaining Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","arduino, servo, google-home, echo-dot, flask",,"University of Maryland, College Park",,,seanbrhn3,Sean,Brown,seanbrhn3@gmail.com,University of Maryland - College Park,1,alugo,Alex,Lugo,alugocp@aim.com,,,,,,,,,,,,
Smarthome Hub,https://bitcamp2019.devpost.com/submissions/118740-smarthome-hub,"Inspiration

I love having smart home products, but they're so bulky and hard to manage.

What it does

I built a device that is able to control so much and do it remotely.

How I built it

Using ESP8266 platform.

Challenges I ran into

Overvoltage protection.

Accomplishments that I'm proud of

Getting it all to work together.

What I learned

I learned about controlling multiple devices from one wifi board.

What's next for Remote LEDs

Implementation into my apartment!
",,,,"Best IoT Hack using a Qualcomm Device - MLH, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp","arduino, esp8266",D6,UMD,,,jacobcoop1,Jacob,Cooper,jacobcoop1@gmail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
Tabs,https://bitcamp2019.devpost.com/submissions/118746-tabs,"Inspiration
Living off campus with your close friends is a fun and rewarding experience. With new responsibilities it can be hard to keep track of the little things. Every week you are buying groceries, toiletries, dinner and many other important communal necessities. Its hard to keep track of who owes who and what your roommates already paid you for. Its also annoying to see your bank statements riddled with instant transactions. Our app plans on simplifying this process.

What it does
In essence our app keeps track of debts between small groups of friends. By inputting what you paid for and how much, the app will automatically calculate who owes debt and who has paid it off. With the option of paying off any existing debt at a later point in time, your bank statements wont be riddled with many small transactions. Splitting groceries couldn’t be easier. If you have a large debt to your friend and end up paying for his dinner, the app will automatically recalculate the amount you owe them. Eventually balancing out debts, the app hopes to mitigate the number of times you pay your close friends back and forth, helping to keep tabs, so you don’t have too. 

How we built it
Using android-studio we created the frame work you will see on your phone. Numerous back end classes control the personal data and group debt data. This was integrated into the user-friendly GUI that is simple and effective. Firebase was utilized for a registration and log in to the app. It was also used for the database to hold the group data that connects the users. 

Challenges we ran into
The first major obstacle we ran into was creating the data set and algorithm to store and go through groups. It was tough to come up with a systematic and efficient way to update and recalculate debts between different people in a group. 

Another major obstacle came with implementing Firebase into your app. Connected the authentication to our working prototype was a tedious and timely process but with persistence we were able to make it happen. Using the database part of Firebase might be the biggest challenge so far. Trying to store multiple users’ information in the cloud is a difficult process in itself, let alone trying to use the data.

Accomplishments that we're proud of
Completing the algorithm and having an awesome looking login page and user interface is extremely exciting for us. We are all first-time hackers at Bitcamp, so seeing a semi-finished product is a cool experience. 

What we learned
Integrating between backend and front end coding has been a fun and rewarding experience for all of us. We learned how to problem solve, write and test code effectively and brainstorm a fun idea. 

What's next for Tabs
Partnering with CapitalOne to make our app a reality! Connect real bank accounts and make it legit. 
",,https://github.com/bitcamp2019/piecash,,"Best Hack to Democratize Financial Services - PayPal Credit, [Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Financial Hack - Capital One","android-studio, java, firebase",,"University of Maryland-CP, PoolesVille highschool",,Google Cloud Platform,calkinsr2017,calkinsr2017,,rcalkins@umd.edu,University of Maryland - College Park,2,dmanikt,Dhruv,M,dmanikt@gmail.com,a7evan7,a7evan7,,a7evan7@hotmail.com,,,,,,,,
Cherry,https://bitcamp2019.devpost.com/submissions/118749-cherry,"Inspiration

When donating to charity, it is a hassle to take a wallet out to write a check and a hassle to carry cash. We thought there should be an easier and more convenient way to donate to charity. 

What it does

At the simple bump of a phone, a donation can be made and a tax receipt can be generated and sent to your phone by the time you walk out the door. By only requiring the user to have a mobile wallet such as Apple Pay or Android pay, our app should incentivize more people to donate money because of the simplistic nature. We also believe that by having a tax receipt generated on your phone for your donation by the time you walk out the door is another reason that people will be more willing to donate money using our app.

How we built it

We used Android studio and Kotlin to create the UI and interface of our app. Android Studio is a common way for Android development. We had no prior experience in writing Android apps as most of the team has Apple, however, we used Android because Apple does not allow the NFC reader to be used by open source development. We also did not use React-Native because it does not have support for NFC reading as well. 

Challenges we ran into

The NFC communication and NDEF was a pain to work with. To add insult to injury, one of our team members ""Enter"" key broke

Accomplishments that we're proud of

We had no prior experience with NFC's or Android studio, however, by the end of the hackathon, we created a fully functional NFC mobile application with real-time payments. We created a visually pleasing Android application with zero Kotlin experience. Integrating the NFC was quite a pain because it was written in Byte Code, but with a good amount of research, we were able to implement it and have our phones recognize each other.

We also created a web app as a landing page. It's available at easycherrytea.com

What's next for Cherry

We want to create an iOS version for the app and add support for Apple Pay.
",,http://www.easycherrytea.com,https://s3.amazonaws.com/challengepost/zip_files/production/43502/zip_files/cherry-master.zip,"[DESIGN DEN] Best Bitfolio - Bitcamp, Best Hack to Democratize Financial Services - PayPal Credit, Most Entertaining Hack - Bitcamp, Best Domain Registered with Domain.com - MLH, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Financial Hack - Capital One","java, kotlin, nfc, android, fireos, byte-code",A3,"George Mason, University of Waterloo",Amazon Fire Phone,Domain.com|-|Google Cloud Platform,HeadJar,Jared,Ponmakha,jarhead4123@gmail.com,University of Waterloo,2,saigurrapu18,Sai,Gurrapu,saigurrapu18@gmail.com,FaisalSabri,Faisal,Sabri,fsabri@live.com,,,,,,,,
PocDoc,https://bitcamp2019.devpost.com/submissions/118751-pocdoc,"Inspiration

Traditionally when patients leave in-patient care, they are sent home with a long and incomprehensible set of printed instructions for at-home care. The information provided is not organized or designed with regard to the patient's perspective and leads to many problems.

This outdated format limits the patient and their caretakers' access to important information about prescriptions, daily therapy regiments, and the course of their recovery.

For many diseases, preventing future medical emergencies is key. For example, patients that have suffered a stroke are at an increased risk of experiencing another in the first year. After leaving the hospital, these patients need to follow a strict regiment of medication and therapy. Without patients' thorough understanding of their disease and its treatment, the risk of suffering a second stroke is increased.

Another major drawback of the traditional format of patient education is the lack of dialogue between patients and their healthcare providers. If patients have questions and concerns, they will have to call through the hospital or wait until their next scheduled appointment, which can often be months away. Patients slowly lose control of their healthcare, which can lead to serious issues in mental health and hinder their recovery.

With this app, we hope to better prepare patients and their loved ones for the transition back to a healthy life and empower them to control their own healthcare.

What it does

PocDoc is a convenient and easy-to-use platform for patients and their healthcare providers to communicate and design the road to recovery after discharge from inpatient care.

From a website, doctors can view their patients, demographic information, prescription history, daily therapies, and notes. 

From a mobile app, patients can access their specific prescriptions (including information about dosage, risks and warnings, further research), ask their doctors questions through a live chat, and keep track of their daily activity tasks. Patients are able to instantly receive responses from their doctors without the hassle of setting up an appointment. 

How we built it

The mobile app is built in Flutter with Dart. 
The website portal is written in CSS, HTML, and Javascript.
The backend systems (login authentication, databases, etc) are written in Ruby and hosted on Google Cloud.

Challenges we ran into

This project involved overcoming obstacles in project and time management, collaboration on marketing and logo design, and the development of new skills (web development, CSS, difficulties interfacing the backend, working in Dart). 

Accomplishments that we're proud of

The team is proud of making a working multiplatform chat system from scratch, creating complex data storage for medications and prescriptions organized by user, implementing beautiful mobile and web UI, and building a backend system that connected the mobile app and website with http requests.

What we learned

We learned the following skills:
    - Deploying a web application
    - Using a sql database to persist information across clients
    - Web development
    - Create an app in Flutter
    - Integrating and applying these skills to a unique, real-world problem

What's next for PocDoc

PocDoc in its current state is generalized to patients recovering from any medical condition. In the future, the app can be designed to specifically address the unique necessities for a specific disease. This will be especially useful for patients that suffer from more than one condition.
",,https://github.com/JerryGQian/PocDoc,,"[DESIGN DEN] Best Bitfolio - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best Domain Registered with Domain.com - MLH, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","flutter, dart, sql, ruby, ruby-on-rails, html, css, google-cloud",A4,University of Maryland College Park,,,JerryGQian,Jerry,Qian,jerry@qian.ninja,University of Maryland - College Park,3,justinqle,Justin,Le,justinqle@gmail.com,acfrock,acfrock,,acfrock@umd.edu,aishus99,Aishwarya,Shettigar,aishus99@gmail.com,,,,
The FreeLace,https://bitcamp2019.devpost.com/submissions/118756-the-freelace,"Inspiration

The inspiration was derived from the utility of shoes found in Back to the Future Part 2, when Marty McFly travels to year 2015 and slips on the Nike Air Mags that auto-lace. In 2011, Nike brought the Air Mags to market and again in 2016, releasing only a total of 85 pairs. This gained the interest of sneaker collectors all over the world, with resale prices spiking to approximately $50,000. The team understood that the concept of self-lacing shoes could not only gain interest of sneaker collectors, but also be used as utility for patients with limited motor control and that’s what we set out to accomplish.

What it does

In essence, the concept of The Freelace is designed to assist patients with limited motor control such as those suffering from Parkinson’s disease, ALS, and muscular atrophy, with the additional capacity of remaining as a high-end, fashion statement at an affordable price. While specifically designed for a small niche market, it has wide appeal to everyone. 
As soon as the user steps into the shoe, with a simple touch of the button, the laces begin to auto-lace to the user’s desired nominal settings (tightness).

How we built it

The shoe actuates using a DC motor that is hardwired in series with three switches, the first is a button that allows for the user to set their lacing settings, and the second and third control the direction of the motor (clockwise or counterclockwise). The laces are set parallel, through the lace holes and are pulled by a singular thread through the motor that is set in the counterclockwise direction as viewed from the right. The circuitry is powered by a 9V battery strapped to the outsole of the shoe. The team went through two iterations of the product, with the second focusing on the structural integrity and mechanics of the overall design.

Challenges we ran into

The team was greatly limited by the hardware provided. Many of the parts needed were not readily available. So, we had to think creatively in order to get what we needed. We also took a lot of time physically modifying our demo shoes. The holes on the side of the shoes were initially formed with scissors and by hand, and the second was formed using a drill to create the motor housing within the insole. 

Accomplishments that we're proud of

With the amount of tools and hardware provided, we were able to fully complete the scope of our product without sacrificing essential components of the initial prototype design. The team was able to complete one iteration of the product and once it was realized that the product would not work on the one sneaker due to structural issues, we were able to make an effective design decision to scrap the old product and create a second version. 

What we learned

The team learned how to successfully develop a circuit system with proper wiring technique that would fit the need of running a DC motor in two directions without the need of an H-bridge which was not available for use, or transistors. Additionally, it was a learning experience in which calculations needed to be made in order to focus the torque of the motor to a single angular distance away from the laces to pull the laces tightly.

What's next for The FreeLace

The next steps and future design of the sneaker will consist of applying a force resistive sensor to the heel of the insole, such that when the user steps in, the laces automatically actuate to the user’s comfort setting. An additional modification would be the introduction of a secondary motor fastened to the back of the shoe in order to mechanically tighten the upper laces of high top (basketball) shoes. This would significantly add more value to the customer in the case where there will be more comfort and security, replacing the need for laces entirely.
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43505/zip_files/The_FreeLace.pptx,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","computer-aided-design, rapid-prototyping, circuit, arduino-uno",,"University of Maryland, College Park",Arduino 101,,yashm0816,Yash,Mehta,yashm0816@gmail.com,University of Maryland - College Park,2,rqyu17,Rachel,Yu,rqyu17@gmail.com,jonathannam14,Jonathan,Nam,jonathan.nam14@gmail.com,,,,,,,,
MorseLang,https://bitcamp2019.devpost.com/submissions/118757-morselang,"MorseLang

MorseLang is a programming language whose _ Source Code _ is _ Morse Code _.
For this project, I developed the MorseLang language and then I built an interpreter for it.  Come test it out and write your own MorseLang programs. 

The following file
    program.morse
.. -. - / -- .- .. -. () {
    .. -. - / -..-;
    .. -. - / -.--;
    -..- = .---- -----;
    -.-- = -----;
    .-- .... .. .-.. . (-.-- < -..-) {
        .. ..-. (-..- == ..---*-.--) {
            .--. .-. .. -. -(-.--);
        }
        -.-- = -.-- + .----;
    }
 }

Has the equivalent in a normal looking language:
int main() {
    int x;
    int y;
    x = 10;
    y = 0;
    while (y < x) {
        if (x == 2*y) {
            print(x);
        }
        y = y + 1;
    }
}

and produces output
 5

when run in MorseLang

Language Features


Static Typing
Imperative
Interpreted
.morse files
execute programs with morseLang <filename>


How I built it

With OCaml.

Challenges I ran into

Parsing a file of morse code involves some rather complex regular expressions. That was challenging.
I also didn't realize until pretty late on that the literal minus sign would be interpreted as a morse symbol the way I was doing things.  Had to make some adjustments to debug this.
I also had some weird issues with regular expression matching newlines.

What's next for MorseLang

MorseLang is the future of software engineering.  Everybody's boutta use it.  It is highly flexible, easy to use, saves a lot of developer time. 
",,,,"Most Entertaining Hack - Bitcamp, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp","ocaml, love",,UMD,,,AlexWallish,Alex,Wallish,alexander.wallish@hotmail.com,,0,,,,,,,,,,,,,,,,
Moody,https://bitcamp2019.devpost.com/submissions/118758-moody,"Inspiration

College is hard. It's hard to keep track of all your activities, classes, and other commitments while maintaining your mental health. We've been through this ourselves and seen many of our friends suffer from being too stressed and sad. We want to fix that with Moody!

What it does

Moody is a mood tracker powered by AI. It's easy to use and fast -- so it won't interfere with your day to day life. Logging an emotion is as simple as taking a selfie! Keep logging your feelings, and you'll be able to see your mood history and statistics.

How we built it

Moody's core functionality -- the quick logging -- relies on a custom ML model, which was built with TensorFlow and Keras. We use a Deep Convolutional Neural Network with a custom architecture to predict the user's emotion from a picture of their face. This model was trained on Google Cloud Platform. The AI backend then tells the web backend what emotion the person in question is displaying, which then communicates with the front end. The web backend is written in python with Flask, and the front end is written in Bootstrap and Jinja2.

Challenges we ran into

It was extremely challenging to train such a large neural network in such a limited amount of time. We had to learn how to use TPUs and GPUs to process very quickly.

Accomplishments that we're proud of

We're proud of our model and the potential of our app.

What we learned

We learned how to use ML models with web frameworks.

What's next for Moody

Moody can be used to give students tips on how to be more happy and less stressed. It can also supply data to university administration so that officials can change policy to make their students happier.
",,https://github.com/Ludikrous/Moody,,"[DESIGN DEN] Best Bitfolio - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best Use of Machine Learning - Metron, Best Moonshot Hack - Bitcamp","tensorflow, flask, opencv, python, google-cloud, keras",A5,United States,,,Ludikrous,Dhanvee,Ivaturi,astrodoge1@gmail.com,"University of Maryland - University College, Rutgers, The State University of New Jersey, University of Maryland - College Park",2,ryanmao725,Ryan,Mao,ryan.mao.725@gmail.com,pomytkin,Nikolay,Pomytkin,pomytkin@umd.edu,,,,,,,,
the.net,https://bitcamp2019.devpost.com/submissions/118759-the-net,"Just a funny website name and UI
",,http://the.net,,,,,"University of Maryland, College Park",,,geniusdipu,,,dipu18@terpmail.umd.edu,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
eyesup,https://bitcamp2019.devpost.com/submissions/118763-eyesup,"Inspiration

This project was inspired by a series of conversations I've had with friends over the years about productivity apps and techniques, and how many of them aren't very effective, at least in their experience. Since then, I've been wondering about the viability of a system that could detect when you're losing focus, and gently remind you to resume work. I hypothesized that if we could use eye tracking as a proxy for focus, we could automate this system and help people stay more focused and productive with their time, so I decided to work on a proof-of-concept here at Bitcamp.

What it does

The project is a chrome extension that tracks user eye motion, mouse, and timing patterns to identify when users are losing focus, and gently nudge them back into focus through alerts. I'm also working on fine-tuning user settings, which is currently a work in progress.

How I built it

It builds off of the webgazer.js library, 

Challenges I ran into

The webgazer.js library, which comprises the core of the eye-tracking functionality, had some compatibility issues on the current version of Firefox, so I decided to work primarily on the chrome extension. Also, the library wasn't built for web extensions, and had some compatibility issues with the web extension standards, that I had to modify for compatibility purposes. Finally, I wasn't able to commit as much time to this project as I would have liked, and working on it alone, was only able to produce a rather bare-bones proof of concept. I also discovered that the webgazer library continuously streams all of the video data into temporary local memory (after accumulating over 20gb of footage from leaving a test open for a couple hours), which still needs to be addressed before this is practical in real use scenarios.
",,https://github.com/mattjfan/eyesup,,"Best Use of Machine Learning - Metron, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp","chrome, javascript, html5, css3, webgazer, adobe-illustrator",,UMD,,,mfanstudentinbox,Matt,Fan,mfanstudentinbox@gmail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
Graphing our Energy Use,https://bitcamp2019.devpost.com/submissions/118764-graphing-our-energy-use,"Inspiration:

For many of us this was our first hackathon. We thought about TONS of different ideas, and worked on a couple of them.

What it does

It is an interactive demo that allows users to see US energy usage across the United States.

How we built it

We built it using Tableau

Challenges we ran into

It was difficult to find data that worked well with the Tableau software and translated well onto a map.

Accomplishments that we're proud of

We submitted our first project to a hackathon!

What we learned

We learned that we can do anything we set our mind to!

What's next for Graphing our Energy Use

We would like to add many more maps and datasets to our website.
",,http://soundsyncplaylist.com/,,"[Compass Challenge] Best Hack for Energy Sustainability - GOEFER, Best Domain Registered with Domain.com - MLH, Best First-Time Hack - Bitcamp",tableau,,"University of Maryland, College Park",,,samuelhowardstudent,Samuel,Howard,samuelhowardstudent@gmail.com,University of Maryland - College Park,2,nsharif,Nadir,Sharif,nsharif@umd.edu,wilfikej,wilfred,ikejofor,wilfikej@terpmail.umd.edu,,,,,,,,
Bits and Bytes,https://bitcamp2019.devpost.com/submissions/118765-bits-and-bytes,"Inspiration

We want to help fellow college students continue to manage their money. 

What it does

Stops people from spending more money than they want to when they are drinking.

How we built it

Using Capital One's Imagine Banking API, we imported its SDK into Android Studio. Then, we separated the different accounts of the customers into three activities: CreditActivity, CheckingActivity, and SavingsActivity. We then used Android's XML design to edit the page layouts of these three activities. 

The Saving's Interactive button utilizes Android's intent to go from the button press to the the user's Savings account. The page displays the current balance of the customer's savings account. 

Challenges we ran into

The biggest challenge we ran into was cloning the imported Android project into each of our laptops. Because of different OS's and different versions of Android Studio, the build gradle file wasn't functional in the other team members' machines. 

In regards to the design, custom styles (i.e. color schemas different from the default project theme) were not usable. We then had to reset and go through each of the layout elements and set them to default.

Lastly, the Manifest file did not include permission to access the INTERNET, which further hindered compiling the gradle file. 

Accomplishments that we're proud of

What we learned

What's next for BitbyBytes
",,,,Best Financial Hack - Capital One,"capital-one, android-studio, java, xml",,University of Maryland College Park,,,joshsconundrum,Joshua,Batugo,joshsconundrum@gmail.com,University of Maryland - College Park,2,rithviknair03,Rithvik,Nair,rithviknair03@gmail.com,SamyAbi,,,samy_abisaleh@yahoo.com,,,,,,,,
The Different Minded,https://bitcamp2019.devpost.com/submissions/118768-the-different-minded,"Inspiration

We were inspired by the third compass point, mental health. It also helps that we were all game developers and one of our teammates has bipolar disorder.

What it does

The Different Minded  takes the player through the truth behind dealing with mental disabilities in a social setting. Specifically focusing on the things that people say with good intentions, that simply do not help. Sometimes even having the opposite effect.

How I built it

We used the Unity Engine to create our game. This requires the utilization of C# to program. We also used some public domain sprites to make our characters and tilesets. Putting in many hours and several skillsets we made great progress on our game, that I at least personally plan to continue development on.

Challenges I ran into

I am a total newbie when it comes to C# and needed to learn some while I was here

Accomplishments that I'm proud of

I personally am very proud of having started learning C# and even getting to the point of developing parts of the game on my own.

What I learned

The programming they teach you in school is very different when you have the libraries and other features at your disposal such as with a game engine.

What's next for The Different Minded

I feel this will become a pet project for at least a couple of us, continuing to work on it to complete a full game spanning many different mental disabilities to include ADHD, the autism spectrum, schizophrenia, and others. 
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43507/zip_files/TheDifferentMinded.zip,"[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","unity, visual-studio, public-domain-sprites",,"University of Maryland, Anne Arundel Community College",Dell XPS,,OrcTechgaming,OrcTechgaming,,orctechgaming@gmail.com,"Anne Arundel Community College, University of Maryland - University College",1,adrtmrber,Adam,Rozen,adrtmrber@live.com,,,,,,,,,,,,
Mountain,https://bitcamp2019.devpost.com/submissions/118770-mountain,"Inspiration

I have been passionate about mental health stigma and the quest for constant improvement. My experiences with friends, martial arts and journey as a developer has helped open my eyes and see that almost everyone in the world is climibing a mountain. Some live for it, some find peace and settle somewhere, and some are just afraid to go. Even I would stay in comfort zones because instead of climbing and changing for the better I would improve in simply more of the same. Like I was playing checkers because I was afraid of chess. My mentor had similar experiences a long time ago and so here I am now. 

How I built it

I am a solid mobile developer and need to use my last 7 hours efficiently. I am using Swift 

Challenges I ran into

I'm dealing with the standard bugs in Xcode, aside from that, curating content in a hackathaon is tricky because of large downloads on the network

Accomplishments that I'm proud of

My first time coming to Bitcamp I was completely helpless. I relied on a senior who was a much better programmer and also relied on mentors the whole time. Here I am now solo and haven't asked for any help (nothing wrong with asking for help of course). Between that and how the theme this year fits exactly with Mountain I feel like everything is coming full circle. 

What I learned

It's been something I've been relearning and appreciating more and more: everyone has a craft, and mastery is the goal for any craftsman. I used to see things as a zero sum game, but now I see it it's all about the process and the constant improvement (my first dojo was called Kaizen MMA) and the Kaizen principle ( continuous change for the better) that the dojo takes it's name from is constantly on my mind again now that I'm back to my roots. I believe it can benefit anyone struggling mentally, physically, and spiritually.

What's next for Mountain

After Bitcamp I'm going to keep coding it and put it up on Testflight to get some insight from peers.
",,https://github.com/Fabreeze23/Mountain,,"[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","swift, firebase",F6,JMU Recent Grad (August 2018),,,fabreeze23,Fabrice,Mulumba,fabreezem@yahoo.com,,0,,,,,,,,,,,,,,,,
ReadySetSet,https://bitcamp2019.devpost.com/submissions/118772-readysetset,"Inspiration

""SET, the family game of visual perception"" is a game that rewards quick pattern matching and methodical analysis. The rules of the game are simple to understand, but hard to master: your job is to find sets of 3 cards that for which each of the 4 features that describe each card are either all the same or different. We decided that by applying AR, we could quickly teach new players the rules of the game and help them play competitively against their more experienced friends.

What it does

ReadySetSet is an Android phone application that overlays helpful prompts over the phone camera input to provide an augmented reality game experience. By scanning the playing area with your phone, you can use ReadySetSet to identify the presence or absence of potential sets in the playing area and reveal hidden sets if you are stuck.

How we built it

We used the OpenCV library as the backbone for our computer vision system to recognize and classify playing cards. There were prototyped in python and then ported to an Android app. To classify playing cards, we used tools such as Histograms of Oriented Gradients, Support Vector Machines, and (Michael).

Challenges we ran into

The OpenCV library for Android is lackluster compared to its Python counterpart, so a large part of our development time was spent porting our computer vision code. In addition, our classifier for detecting patterns on playing cards suffered due to lighting issues, which meant spending a lot of time retraining our classifier to improve accuracy. Also, a significant hurdle was (Michael's stuff)

Accomplishments that we're proud of

This project had a large computer vision aspect. Being able to synthesize multiple computer vision techniques into a seamless AR experience was a large undertaking unto itself, and so for us to be able to deliver a great product is enough cause for celebration!
",,https://github.com/mitchellroberts2015/ReadySetSet,,"Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit","opencv, android, android-studio, python, machine-learning, computer-vision, set, computers, algorithms",O6,UMD,,,atran39,atran39,,akt.tran@yahoo.com,"University of Maryland - College Park, University of Maryland - University College",2,MichaelStevens,Michael,Stevens,mls0.5mv2@gmail.com,mrr2019,Mitchell,Roberts,mrr2019@umd.edu,,,,,,,,
BitCamp2019_FDA,https://bitcamp2019.devpost.com/submissions/118774-bitcamp2019_fda,"Inspiration

The project started off with us trying to predict fraudulent brokers based on the given dataset. It later culminated into multiple Jupyter notebooks of scientific analysis and Data Visualization.

What it does

Provides Visualization of multiple firms throughout the United States and employes that have indulged in fraudulent activities in the past. Also provides statistical analysis of the Dataset provided by Finra.

How we built it

We parsed the given XML files using lxml parser in Python after reading through the documentation provided. We used pandas to convert the xml files to Dataframes. We extracted the key features that we deemed necessary and performed feature engineering. We used the Google cloud api to get the geocodes for the locations of the firm and we used the folium api to represent the derived firm locations on the map. We also used Google collab to perform machine learning(Deep Neural nets) since they provided an online GPU.

Challenges we ran into

We planned on delivering a front end dashboard to represent better UI experience to the users, but could not deliver.

Accomplishments that we're proud of

It was a learning process, we were able to deliver some beautiful visualizations, implemented and successfully ran a machine learning algorithm on the dataset the we feature engineered, established cloud connection with Google credits provided. 

What we learned

The workflow of performing data analysis and exploring huge datasets, also we learned a lot about the Financial industry through the Finra dataset and website.

What's next for BitCamp2019_FDA

We are going to complete the UI, incorporate a bigger dataset that we are currently scraping so that we have features to run the deep learning algorithms on.
",,https://github.com/ArthDh/BitCamp2019_FDA,,"Best Hack to Visualize Mortgage Loan Performance - RiskSpan, Best App or Site for Investment Advisor Rep Report - FINRA, Best Use of Machine Learning - Metron, Best Hack to Democratize Financial Services - PayPal Credit, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Financial Hack - Capital One","python, pandas, matplotlib, keras, jupyter, google-drive-api, google-maps",,Rutgers University - Camden,,,ArthDh,Arth,,arth.dharaskar97@gmail.com,"Rutgers, The State University of New Jersey",0,,,,,,,,,,,,,,,,
Evia,https://bitcamp2019.devpost.com/submissions/118777-evia,"Inspiration

At my time while volunteering at a hospital, I observed that often there would be EMS bringing in patients without being able to check if the hospital actually had rooms and beds available in the Emergency Room. There were doctors and nurses running from patient to patient, getting information from each person and trying to decide who to see first all the while as EMS brought in more patients. It was chaos and I thought that there had to be something to change this problem and help both the staff and patients get the efficiency and care that they deserve.

What it does

This application is meant to be used on a tablet or something similar by EMTs in ambulances. This application takes out the guesswork and luck of finding an open bed in a hospital and optimizes routing, keeping in mind the sensitivity of time and the PT's vitals. Additionally, this application allows for the flow of information directly from the ambulance to a waiting doctor in an ""open-bed"" hospital, which allows the patient to receive care faster and without the hassle of extended paperwork.

How we built it

We used the Python Flask framework to build this application. We also utilized the ArcGIS API to make the mapping and destination routing possible. There is a certain amount of machine learning implemented as well, with the use of Custom Vision from Microsoft as a means of helping EMTs sign in to the system at the beginning of their shift.

Challenges we ran into

We had to learn how to use ArcGSI. It was also Shrabonti's first hackathon and first real coding heavy project. It was a challenging, yet rewarding time having to adapt to the new types of challenges for her.

Accomplishments that we're proud of

We are proud of the fact that we have a functional prototype of the initial vision of the application. All of the components we wanted to implement are here in some fashion.

What we learned

We learned the importance of time management and working under pressure. It was also interesting learning about how ArcGSI functioned and its uses in this field. 

What's next for Evia

We want to show off this idea to people and see what they think. Everyone's feedback would mean a lot!
",,,,"Best Hack with Esri APIs and SDKs - Esri, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","flask, python, javascript, esri, css, html5, google-cloud",,"University of Virginia, Montgomery College",,,sg4fz,soukaryag,,sg4fz@virginia.edu,"University of Virginia, Montgomery College",1,bonnie15649,bonnie15649,,shrabonti.turna@gmail.com,,,,,,,,,,,,
Dapper Dogs,https://bitcamp2019.devpost.com/submissions/118780-dapper-dogs,"Inspiration

We all like seeing cute pictures of dogs

What it does

Decentralized social media site used to create profiles for dogs and share images of them

How we built it

We used javascript and HTML to create the social media website, with Blockstack implemented in order to decentralize data storage 

Challenges we ran into

Storing user data through Blockstack was difficult, especially for images, as only strings could be stored, learning new frameworks

Accomplishments that we're proud of

Learning new, challenging concepts while creating a fully-functioning website

What we learned

We all learned a lot about the functionality and benefits of decentralized data, and we sharpened our web development skills as well

What's next for Dapper Dogs

Deploying to a domain
A feed tab displaying friends photos
A functioning friend's list
",,https://github.com/ryanlee002/dapper-dogs,https://s3.amazonaws.com/challengepost/zip_files/production/43612/zip_files/dapper-dogs-master.zip,"Best use of Blockstack - MLH, Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","javascript, html, blockstack, react",,University of Maryland - College Park,,Blockstack,johnm216,johnm216,,johnm216@terpmail.umd.edu,University of Maryland - College Park,3,ryanlee002,ryanlee002,,ryanizorx@gmail.com,jayankamdar,Jayan,Kamdar,jayankamdar@gmail.com,ananth3rao24,Ananth,Rao,ananth3rao24@gmail.com,,,,
Partify,https://bitcamp2019.devpost.com/submissions/118781-partify,"Inspiration

Have you ever been in a car with your friends and passed around a single phone in order for everyone in the car to play songs that they want? Well, say goodbye to those archaic days. 

What it does

Partify is a cross-platform Spotify-powered app that enables users to create and host parties where multiple users search for tracks to add to a singular queue, no longer requiring the tiresome effort of DJ'ing for your group of friends. 

How we built it

The app was built in React-Native, while the server functionality was written in Node.js, using WebSockets to transmit information between the server and the clients. Spotify playback was accomplished using an npmjs package that ported Spotify's native SDK modules into a React Native framework.

Challenges we ran into

None of us had ever worked with WebSockets in the past, and the steep learning curve of the technology made it quite difficult to integrate our server with the clients. Another challenge was passing data between the various screens in the application and creating host-specific and client-specific screens.

Accomplishments that we're proud of

Despite our lack of knowledge regarding certain required elements of our project, we were able to learn and integrate multiple technologies within our time constraints. Furthermore, we are especially proud of the fact that no other applications currently exist that seamlessly implements group queues with music streaming services.

What we learned

We legitimately believed that this project may have been impossible prior to attempting it, due to Spotify's API being relatively complicated and limited. Through this process, we came to the realization that nothing in CS is truly impossible, given enough thought.

What's next for Partify

Integration of user playlists to be added to group queues and integration with both iOS and Android to be able to control playback from the OS defined playback controls.
",,https://github.com/SphinxNumberNine/Partify,https://s3.amazonaws.com/challengepost/zip_files/production/43512/zip_files/screenshots.zip,,"node.js, react-native, mongodb, heroku, html, css, jsx",,"University of Maryland, College Park",,,SphinxNumberNine,Ashwath,Krishnan,ashwathkrishnan@yahoo.com,University of Maryland - College Park,2,aks123aks,Akshay,Kumar,aksh007kumar@gmail.com,tejaslatupalli,tejaslatupalli,,tejasreddy@yahoo.com,,,,,,,,
Air Guitar Hero,https://bitcamp2019.devpost.com/submissions/118782-air-guitar-hero,"Inspiration

We were of course inspired by Guitar Hero and the Nintendo Power Glove. We took interest in alternative controllers, and tried to give our spin on these ideas using a pair of gloves and different components.

What it does

It lets you play your favorite songs on any rhythm game with only a pair of gloves!

How we built it

We acquired 5 flex sensors and an accelerometer, then carefully mounted these components to two gloves. We wired everything through an Arduino Uno Rev3, allowing us to organize our output and map it all to corresponding keys. We coded queues for each input, trying our best to match the movements you'd make with an actual guitar. Through sweat, blood, and tears, we ended up with a cool and functional alternative controller.

Challenges we ran into

Originally we tried to use two Arduinos, connecting one (an Arduino/Genuino 101) via bluetooth. The Arduino/Genuino 101 had an on-board accelerometer, so we attempted to use that to measure if a player was ""strumming"" or not. We had a lot of trouble getting the Arduino/Genuino 101 to output data that could be easily interpreted for a game, so we attempted to wire it to our other Arduino (the Arduino Uno Rev 3) in order to make use of the data from the accelerometer. The delay between them was too great, so we instead wired our standalone accelerometer to our other Arduino (the Arduino Uno Rev3), which could simply mimic a keyboard. Additionally, we had to flash custom firmware onto the Arduino Uno, as it did not have onboard HID support. All input needed to adhere to the poorly-documented communication protocols through the USB output on the Arduino. Finally, the delays required for input to properly register required rigorous testing and fine tuning in order to properly activate on a given note's threshold.

Accomplishments that we're proud of

We got 54% accuracy on the Guitar Hero 3 chart of Slow Ride using our full functionality!

On a more serious note, we are very proud of creating a device that can be used to mimic playing a guitar. We feel that we did well to interpret the movements that a guitar player would make, utilizing some unique sensors and equipment. We utilized our electrical engineering knowledge to get accurate readings from these sensors. The accuracy we achieved with our alternative controller is satisfactory, matching a user's intentions fairly well. The fact that we were able to leverage custom firmware to build a custom input device that ended up so relatively comprehensive and whole, in just a few hours, is immensely satisfying. 

What we learned

We each came into this with some prior knowledge of the systems we'd be using, but each of us came out of this ordeal with some new skills. Some of us learned how to work with git, some of us learned how to solder, some learned how to program Arduino microcontrollers (and how to interpret the output of the various sensors that could be used with them), and some learned how to wire simple (but practical) circuits.

What's next for Air Guitar Hero

With some more time and money, we could certainly acquire better components and make everything wireless, making it an actual air guitar! We'd also be able to improve the accuracy of inputs and more easily fine tune the controller to each player, making for a more satisfying user experience. 
",https://youtu.be/-7MaMpH7oXk,https://github.com/MinyaRancic/Air-Guitar-Hero,,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","arduino, github",D7,University of Maryland - College Park,Arduino 101,,wsfpower,William,Fisher,wsfpower@gmail.com,University of Maryland - College Park,2,whatsGravity,Mihailo,Rancic,rancic.minya@gmail.com,johnmrichards2017,John,Richards,johnmrichards2017@gmail.com,,,,,,,,
Car-kill-ator,https://bitcamp2019.devpost.com/submissions/118783-car-kill-ator,"Inspiration

404 Error: answer not found

What it does

The Car-kill-ator allows the user to easily input their commute to and from two separate locations. Our website then imports the current day, time, and speed-limit to predict the likelihood that a driver will crash on their designated path. This overall percentage is composed of several percentages that describe the crash chances for smaller road segments. These segments are displayed on a map, and list theoretical distance traveled and sped on the roads.

How we built it


found appropriate data sets
created a model to determine the risk factor of driving on road segment using machine learning
designed a webpage that inputs a google maps trip to predict the crash probability of a driver
use multiple APIs from Google and other sites to obtain road information necessary for the calculations
use server requests calling as well as python function calling to obtain necessary data


Challenges we ran into


how to choose what data to use
Information within databases was inconsistent
time-constraint of the competition lead to abandonment of certain parameters (weather most prominently)
limited prior knowledge with many of the needed language
consistent color gradient to probability depiction


What we learned


Hackathon is pretty cool
It is important to make a detailed and structured plan from the beginning
Have a basic understanding of multiple programming languages is necessary
Asking for mentorship could have been beneficial
Our understanding of programming languages is not enough


What's next for Car Crash Probability Calculator


Use of more parameters to more accurately predict the crash probability 
Possibly include more data set to allow more calculation

",,https://github.com/brianhoy/Bitcamp2019,,"Best Use of Machine Learning - Metron, Best First-Time Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","api, machine-learning, google-cloud, google-maps, google-directions, python, javascript, excel, tensorflow, keras, google",,"UMD, UMBC",,Domain.com|-|Google Cloud Platform,gkroiz1,Gerson,Kroiz,gkroiz1@umbc.edu,"University of Maryland - Baltimore County, University of Maryland - College Park",2,yoyo350796669,Yi Chen,Fu,yoyo350796669@gmail.com,vulnic123,Vladimir,Leung,vulnic123@gmail.com,,,,,,,,
Dynamic Music based Fiber-Optic Skirt ,https://bitcamp2019.devpost.com/submissions/118785-dynamic-music-based-fiber-optic-skirt,"Inspiration

This month is Penn State's LGBTQ pride month, and this upcoming Friday is the LGBT roundtable and QTPOC student drag show.  With the HackPSU's technology team visiting Bit Camp, and one of our own, Dave, performing in the show, we decided to collaborate on a costume that involves wearable technologies.  

What it does

The skirt illuminates its length using side emitting PMMA fibers.  The illumination pattern is generated on the fly by an Arduino Uno, and is synced to music listened to by the microphone in the waistband.  

How we built it

The electrical components were wired point-to-point using jumper cables since it's a relatively simple circuit.  The code was written in C++ using Arduino studio, and the skirt itself was a rather arduous task, involving hours of labour by our team.  The dress was created by cutting fiberoptic lines to size and then embedding them into tulle by folding the tulle over itself.  These fibers were then rejoined at the waistband of the dress and will be attached to the LED strand later. 

Challenges I ran into

Digital signal processing is HARD and component selection is sometimes not easy.  We thought that a microphone with an analog amplifier was purchased, when in fact one with a comparator was purchased, giving minimal resolution to the data.  The BeagleBone Black that was initially to be used proved to be ineffective since its filesystem was in a read only mode, leaving us stranded on Arduino with insufficient computing power to perform robust signal processing.  MATLAB was used to generate Arduino code, but this proved ineffective too since the host computer was unable to process the audio effectively.  This left us with an underpowered MCU and an interesting problem.

Accomplishments that I'm proud of

Our codebase squeezes every last drop of performance from the Arduino without moving to AVR assembly code; loops are unrolled using GCC preprocessor commands, and some clever signal processing tricks are used to create the LED effects in a way that most people will find sufficiently synced to music.  We were especially pleased to find that the LEDs sync to the soundtrack to the drag show impressively well.  We were also proud to have fabricated such a skirt in such a short timeframe and to have found this design as a cost saving measure over using thousands of LEDs.  

What I learned

The team received a big refresher on signal processing, fiberoptics, and micro controller programming.  As a team of mixed experience, we all learned different things, with the younger members learning more technical skills and older members learning how to share their skills more effectively.  The team also learned about tailoring and how to construct a tulle skirt, which for most was a new experience.  

What's next for Dynamic Music based Fiber-Optic Skirt

We want to bond the LEDs to the fibers and use a more powerful processor to run a Sparse Fourier Transform and have the LED color be frequency dependent and the brightness to be volume dependent.  We would also like to consider the possibility of revisiting pregenerated patterns in a more optimized scenario.  We may also investigate integration with home audio systems for a unique home lighting solution.  
",,https://github.com/david-samuel-mcdermott/LitMusic,https://s3.amazonaws.com/challengepost/zip_files/production/43514/zip_files/LitMusic-master.zip,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Most Entertaining Hack - Bitcamp","arduino, leds, c++, fiber-optic-cables, signal-processing",,Pennsylvania State University,,,thepbjain,Pranav,Jain,pranajain@gmail.com,Pennsylvania State University,4,mdh5389,Matthew,Heilman,mdh5389@psu.edu,DavidMcDermott,David,McDermott,davidsamuelmcdermott@gmail.com,stan29308,stan29308,,stanleykwok61@gmail.com,jmmccarthy2277,Julia,Mccarthy,jmmccarthy2277@gmail.com
Stray Animal Map ,https://bitcamp2019.devpost.com/submissions/118790-stray-animal-map,"Inspiration

What it does

There are two components to Stray Animal Map: the mobile app and Esri Cloud Services.

1) User opens app to a map of his current location. Nearby stray animals sightings will be shown on the map as clickable dots that show more information about the stray animal.

2) Map is created using ArcGIS API

3) User can also report a stray animal sighting, citing information about what species, health condition, and an image of the animal.

4) Information, along with user's current locatio,n is sent to the Esri Cloud Services where it is processed.

5) Map services are updated with the newly reported stray animal sighting.

How we built it

Android SDK - used to develop the mobile app

ArcGIS API - used to develop the map interface 

Esri Cloud Services - used to update and store all stray animal sightings on a server.

Challenges we ran into


We originally wanted to use firebase as a server but that became very cumbersome so we switched to use Esri's cloud services. 
Documentation for Esri Cloud Services and ArcGIS was not intuitive and it took considerable time to get our ideas off the ground.


Accomplishments that we're proud of


Successfully creating a map application using ArcGIS API and Esri Cloud Services that updates in real time.
Integrating camera use and an image preview into the mobile app.


What we learned

Michael


API documentation isn't always completely up to date (often times newer documentation will have the similar method or variable calls with minor changes). Also code-auto complete is a blessing. 
Implementing various functions into an Android app (camera function and image preview). 


Eric


Asynchronous functions are difficult to deal with but can be useful when done right
I learned more about creating and communicating between Android Activities


What's next for Stray Animal Map

Since the app is heavily reliant on crowd sourcing, we will need to need to popularize the app before it will have a decent number of stray animal sighting reports. We also hope to clean up the code and optimize it better to better take advantage of the highly asynchronous nature of the ArcGIS SDK.
",,https://github.com/mli25782/stray_animal.git,,"Best Hack with Esri APIs and SDKs - Esri, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","android-studio, ersi, esri",,"University of Maryland, College Park",,,mli25782,Michael,Li,mli25782@terpmail.umd.edu,University of Maryland - College Park,1,ericwzc,Eric,Wei,ericwzc@terpmail.umd.edu,,,,,,,,,,,,
Better Discourse,https://bitcamp2019.devpost.com/submissions/118791-better-discourse,"Inspiration

We wanted better discourse on campus

What it does

It uses NLP to recognize cognitive distortions and recommends better ways to phrase a sentence
",,,,,,,Princeton,,,AdaNguyenx,Ada,Nguyen,lbn@princeton.edu,"Princeton University, University of Maryland - Baltimore County",2,jlchavez,Justin,Chavez,juscha1@umbc.edu,LanchiBNguyen,LanchiNguyen,,lanchib.nguyen@gmail.com,,,,,,,,
 XR Finance Simulator,https://bitcamp2019.devpost.com/submissions/118792-xr-finance-simulator,"XR Finance Simulator

Inspiration


The college students struggle to pay their bills is real and so is the struggle to help Earth bounce back from decades of wasteful habits that have impacted our environment.


What it does


The program integrates XR technology and a front end web application with a customized back end API that transmits real-time user data to calculate the users' excess water and electricity bill consumption, as well as the potential financial savings that the user will benefit from by cutting back on wasteful day to day habits- such as leaving the water off when brushing teeth, taking shorter showers, etc.


How we built it


After a intense brainstorming session, our unity savvy team mate began the initial user interactivity design while our web dev pro began the backend database set up using Express, and the last team mate researched relevant content to develop the equations integrated in the program.


Challenges we ran into


Some of the biggest challenges we faced was getting the Magic Leap and the backend API to successfully interact and transfer data in real time, overcoming unity not allowing deserialization with nested array for JSON files and configuration of the back end and front end to talk to each other on the google cloud app engine deployments.


Accomplishments that we're proud of


The accomplishments we are most proud of is getting unity to comply with the API's JSON by discovering and integrating a simpleJSON.cs plug-in and making the user aware of the impact of mitigating wasteful practices has on the environment and their finances.


What we learned


What we learned is that what seems impossible in the beginning can be accomplished with hard work, perseverance and imagination.


What's next for XR Finance Simulator


XR Finance Simulator may in the future evolve to include more user interactivity to allow various types of financial calculation to invest in alternative energy-conserving solutions.

",,,https://s3.amazonaws.com/challengepost/zip_files/production/43583/zip_files/XRFS.pdf,"Best Hack to Democratize Financial Services - PayPal Credit, [Compass Challenge] Best Hack for Energy Sustainability - GOEFER, [Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Financial Hack - Capital One","unity, c#, javascript, mongodb, mongoose, node.js, express.js, react, google-app-engine, lumin, magic-leap",H11,"University of Maryland Baltimore, University of Maryland Baltimore County, University of Maryland College Park",,Google Cloud Platform,kulriz,kulriz,,krizvi1@umbc.edu,"University of Maryland - Baltimore County, University of Maryland - College Park, University of Baltimore",2,Ben624,Ben,Eisner,beisner@terpmail.umd.edu,cannguyen4896,Can,Nguyen,cannguyen.4896@gmail.com,,,,,,,,
Procedural Music Generator,https://bitcamp2019.devpost.com/submissions/118794-procedural-music-generator,"Inspiration

Video games that produce music based on the current state of the game

What it does

Creates a complex system using cellular automata, and builds a score out of it, and plays notes over the score.

How I built it

Lots of Google, and some tinkering around with sounds in Java

Challenges I ran into

Chords (multiple notes at once). Visualizing the automata using grids in Java.

Accomplishments that I'm proud of

Making it!

What I learned

Grids in Java, Cellular automata, Some music theory, etc.

What's next for ProcMusicGen

Ability to change the seed, scale, speed, etc. to produce all sorts of sounds based on criteria.
",,https://github.com/stephenriska123/ProcMusicGen,,"Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp",java,,University of Maryland,,,stephenriska123,Stephen,Riska,stephenriska123@gmail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
Project Vulcan,https://bitcamp2019.devpost.com/submissions/118797-project-vulcan,"Lots of people enter the workforce not quite prepared for the journey ahead of them. This application was meant to help people learn their weaknesses and the skills they are lacking in the workforce, and to set them on the right track to improving themselves. 
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43517/zip_files/Methods.java,"Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo","java, gui",,"umbc, mc",,,ynawrozie,Yasmin,Nawrozie,ynawrozie@gmail.com,"Montgomery College, University of Maryland - Baltimore",1,AnyaHossaini,Anya,Hossaini,anya.hossaini@gmail.com,,,,,,,,,,,,
WalkYourBrain,https://bitcamp2019.devpost.com/submissions/118801-walkyourbrain,"Inspiration - Many people sacrifice exercise for the sake of studying.  We wanted to connect mental and physical health.  What better way than to combine exercising and studying.

What it does - Allows users to create and play puzzles.  The purpose is to allow users to study while being on the move.  Pop ups filled with crowd generated questions will be presented and users must solve these questions in order to be given the next location.  This forces users to study while being on the move.

How I built it - We acquired many pieces of knowledge that we utilized through Android Studios to develop this application.

Challenges I ran into - There was difficulties generating pop ups at locations.

Accomplishments that I'm proud of - We have enchanced other people's educational values because consumers are able to combine exercising and studying.

What I learned - We learned how to better interact with a widely used platform, Android Studios.  We learned how to implement different APIs such as the Google Maps API from Google.

What's next for WalkYourBrain - We want to tell users the distance they have traveled in total.  Another is to create leader boards: one is a player version, the other is a creator version.
",,https://github.com/opiumind/WalkYourBrain,,"Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Hack for Education - Bloomberg LP","android-studio, google-maps, google-cloud, java, xml",,"George Mason University, Norther Virginia Community College",,,Palung,Palung,,palungchandra@gmail.com,"Northern Virginia Community College, George Mason University",3,Opiumind,Olga,Lisovskaya,thebestladyfox@gmail.com,YDessalene,YDessalene,,ydessalene@gmail.com,Nlallard,Nlallard,,nallard@att.net,,,,
Dragon Saver,https://bitcamp2019.devpost.com/submissions/118802-dragon-saver,"Inspiration

About Phantom energy:
    When equipment and appliances are turned off, they often continue to draw electricity from the outlet at a slightly lower rate, this is called the standby power. Many American are not aware of this situation or it is EXTREMELY inconvenient to unplug the appliance every time after use. About 5%-10% electricity used are loss to phantom electricity and such loss has left a significant impact on the U.S. economy and environment. The U.S. loses about 45 TWh/year and $5.4 billion per year and it increases CO₂ emission by 27 MT/year. More information here. We seek to help people save power by avoiding unnecessary phantom Energy.

What it does

There is multiple modes for the user to choose from: Manual Mode, Sleep Mode, Home Mode, and Custom Mode. All these modes will be applicable in an android app, where the user can change the settings for each mode.

Manual Mode: The user can choose individual appliance to turn on and off.

Sleep Mode:The user can set bed time and which appliance will be turned off during that time.

Home Mode: The user can set home location and choose what will be turned off when they leave the home parameter.

Custom Mode: Similar to a parent control mode, where the user can control at what time an individual appliance will be turned on.

How we built it

Software:
The android app was built through android studio
Hardware:
The Sparkfun ESP32 Thing will read the data, containing the id and the status(on/off) of the appliance, from the Firebase. The ESP32 will then interpret these data and send digital(3.3V) digital to the corresponding appliance pins on the Dragonboard 410c and the mezzanine board. The Dragonboard constantly monitor changes in the target status of the appliances through these pins and send digital(5v) signal to a relay that toggles the appliance on or off to meet the target status.

Challenges we ran into

1.Having the Dragonboard run code on start up

2.Connecting android to firebase to ESP32 to Dragon Board


Stripping, wire stripping


4.Configuring the mezzanine board

5.Getting the google maps API to work

6.Setting the timer for timed modes

Accomplishments that we're proud of

The logo

controlling house appliance from android app

time selection

What we learned

Dragonboard 410c
more terminal code and linux configuration
more android studio
time selection and timer in android studio

What's next for Dragon Saver

simpler design: each relay could be controlled with a wireless module and a 5v power supply, that will eliminate the need for long entangled wires
",https://youtu.be/2e0N2MO3ntc,,https://s3.amazonaws.com/challengepost/zip_files/production/43624/zip_files/github_link.txt,"Best IoT Hack using a Qualcomm Device - MLH, [DESIGN DEN] Best Bitfolio - Bitcamp, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, [Compass Challenge] Best Hack for Energy Sustainability - GOEFER, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Financial Hack - Capital One","dragonboard, arduino, android, android-studio, google-cloud, firebase, mezzanine-board, esp32-thing",A6,College of William and Mary; Governors School for Science and Technology,DragonBoard 410C,,pebble14,Boheng,Mu,mub917@gmail.com,College of William and Mary,2,Shouzhuo,Shouzhuo,Sun,ssun03@email.wm.edu,ymu,Yingxu,Mu,ymu@email.wm.edu,,,,,,,,
Blue Bird,https://bitcamp2019.devpost.com/submissions/118805-blue-bird,"Inspiration

Communities from around the world are connected with others in today's globalized Internet...thanks in part to Twitter, Facebook, and other social mediums. People are aware of what happens around the world...but what about within their own community? After all, nations are forged together by the bonds of local communities. 

We saw that on Twitter, there is a list of top tweets nationwide and globally; we wondered if we could create a website that sources the top tweets from a user's locality...

What it does

Our project scours the Twitter API (specifically, the Tweepy python framework) for tweets within or close to a user's zip code. These tweets are then displayed in our front-end website for the viewing pleasure (and awareness) of our users!

How we built it

The Backend - Cris and Tony

Python program used the Twitter API to source tweets from a list of keywords we load into it. The keywords represent the major social issues of our times. Once the tweets are sourced they are ported over to another python program for further processing. This Python/Flask program sources tweet posts from a Json formatted input, converts the dict generated by loading the tweets into workable objects from which we could apply our methodologies. Specifically speaking, we sorted the tweet posts by popularity (i.e. # of retweets + # of favorites), obtained the tweet id's which we then load into our web application. Ultimately, the end product is the five most popular posts that relate to a major social issue which is the centerpiece for our web application. 

The Frontend - Harish and TJ 

The UI is powered with React.js...we created a form that allows users to enter their town. This is then sent to our Flask server, which sends back a resulting JSON with identifiers for locally sourced tweets. This JSON is then used to render tweet components and popular hashtags. 

Challenges we ran into

We had a lot of git conflicts where pushes and pulls were conflicting making it very difficult to collaborate on this project. We ran into a lot of problems with the Flask server and the React.js server request.

Accomplishments that we're proud of

We have a nice website that sources popular tweets from around the community and achieves our mission statement. We finished our first hackathon project --- actually, not quite. But we did go far enough!

What we learned

We learned ALOT about Flask, React.js, git, and web development throughout the course of this project. This was the first hackathon project for all of us, and we look back on it with a sense of accomplishment.

What's next for Blue Bird

Better, intuitive UI with dynamic content...more parameters to filter tweets...possibly using natural language processing to conduct sentiment analysis, and possibly also Machine Learning.
",,,,"[Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","flask, react, python, javascript",,University of Maryland - College Park,,,tovohajarxr,tovohajarxr,,hajaranthony@gmail.com,University of Maryland - College Park,2,HKumar99,Harish,Kumar,harishsenkumar@gmail.com,shresthatj,TJ,Shrestha,shrestha.tj@gmail.com,,,,,,,,
Sunburn Sundial,https://bitcamp2019.devpost.com/submissions/118806-sunburn-sundial,"Inspiration

From the perspective of some pasty STEM students, none of wanted to up and fry this summer! Keeping this in mind, we decided to create a mobile app to help ensure we're able to spend some time having fun in the sun, without the painful experience of sunburn the day after. 

What it does

Our app uses GPS coordinates of the user upon launching the app in order to pull the current UV index at your place and time. The user is then able to select a skin type similar to their own shade in order to generate a general time estimate of how long the user will be able to stay in the sun before getting sunburn, This time estimate also acts as a countdown timer and will begin counting down after pressing a specific button to indicate that you have now begun exposing yourself, going outside.

How we built it

The entire app is built through Android Studio. We used Google Play Services to access the user location after permissions (Google Map Services). We made a simple, intuitive UI that allows the user to play around with different skin-types and how their exposure time limit changes accordingly. 

In order to get the current location/date&time UV Index, the app sends an okhttps3 request to openUV , which responds with a JSON containing the necessary info.
All other elements of the app were created using features of the Android SDK. 

Challenges we ran into

Figuring out how to access the user's location and use its required permissions was tricky. 

The rest was mostly smaller things, like designing UI.

Accomplishments that we're proud of

Accessing the user's location and request permissions.

Making an intuitive UI.

What we learned

1) Android Studio is a demon of an IDE

2) Hackathons are fun. 10/10 would do again.
",,https://github.com/BenLin00/Sunburn-Sundial,,"[Compass Challenge] Best Hack for Energy Sustainability - GOEFER, Most Entertaining Hack - Bitcamp, Best Domain Registered with Domain.com - MLH, [Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp","android-studio, java",,University of Maryland,,,BenLin00,Benjamin,Lin,blin1@umd.edu,University of Maryland - College Park,2,octapus,Arden,Zhang,azhang24@umd.edu,BenMessing,,,bm121512@gmail.com,,,,,,,,
SMorse,https://bitcamp2019.devpost.com/submissions/118807-smorse,"SMorse



SMorse is a mobile application built with Android Studio using Java. When you send a text message through SMorse, the message gets encoded into Morse code.  

SMorse is a Bitcamp 2019 project created by a team of three developers: Akshay Anil, Satya Gandham, and Kevin Hong.
",,https://github.com/kevinh415/SMorse,https://s3.amazonaws.com/challengepost/zip_files/production/43519/zip_files/SMorse.zip,"Most Entertaining Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Hack for Education - Bloomberg LP",java,,"University of Maryland, College Park",,,kevinh415,Kevin,Hong,kevinh415@gmail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
BACWatch,https://bitcamp2019.devpost.com/submissions/118810-bacwatch,"Inspiration

According to a national survey almost 60 percent of college students ages 18-22 drank alcohol in the past month, and almost 2 out of 3 of them engaged in binge drinking in the past month. Drinking affects college students, their families, and college communities at large.

What it does

The app allows its users to keep track of their Blood Alcohol Concentration (BAC) based of their height, weight, gender and alcohol intake. The BAC is calculated using Widmark's Formulation, which should provide a more accurate reading.

How we built it

We built it using Android Studio, and java.

Challenges we ran into

It was our first time using Android Studio, so it took a considerable amount of time of working out the specifics of the program. There were also small certain details that we struggled to develop in the course of develop the entire app.

Accomplishments that we're proud of

Managed to build a somewhat function app, that accurately calculates BAC.

What we learned

Learned how created android applications.

What's next for BACWatch

Finishing off the the app, and making more presentable and user friendly.
",,,,[Compass Challenge] Best Hack for X* - Bitcamp,"java, android-studio",,University of Maryland,,,MarkAnthonyNgo,Mark Anthony,Ngo,markanthonyngo@gmail.com,University of Maryland - College Park,1,TommyYangMD,Tommy,Yang,tommyyangmd@gmail.com,,,,,,,,,,,,
Risk Data Analysis,https://bitcamp2019.devpost.com/submissions/118814-risk-data-analysis,"Inspiration

I wanted to use the machine learning concepts I've learned in my classes, and the dataset from Risk Span seemed interesting. I hope to go into Data Science and risk management is a large area of that field. 

What it is

My final result is a Jupyter Notebook hosted by Google Collaboratory accompanied by some visualizations created in Tableau. This details the process I went through during Bitcamp 2019. 

How I built it

I started off nieively hoping I could intuitively understand the mortgage terminology in the data. This was a mistake as I spent far too much time looking at the data without context for the numbers I was seeing. 

Challenges I ran into

Time was the largest obstacle, even more so than other hackathons I have been to as I was working alone. I tried to find others interested in machine learning and looking for teammates, but that journey was not successful.

Accomplishments that I'm proud of

I am very proud that I managed to submit a project alone especially considering I had no prior knowledge regarding mortgage loans and spent a decent amount of time doing research. I am also proud of the visualizations I made with Tableau as it was my first time ever using this software. 

What I learned

I learned how to use Google Collaboratory, some Tableau basics, as well as the struggle of submitting a project alone. I must say I far prefer the team experience. 

What's next for Risk Data Analysis

I hope to use this data set to gain experience with more complex machine learning algorithms that I have only learned about conceptually so far like Neural Networks and unsupervised learning techniques. 
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43587/zip_files/bitcamp-2019_2.zip,"Best Hack to Visualize Mortgage Loan Performance - RiskSpan, Best Use of Machine Learning - Metron","riskspan-data-set, python, tableau, pandas, numpy, sklearn",,"University of Maryland, College Park",,,ErinNordquist,Erin,Nordquist,nordquist.erin.ke@gmail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
bitcamp2019,https://bitcamp2019.devpost.com/submissions/118822-bitcamp2019,"An animated Octocat hacking away!

Made with Processing written in Java. 

My team member and I have no experience in Processing but we were both
interested in using Java/Processing to make animations. We decided creating 
a hacking Octocat would be a great start!

Octocat can type so fluidly because her tentacles 
stretch using the sine function.
",,https://github.com/naomiperez/bitcamp2019,,Best First-Time Hack - Bitcamp,"processing, java",,"University of Maryland, College Park",,,naomisp99,Naomi,Perez,naomisp99@gmail.com,"University of Maryland - College Park, University of Maryland - University College",1,hcresanti,Hayden,Cresanti,hcresanti@gmail.com,,,,,,,,,,,,
Mirage - A Technical Analysis Tool,https://bitcamp2019.devpost.com/submissions/118824-mirage-a-technical-analysis-tool,"Inspiration

When you hear Machine Learning, the first use that comes to most peoples imaginations is using it to predict stock market trends in the Stock Market. Mirage is a step in that direction, as we try to identify four basic patterns: Bullish, Bearish, and Reversal patterns. 

What it does

After giving a brief description of the patterns to the user, a camera appears on the screen. The user is then able to take a picture of a Stock Market chart, we recommend Trading View, then Mirage identifies any patterns that the chart exhibits. 

How I built it

We gathered numerous photos of the different stock patterns, then we fed them into Apple's CoreML system. After that, we implemented our trained CoreML system into our app to use with our camera.

Challenges I ran into

Training an ML system to be accurate was a lot harder than we imagined. We never thought about how similar the photos needed to be, as outliers often can skew the data. The biggest challenge in the app was conquering the CoreML training.

Accomplishments that I'm proud of

We are proud that we trained a ML learning to have around a 60% accuracy! The app with the UI also came along nicely. Machine Learning is challenging, but not as intimidating as we originally imagined.

What I learned

I learned about CoreML, training a ML system, and implementing it into an app. 

What's next for Mirage - A Technical Analysis Tool

A better trained ML, with more patterns! 
Ability to type in a stock ticker, then Mirage will analyze the tone of the most recent news articles for the stock, giving the user more information about news surrounding a stock.
",,,,"Best Use of Machine Learning - Metron, Best First-Time Hack - Bitcamp, Best Financial Hack - Capital One","swift, coreml",,University of Maryland,,,saltywater,saltywater,,jmullins543@gmail.com,,0,,,,,,,,,,,,,,,,
Sunrise,https://bitcamp2019.devpost.com/submissions/118825-sunrise,"Inspiration

1 in 4 College students have a mental illness.  What if there was a very simple app, with a calming user interface, to combat these illnesses?

What it does

Sunrise is meant to be used in the morning when first waking up.  The user wakes up and picks the emoji that best represents how they are feeling.  Maybe they feel anxious, angry, suicidal, sad, happy, or tired.  Upon establishing their feelings, they are brought to a page to help them combat whatever they may be going through.  Each page provides different aspects to help the user feel better: sounds, quotes, advice, direct text messaging and calling to hotlines, helpful places to visit, videos to watch, and an overall comfortable user interface.  Also, every time they choose their mood, it is tracked and graphed to demonstrate how they feel each week.  Sunrise is also meant to help users at any time as it provides access to many mental illness related resources.

How I built it

Sunrise is an IOS app built in Xcode using Swift.  Multiple different IOS controllers and pages with segues connect to each other to create an inviting interface.  Using different controllers, texts, calls, and outside links can be accessed.  

Challenges I ran into

Plotting the mood data in a graph took a long time, as the data had to be used w Defaults to save their values upon exiting and entering the app.  Also designing the entire user interface was very time consuming, although I used a free icon pack for the artwork, designing the layout and specific dimensions of every object took a long time.

Accomplishments that I'm proud of

The app itself, I am very proud that I was able to create a working IOS application for a great cause while only having myself to work with.  One of the greatest accomplishments in the app was working w a direct texting feature to a depression hotline and a direct calling feature to the suicide hotline.  I could most definitely see someone in real life using this app, and loving the simplicity of its interface and multitude of features.  

What I learned

I learned how to integrate the messaging and calling apps into my own app and open links through a click of a button (taking the user to Google maps to find a nearby gym to release anger and frustration).

What's next for Sunrise

I may publish it on the App Store upon crediting the free Icon packs and quote images I used.  
",,https://github.com/zactham/Sunrise,,"[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Most Realistic Workplace Hack - TCS","xcode, swift",,University of Maryland College Park,,,zactham,Zac,T,zactham@gmail.com,,0,,,,,,,,,,,,,,,,
Contextly,https://bitcamp2019.devpost.com/submissions/118826-contextly,"Inspiration

We wanted to make a tool that would help people learn the ins and outs of the English language, more specifically, all the different ways one word can be used!

What it does

It's a Chrome extension that allows you to highlight and right click any word to view its many different use cases along with similar use cases to further your understanding of the English language!

How we built it

Using Google's Chrome extension tools, APIs, and libraries, the Flask micro-framework for Python web applications, and nltk, a natural language processing library for Python that allowed us to analyze sentences for their differing contexts.

Challenges we ran into

Chrome extensions are so weird. Everything's locked in its own ""sandbox"" almost and you have to pass around all these ""messages"" to get the different parts communicating with each other. It was so hard to get the current page to talk to the extension, especially with regards to grabbing the sentence that the highlighted word is in.

Accomplishments that we're proud of

It was so tough to get the sentence that contained the word you would highlight due to the inherent blocking nature of Chrome extension communications. But we powered through it! After five hours, we did it!

What we learned

Lots!

What's next for Contextly

Everything!
",,http://github.com/devericx/bitcamp-2019,,"Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP","chrome, javascript, python, flask",,"University of Pennsylvania, Drexel University, Rutgers University, University of Virginia",,Google Cloud Platform,devericx,Min Jun,Kim,devericx@gmail.com,"University of Virginia, Rutgers, The State University of New Jersey, Drexel University, University of Pennsylvania",3,Antlowhur,Anthony,Lowhur,antlowhur@yahoo.com,Saharshv,Saharsh,Vedi,thesaharsh@gmail.com,Wenjie1996,Wenjie1996,,wenjiew@seas.upenn.edu,,,,
HackerRanker,https://bitcamp2019.devpost.com/submissions/118827-hackerranker,"Inspiration

We

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for HackerRanker
",,,,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform",,S5,"Farmingdale State College, Temple University, Georgia Tech",Leap Motion|-|Samsung Gear VR,Google Cloud Platform,vocchiogrosso,Vincent,Occhiogrosso,inbox@vincentocchio.com,"SUNY Farmingdale, Georgia Institute of Technology - Main Campus",1,zxu322,Zheyuan,Xu,zxu322@gatech.edu,,,,,,,,,,,,
Guardian,https://bitcamp2019.devpost.com/submissions/118829-guardian,"Inspiration

So I found out about the old wall UNIX command and thought about how you could use that to annoy people. Then I thought of how when you're staying inside all the time, it makes your melancholy and lethargic, which makes you stay inside more, thereby creating a viscious cycle. If only we can harness annoyance to get people, especially developers, to take a break from their computers and go look at some trees.

What it does

Guardian comes in two parts, a C program that prints a passive-aggressive message of encouragement on top of all pseudotty devices (essentially all terminal emulators). The second part consists of a physical device, Buddy, that slaps your hand and blocks the keyboard in concert with the Guardian alert.

How I built it

Guardian is written in C and communicates with Buddy, which is powered by an Arduino. I used terminal control sequences and the /dev/pts subsystem to overwrite existing terminals. I used a RS-232 library to communicate via serial over USB to the Arduino.

Challenges I ran into

When a machine slaps you or nags you, your automatic reaction is hostility. Since the user ultimately has all power over their computer, most products designed to annoy don't have long lifespans. However there is the exception of products purposely designed to be cute. Buddy is designed so that it is easy to mount a plushy or figurine of some sort on top. This makes the user emphasize with it too much to dispose of it easily. Likewise, Guardian's alert messages use aesthetic ascii art and mascot characters to convery their messages, which allow for the emotional disarmament of users.

Likewise, although the physical parts for buddy took less than an hour to design, it took an entire day and 4 seperate tries to print of the 3 parts that made up buddy. As such the final product does not come w/ it's own mascot mounted on top and is only a case for the slapping servo.

Accomplishments that I'm proud of

I was able to finish this early enough to get a whole 3 hours of sleep.

What I learned

3D printing is not a mature technology

What's next for Guardian

Networked control of Guardian alerts to force interaction between coworkers.
",,https://hairydiode.xyz/cgit/guardian.git/,https://s3.amazonaws.com/challengepost/zip_files/production/43617/zip_files/guardian.zip,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Most Entertaining Hack - Bitcamp, Most Realistic Workplace Hack - TCS, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","c, arduino, rs232",,UMD,,,263,Haoran,Diao,0@hairydiode.xyz,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
GestureSpeech,https://bitcamp2019.devpost.com/submissions/118831-gesturespeech,"Inspiration

In Hackprinceton 2018, Christian worked with a deaf/mute student to create an AR application to caption sign language. They failed. However, his new friend's story was inspiring. During their pitch, he said that growing up deaf was lonely because having to sign to talk was isolating. If applications like what we had been planning to make existed it would have helped many other hearing impaired people like him. 

For the first time in history, a group of undergraduates who learned from free intro to ML videos could create technology advanced enough to challenge impairments and impact lives meaningfully. 

So we built a first iteration as a proof of concept for a robust generalized sign language model through keypoint estimation. To make this model useful in the short-term, we'll be tackling the accessibility problem with smart homes by synthesizing speech to issue voice commands.

What it does


It detects your body's keypoints (finds where your head, hands, fingers etc... in 2d space)
We feed these keypoints into our deep learning model to see what gesture you're most likely trying to do
We then figure out what command your gesture maps to, and synthesize speech to send commands to any smart home device


How we built it

We used openpose to estimate keypoints and pytorch to build the deep learning model. We then used Google speech to text to synthesize a voice command to Alexa

Challenges we ran into


Hardware challenges
Data, data, data
Time


Accomplishments that we're proud of

Robust model that works on any type of camera (web cam, phone cam etc...) on any type of background, and do not require any special equipment.

Most modern deep learning approaches require expensive equipment or rely on rigid constraints such as solid colored backgrounds. This works in the wild!

What we learned

Babysitting the training process, pytorch, deep learning concepts, teamwork

What's next for SignToSpeech

This project shows that with good data a generalized sign/gesture to text model could work. This opens up a whole new world of innovation for HCI (more gesture based UI), AR, and of course a potential novel solution to the sign language computer vision problem.
",,https://github.com/christian-rncl/bitcamp2019,,"Best Use of Machine Learning - Metron, [Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","pytorch, openpose, python, jupyter-notebooks, c",,University of Maryland,,,cjlroncal,Christian,Roncal,cjl.roncal@gmail.com,"University of Maryland - University College, University of Maryland - College Park",3,jzwang43,Jizhen,Wang,jzwang43@gmail.com,shane-miller,Shane,Miller,shanekmiller44@gmail.com,apdebiase,Andrew,DeBiase,debiaseap@gmail.com,,,,
Budget Buddy,https://bitcamp2019.devpost.com/submissions/118832-budget-buddy,"Inspiration

We are inspired to educate people on healthy spending habits and sound and effective financial planning. Our goal is to assist people around the globe to learn about budgeting, investing, and planning for their futures.

What it does

Our website collects and analyzes personal financial data to reflect one's current financial health status. It gathers data such as current assets, liabilities, and financial goals to create a customizable plan for improving one's financial health.

How we built it

We used the Angular Javascript framework on the front end and d3.js to collect user financial data and generate dynamic visualizations. The backend runs on a Node.js server configured on an AWS EC2 instance. It includes multiple pages written in html styled with bootstrap.

Challenges we ran into

We are both extremely new to the Angular framework and Javascript in general. We decided to use it because we wanted to learn something new, but obviously that comes with some challenges. We dealt with networking errors connecting to our AWS server using get requests, and variable scope difficulties trying to manipulate Angular variables outside of the controller.

Accomplishments that we're proud of

Assimilating dynamic data visualizations which immediately change according to user input. Establishment of the EC2 AWS server and Node.js network communications using JSON on the backend. 

What we learned

The capabilities of d3.js and angular.js and their ability to create a beautiful and dynamic web experience. The complexities of working over a network and communicating with a cloud server. 

What's next for Budget Buddy

More detailed financial analysis and predictions. The ability to choose custom budget plans to fit every user's needs. Potential recommendation engine for spending and investing habits and tips for users to get out of debt.
",,https://github.com/hmkiesel/BudgetBuddy,,"Best Hack to Democratize Financial Services - PayPal Credit, Most Realistic Workplace Hack - TCS, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Hack for Education - Bloomberg LP, Best Financial Hack - Capital One","angular.js, node.js, html5, css, d3.js, javascript, express.js, nginx, amazon-web-services, bootstrap, pm2",,UMBC,,,hmkiesel,Hannah,Kiesel,hmkiesel@gmail.com,"University of Maryland - Baltimore County, University of Arkansas-Fort Smith",1,shawnnguyenk,Shawn,Nguyen,shawnnguyenk@gmail.com,,,,,,,,,,,,
Happly.io,https://bitcamp2019.devpost.com/submissions/118834-happly-io,"Problem Statement Cannot be moved around

In the past 10 years, digital communication has supplanted many face to face interactions, yet no thought was given to the effects of this change. Now more than ever, young people are struggling with depression, loneliness and procrastination.

What it does

Happly is the diary that cares about you.

Happly is a web app that helps users overcome symptoms and behaviors associated with procrastination, depression, and loneliness by offering challenges to break out of your comfort zone, tasks to lift your spirits, self-reflections to check in with yourself, and structured interventions based on cognitive behavioral therapy.

How we built it

We took a top-down approach by designing our solution then implementing our functionality in Vue.js. Once our frontend was built we began developing IoT interfaces such as a conversational and SMS interface with Google Dialogflow and the Google Home. We also began working on backends to intelligently sequence and send out the interventions/challenges to users but we didn't have enough time.

Challenges we ran into

Much of our time was spent developing designs for elements, we only managed to find our UI designer, Lex, at 4pm on Saturday. We could have saved a lot of time if we had a good UI designer from the start. 

Accomplishments that we're proud of

Bringing together a diverse team with differing interests.

Developing a conversational interface for the google home and SMS using Google Dialogflow.

Developing professional designs for our Vue Components.

What we learned

Google Dialogflow is a great way to quickly develop conversational and SMS interfaces for IoT.

Try to develop some good design documents early so you can split up earlier in the hackathon to work on different coding challenges.

What's next for Happly.io

We want to implement other features using Google Cloud's APIs like the Natural Language API and Computer Vision API with Ruby on Rails to develop an app that recommends specific interventions and challenges based on your mood.
",,https://github.com/david4ahmed/happly,https://s3.amazonaws.com/challengepost/zip_files/production/43530/zip_files/happly-development.zip,"Best IoT Hack using a Qualcomm Device - MLH, [DESIGN DEN] Best Bitfolio - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp, Best Domain Registered with Domain.com - MLH, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","vue.js, google-dialogflow, google-cloud, typescript, javascript, twilio, google-home, adobe-xd, firebase, html5, css3, google-assistant, npm, node.js",B1,"University of Maryland College Park, University of Southern California",Amazon Echo|-|Dell XPS|-|Google Home,Domain.com|-|Google Cloud Platform,yonghyun-c,Yonghyun,CHo,yonghyuc@gmail.com,University of Maryland - College Park,3,DavidAhmed,David,Ahmed,david4ahmed@gmail.com,FaizShah,Faiz,Shah,thefaizster@gmail.com,lexusdrumgold,lex,,lex@lexusdrumgold.design,,,,
DoDally,https://bitcamp2019.devpost.com/submissions/118838-dodally,"Inspiration

I was inspired by my girlfriend, who is a teacher for a class of twelve 2 year olds. We often discuss the state of classrooms in America and how many classrooms in America really lack the necessary funds needed to provide a quality education. People spend tons of money to get an educational step up in high school and especially in college but most people don't know that it's these first formative years that are most likely to determine the level of academic, social, and behavioural ability that a child will reach later on in life. That is why I felt that it is crucial and of utmost importance to use my knowledge to construct a hack to provide funding to these often overlooked classrooms. In addition to helping teachers and students I also wished to help myself and those like me who benefit from having an incentive to complete certain tasks.

What it does

DoDally allows users to create tasks to be completed, but for each task users can browse through a list of classroom proposals written and posted by teachers seeking extra funding for improvements that would benefit the students. The data is provided by the Donors Choose API. After users select a cause they are prompted to name the task, selects an amount of money, and a deadline for when the task is to be completed. If the task does not get completed by that time, the amount of money specified by the user when creating the task gets donated to that classroom. Users are also able to cheer each other on to complete goals, creating a productive community.

How I built it

This is an android app built in java, and which utilizes Google's Firebase for the database, storage, authentication, and cloud messaging features.

Challenges I ran into

Parsing the JSON data was not simple, as well as finding the right API. The UI took alot of time, but I think was worth it over all!

Accomplishments that I'm proud of

I am proud in my ability to build a full scale android application in the 24 hours it took me to complete it. The educational cause is one that I am personally invested in, an app like this would ideally improve the situation within the classroom and create a conducive and engaging classroom allowing teachers be able to educate and shape the future generation of Americans. In addition, the UI of the application is one that I am personally proud of. This idea was not one that I started Bitcamp with but one that evolved as I was tinkering with other projects, and I am very happy with the end result.

What I learned

I learned how to parse JSON data and use Android's Volley library for GET Requests. I Learned how to use Zeplin to wireframe an appealing UI and how to manage displaying data taken from a relational database. Had some previous experience with Android otherwise.

What's next for DoDally

Further search functionality for specific classroom and causes, allow users to save causes, save credit card information, and interact further with other users of the app. 
",https://youtu.be/AF8zNH-_Tnk,,https://s3.amazonaws.com/challengepost/zip_files/production/43600/zip_files/app-release-unsigned.apk,"[Compass Challenge] Best Hack for X* - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP","android, firebase, google-cloud-messaging, google-cloud",,"University of Maryland, College Park",,,reissyuval,Yuval,Reiss,reiss.yuval@gmail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
Lettuce B Friends,https://bitcamp2019.devpost.com/submissions/118841-lettuce-b-friends,"Lettuce B Friends

Food insecurity is one of the biggest social problems we face in America nowadays. This means that people either do not have access to healthy food choices or cannot afford them. In order to solve this, we developed a web application that allows you to interact with others that have the same problem. This app will allow you to learn about how to start your own hydroponic garden, which is a faster, more efficient way to grow crops. People registered are given the opportunity to grow their own crops and then trade and sell them with other users. In addition, people will be able to purchase from other users. This will hopefully reduce the cost of some of these healthy choices by reducing demand, and allowing people to make fair deals among each other. Our app will be able to aid people obtain those deals and, by extension, decrease food insecurity in our country.
",,https://github.com/KScott99/communitygarden,,"Best Hack with Esri APIs and SDKs - Esri, Best Domain Registered with Domain.com - MLH, [Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","html, python, css",,"University of Maryland, Baltimore County",,Domain.com,steve21,Steve,Calderon,steve21@umbc.edu,"University of Maryland - University College, University of Maryland - Baltimore County",2,KScott99,Keegan,Scott,ezeek.scott@gmail.com,jennawestfall,Jenna,Westfall,jenna18@umbc.edu,,,,,,,,
Finance Genie,https://bitcamp2019.devpost.com/submissions/118848-finance-genie,"Inspiration

What it does

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for Finance Genie
",,,,,"node.js, esri, plaid, javascript",,"UMD, Penn State",,Google Cloud Platform,Jimmy-Bai,Jimmy-Bai,,jbai0616@gmail.com,"University of Maryland - College Park, Pennsylvania State University",2,demolisty24,Suilong,Luo,suilong24@yahoo.com,naiyume,Brian,Shen,naiyume@gmail.com,,,,,,,,
Shared Paper,https://bitcamp2019.devpost.com/submissions/118866-shared-paper,"Inspiration

The lack of a collaborative platform that meets the demands of workplace productivity, artistic creativity, and educational connectivity. 

What it does

It creates a multi purpose canvas that allows students, artists, and professionals to pursue their endeavors. 

How we built it

We created the backend using express, mongodb, socket.io; while the front end was done exclusively in react native.

Challenges we ran into

Implementing multiple user functionality into the app was quite difficult. Also getting the paper to render near simultaneously was a struggle. 

Accomplishments that we're proud of

A working product. Able to communicate through socket to simultaneously display a shared screen between devices. Encrypted passwords for user accounts.

What we learned

We learned a lot about the communication paradigm between front end technologies and back end technologies.

What's next for Shared Paper

We want to be able to sync points vs strokes eventually, this will allow the app to become much more smooth for the user. 
",,https://github.com/andyxiao1/shared-paper,,"[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Most Entertaining Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Hack for Education - Bloomberg LP","express.js, node.js, socket.io, react-native, mongodb",,"University of Maryland College Park, University of Pennsylvania",,,mahimulpuri,Mahi,Mulpuri,mahi.mulpuri@gmail.com,"University of Maryland - College Park, University of Pennsylvania",3,owenluo,,,luoowen@gmail.com,patrickcao,,,patrickrcao@gmail.com,andyxiao1,Andy,Xiao,andyxiao@seas.upenn.edu,,,,
Brewba,https://bitcamp2019.devpost.com/submissions/118867-brewba,"Inspiration

We like boba, and are really lazy. So we made a machine to make boba for us.

What it does

A cup starts at the beginning of a conveyor belt, and goes through a gauntlet - first boba mix drops in the cup, then a coffee pot is turned on and adds hot water, then tapioca bubbles are added, and finally a stirrer is released for you to combine your drink.

How we built it

We used a Python script that pairs with our machine over USB to start the process. We used an Arduino Uno to control all of our motors (conveyor belt, release powder, release bubbles) , and used a Belkin Wemo smart plug and a companion Python API to turn on the coffee pot to boil the water (Python will send serialized signal to app, and then will call Python API. )

Challenges we ran into

We are not engineering students and design is hard (sad!)

Accomplishments that we're proud of

This is Diane's first hackathon! She learned a lot. Also, we finished this project. It's lit.

What we learned

Engineering design is hard!!  Also Python is f**************** amazing.

What's next for Brewba

idk we need to return all this hardware (Sad!)
",,,,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Most Entertaining Hack - Bitcamp, Best Domain Registered with Domain.com - MLH, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","arduino, python",O4,RUTGERS UNVIERSITY,Arduino 101,Domain.com,alimohamad,Ali,Mohamad,alimohamad1122@gmail.com,"Rutgers, The State University of New Jersey",1,1minPeru,Phuru,Shekar,phurushotham@gmail.com,,,,,,,,,,,,
Stopping Spree,https://bitcamp2019.devpost.com/submissions/118871-stopping-spree,"Inspiration

Shopping is easier than even thanks to the prevalence of online shopping. Companies such as Amazon allow for users to buy items they want with the click of a button. However, problems can arise when a user has compulsive buying disorder (CBD) and cannot control themselves when buying.

What it does

In order to help people with CBD we decided to build a chrome extension that will attempt to persuade the user they do not necessarily need the item they are buying on Amazon.  The app remove instances of numerical price values of for items and replaces them with alternative of what they could buy with the same amount of money. Similar item suggestions were removed in order to prevent them from buying additional items without consideration. Buttons with the ability to instantly check out items was removed as well. 

How we built it

Javascript was used to change the prices of items as well as the deletion of certain buttons and suggested items. The Google Chrome Extension API was used to allow for the application to downloaded easily. 

Challenges we ran into

Replacing the prices for the many different formats they come in on Amazon and deciding what should be prevented from appearing on the page took a large amount of time. With so many different tags and ids for amazon's website, it is difficult to keep track and implement the proper actions with each one. 

Accomplishments that we're proud of

We learn a lot about how javascript, html and css file interact. Moreover, we learn about the chrome extension, which turns out to be particularly useful and fast for simple tasks such as removing tempting items on the Internet. 

What we learned

There are many different aspects of Amazon's website that attempts to make their users more likely to buy items from them. This includes sponsored advertisements, suggesting similar items, and quite access to their inventory.

What's next for Stopping Spree

Having the number of times the user has visited Amazon recently appear when the extension icon is clicked as well as how much money they have spent in the same time frame.
",,https://github.com/asibxy/Bitcamp-2019,https://s3.amazonaws.com/challengepost/zip_files/production/43555/zip_files/Bitcamp-2019.zip,"[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best First-Time Hack - Bitcamp, Best Financial Hack - Capital One","javascript, css, chrome",,"University of Maryland, College Park",,,jordanF0ster,Jordan,Foster,jfhawk414@gmail.com,University of Maryland - College Park,3,asibxy,asibxy,,aronsun12@gmail.com,aly26,aly26,,aly26@terpmail.umd.edu,KhanhNguyen99hn,MoMoDasian,,khanhnguyen99hn@gmail.com,,,,
EyeBank,https://bitcamp2019.devpost.com/submissions/118874-eyebank,"Inspiration

We have the luxury of being able to view the world through our own eyes, while others are unable to do so. Despite certain obstacles, people with visual impairments should be able to do simple tasks in their lives, such as taking ownership of their finances. Financial independence provides us with a sense of direction and ownership of our lives, and we wanted to improve those with visual impairments' ability to facilitate their financial management. 

What it does

We created a program that could be used on any financial device with proper integration, such as an ATM, that will properly guide the user through the steps required to access their bank account, and deposit or withdraw depending on what the user would like to do. This can be done through their speech which facilitates the need of having to orient themselves with the number pad.

How we built it

We built the program primarily with python, which allowed us to integrate tensorflow, google speech api, machine learning concepts for proper facial recognition of the user which was accompanied by yolo, and a raspberry pi for the demonstration of an ATM. All of these technologies had to be integrated together for the proper guidance and assessment of the user.

Challenges we ran into

The main challenge we ran into was integrating all of these technologies together. Many obstacles arose due perfecting the proper integration of one set of software with the other.

Accomplishments that we're proud of

Being able to successfully implement a variety of technologies in order to improve the lives of others.

What we learned

How technologies work with each other and also how difficult it is to make them work with one another.

What's next for EyeBank

Hopefully, EyeBank can be implemented into future ATM's and other financial outlets that are utilized by those that are visually impaired or benefit from audible communication with technology to facilitate their daily tasks.
",,,,"[HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Financial Hack - Capital One","python, darkflow, machine-learning, google-cloud, google-web-speech-api, yolo, raspberry-pi, tensorflow",L13,George Mason University,Amazon Echo,,alexandrofuentelzas,Alexandro,Fuentelzas,alex271@live.com,George Mason University,3,devalparikh,Deval,Parikh,devalpp@gmail.com,jersteve,Steve,Sahayadarlin,jsahayad@masonlive.gmu.edu,RyanHossain,Ryan,Hossain,kloseryan11@gmail.com,,,,
Brainstorm,https://bitcamp2019.devpost.com/submissions/118876-brainstorm,"Inspiration

Our own need to plan our college courses

What it does

Provides students with a tool that helps them select classes they need to complete their major based on their preferences and historical course data

How we built it

Database of courses pulled from UMD, stored in Firebase, interface in Java

Challenges we ran into

Working with new APIs is difficult, especially under time constraints

Accomplishments that we're proud of

Creating a functioning program, Using new APIs

What we learned

How to use new APIs, working as a team

What's next for Brainstorm

Adding the planned functionalities (suggested courses, 4-year plan validation, more user interface options, other colleges)
",,https://github.com/bitcamp2019zmj-2/2019-project,,Best Hack for Education - Bloomberg LP,"java, firebase, python",,"University of Maryland College Park, University of Maryland Baltimore County, Howard Community College",,,jonahwfreeman,Jonah,Freeman,jonahwfreeman@yahoo.com,"University of Maryland - College Park, University of Maryland - Baltimore County, Howard Community College",3,xDestx,Zachary,Carr,zaccarr1998@yahoo.com,Brunswick-Khorasan,Morgan,Vanderhei,quixoticbibliomania@gmail.com,JoniKim,Joni,,jhkjonikim@gmail.com,,,,
Uno,https://bitcamp2019.devpost.com/submissions/118878-uno,"Inspiration

Recently, UMD has implemented a 2FA authentication system, called Duo, for all of their authentication services. This decision has received some mixed responses as many students have claimed that it feels more of an inconvenience than something useful. However, it is understandable why the university would wish to implement such a service given how widespread hacking attempts are these days. To fix this dilemma, I've created an app allows users to customize the trade off between security and convenience, providing them with more control over their logins.

What it does

Users can set pre-determined conditions in which Uno will automatically respond to 2FA checks sent by Duo. Uno does this by working with Android's Smart Lock feature and simulating user input when a notification is received.
",,http://tinyurl.com/y67xe886,https://s3.amazonaws.com/challengepost/zip_files/production/43560/zip_files/app-debug.apk,"[Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, Best Hack for Education - Bloomberg LP","android, android-studio",,University of Maryland,,,Mimerme,Andros,Yang,androssdragonq.9@gmail.com,,0,,,,,,,,,,,,,,,,
FINRA Data Bank,https://bitcamp2019.devpost.com/submissions/118879-finra-data-bank,"We thought the FINRA challenge would be fun, so we created a web application to present the data in a user-friendly way. We added drop downs to sort the large amount of data into smaller groups, making it easier for users to find the financial advisor that fits what they're looking for.

We had an exciting experience learning about different web frameworks! We began with React, but ended up going with Angular as its API was more intuitive to us in the end. 
",,https://github.com/jad4580/bitcamp_2019,,"Best App or Site for Investment Advisor Rep Report - FINRA, Most Realistic Workplace Hack - TCS, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Financial Hack - Capital One","angular.js, html, typescript, scss",,"University of Maryland, College",,,jdoaner98,Justin,Doan,jdoaner98@yahoo.com,University of Maryland - College Park,2,NatalieCarney,Natalie,Carney,nataliejcarney@gmail.com,TuanQuach,,,tuanquach28@gmail.com,,,,,,,,
MadLads,https://bitcamp2019.devpost.com/submissions/118880-madlads,"Inspiration

Inspired by the ml5 machine learning library and Google's emoji scavenger hunt, we decided to create a similar game that incorporated train models to create an entertaining experience for the user. This is the first time we dip our toes in the vast ocean of possibility that comes with machine learning. 

What it does

MadLads is a mobile web app reinvention of the famous phrasal template word game called Mad Libs, in which a player is prompted to fill in blanks to create a custom story. We took the same concept and incorporated machine learning and image recognition into the process of choosing words. In order to pick a word for the fill-in-the-blank, the user takes a photo of an object, which is then recognized and inputted into a list. After choosing up to five words, the user is presented with the crafted story, often humorous. The user then has a choice to try again for a different story with different words.

How we built it

We used ml5.js, a pre-trained, web-friendly machine learning library based on Tensorflow that allowed us to create web applications that use machine learning processes on the web. We integrated the image recognition portion of the library with a live feed and used p5 and vanilla Javascript to create an interactive, entertaining experience in the form of an AI-assisted Mad Libs game.

Challenges we ran into

There was a lot of trouble when it came to incorporating an environment-facing camera for mobile. However, in the end, we solved the issue by linking Google Chrome Dev Tools to our phones and learned that we had a simple syntax error in the createCapture object. In addition, the text-to-speech synthesis had a few glitches involving repeating strings of sentences, but it was fixed. There were also some tweaks required to adjust the sensitivity of the image recognition.

Accomplishments that we're proud of

We are proud of the smoothly functioning image recognition and phrasal template system, and our user experience design. We paid close attention to giving the user helpful feedback and options, such as allowing them to retry to capture the word and providing them with a little counter to keep in mind how many images they have left to take. Another example of user experience that we are proud of is our consistent style guides and interactive onboarding in the first slide, where the user can start trying out the image recognition system from the get-go. 

What we learned

We learned how to incorporate pre-trained image recognition models into web projects.

What's next for MadLads

We would like to rewrite a lot of the code base, because much of it was done in a hurry without proper programming conventions. This should better our site’s performance. Another idea is to create a desktop version of the site that either redirects one to the mobile version or is a game in its own right.
",,https://scolecite.github.io/mad-lads/,,"Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","javascript, css, html, ml5, p5",,Maryland Institute Colllege of Art,,,ayeh01,Amanda,Yeh,ayeh01@mica.edu,Maryland Institute College of Art,1,scolecite,y,,ygevorgyan@mica.edu,,,,,,,,,,,,
The Helping Hand,https://bitcamp2019.devpost.com/submissions/118881-the-helping-hand,"Inspiration

Life goes around in circles and it is always said, to move forward, you have to give back! The very first learnings or the teachings were offered by the elderly in the house. With the growing technology and advancements in technical fields at a tremendous rate, the goal is to use this technology, not teach it to the elders, but help them live life in this fast paced world.

What it does

The current scope of the project includes:


Fall Detection
Live Location Tracking
Live Camera Feed
Motion Based Light Switching


How we built it

Brainstorming played a key role in coming up with this project. We brainstormed the problems that the elderly people face during their day to day routine and tried to identify their root causes. From all the ideas we penned down and narrowed it to these four important issues for the scope of this hack.

Fall detection - For fall detection we used accelerometer interfaced with Arduino to detect change in acceleration along the axis perpendicular to the board. By giving some threshold, the change in axis is differentiable for the person walking, and actually falling. 

Live Location tracking - We used Arduino's GPS module to track the live location of the stick. The family members of the person are completely aware of the whereabouts of the stick and eventually the elderly person. The coordinates are transmitted using a wireless point to point transmission module called XBEE.

Live Camera feed -  For camera feed we integrated a PI camera module to Raspberry Pi and connected the Raspberry to a wifi network. Anyone on this wifi network can access the live camera feed through a common IP address. This can be further enhance to upload the stream on the web.

Motion based light switching - To detect the gestures we placed an Ultrasonic sensor in front of the stick. As soon as it detects the gesture, a bunch of LED's  get turned on to help the person navigate in the night.

Challenges we ran into

The main challenges we ran into were around the area of understanding the problems faced by elders and to solve them with the thing which will be present with the elderly at all times of the day.

The technical challenges we faced were 


Calibrating the gyroscope.
Inefficiency of GPS module in congested environment.


Accomplishments that we're proud of


Successful testing with the working prototype in real time.
Doing something for one of the most important people in our lives.


What's next for The Helping Hand


Sophisticated Localization and Path Planning Algorithm to be applied in order to increase GPS accuracy and in addition to that, guidance can also be given inside the house.
LTE module to be integrated with the system for better connectivity, giving us instant calling and messaging feasibility.
Integrating the module with the RFID tag or any other smart key solutions, for entering into the house. The burden of carrying an extra thing is reduced and now the stick is the key.

",https://www.youtube.com/watch?v=PyatHawY4ZE,,https://s3.amazonaws.com/challengepost/zip_files/production/43565/zip_files/bitcamp2019.zip,"[DESIGN DEN] Best Bitfolio - Bitcamp, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, [Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp","raspberry-pi, arduino, xbee, gps, ultrasonic, buzzer, arduino-101, raspi-cam",B2,"University of Maryland, College Park",,,pranaliyashodhar,Pranali,Desai,pranali.yashodhar@gmail.com,"University of Maryland - University College, University of Maryland - College Park",2,raghavnandwani,Raghav,Nandwani,raghavnandwani@hotmail.com,sanket193,Sanket,Goyal,sanket193@gmail.com,,,,,,,,
Music Genre Identifier,https://bitcamp2019.devpost.com/submissions/118883-music-genre-identifier,"Genre-Analyzer

bitcamp 2019

Hello!

This project was created for bitcamp 2019. Our goal was to have a program that would use machine learning to predict the genre of an audio file. It was our first time working with machine learning, so it's rather unpolished, but we're excited to get to present and show off all we learned!

To modify this file, clone the repo and modify the path to the audio file in a notebook editor, and hit run all. Is our prediction accurate? :)

Technologies Used:
Python, and Python libraries (Pandas, Keras), Google Cloud Platform, Jupyter Notebook
",,https://github.com/richardmu000/Genre-Analyzer,,"Best Use of Machine Learning - Metron, Best First-Time Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","jupyter-notebook, python, google-cloud, keras",,University of Maryland,,,siddharm,Siddha,Mavuram,siddharm@gmail.com,"University of Maryland - University College, University of Maryland - College Park",1,richardmu001,Richard,Mu,richardmu001@gmail.com,,,,,,,,,,,,
Byte-by-Byte,https://bitcamp2019.devpost.com/submissions/118885-byte-by-byte,"Inspiration

We have all been there. The stress of assignments, midterms, final exam and deadlines. We all need that scheduler and a task tracker, along with some motivation to get us through these hectic times. We wanted to help all the fellow students out there with the same experiences as us and wanted to bring a solution- an ultimate stress busting Assistant!

What it does

It is a Natural Language parser that parses students' assignments and tags the questions with the corresponding chapters from their reading materials. It displays the top chapters from these questions the students have to be thorough with and keeps track of their progress. Along with these features, it gives a little bit of motivation through some of its inspirational quotes. Students can also keep track of what other students are up to through an interactive visualization.
Coming soon is a forum to be in touch with other students, professors, medical centers and a medium for emergency needs.

How we built it

We parsed the assignments and tokenized them using the N-gram language modelling. We, then, did Part of Speech tagging on the tokens to extract the topics using Google Cloud Natural Language API. We trained the corpus using reading materials like textbooks using N-Gram language model and generated Term-Document Matrix. Using tf-idf to weigh the frequencies in the term-document matrix, we generated the top N chapters related to the topics generated from the assignment document. 
We deployed this API on Google Cloud Platform running on Flask server.
For the front end and visualization, we used JQuery, Javascript, CSS and HTML5 to provide a platform to upload the assignments. Via AJAX, we hit the API deployed on GCP to retrieve the top N chapters and used it for tracking students' progress. We used plugins in JQuery to achieve this. For visualizing the students' data, we used Plotly.

Challenges we ran into

We came up with the design, the flow and the precise algorithms to use in this problem from scratch. We had to try out a few other solutions before deciding to use this approach. Also, integrating Javascript front end and Python back end was a little edgy at times. 

Accomplishments that we're proud of

The way all the three of us worked together as a team and managed to achieve everything we had planned was incredible and something we are definitely proud of.

What we learned

We learnt a lot of new technologies like Flask, NLTK and deployment of APIs on GCP. 

What's next for Byte-by-Byte

Create a completely unsupervised learning algorithm to find similarities between the assignments and the reading materials that gives a more refined result. Along with this, we also want to create a forum for students to interact with other students, professors and other resources in the University.
",https://youtu.be/u2rFzPcF5ns,https://github.com/meetm10/Byte-by-Byte,https://s3.amazonaws.com/challengepost/zip_files/production/43563/zip_files/Byte-by-Byte-master.zip,"[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best Use of Machine Learning - Metron, [Compass Challenge] Best Hack for X* - Bitcamp, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP","python, google-client-authentication, nltk, google-cloud, google-natural-language-api, jquery, javascript, css, html5, spring, maven, plotly",,Rutgers University - New Brunswick,,Google Cloud Platform,meetmukadam,Meet,Mukadam,meet.mukadam@rutgers.edu,"Rutgers, The State University of New Jersey",2,mandharajayaram,Mandhara,Jayaram,mandhara.jayaram@rutgers.edu,deeppandyasnk,Deep,Pandya,deeppandyasnk@gmail.com,,,,,,,,
my bitfolio,https://bitcamp2019.devpost.com/submissions/118886-my-bitfolio,"This was a cool experience and I made a lot of things; check them out!
",,https://github.com/fcohen9/bitcamp2019,https://s3.amazonaws.com/challengepost/zip_files/production/43622/zip_files/bitcamp2019-master.zip,,"html, css",B3,"Design Den, N/A",,,fcohen9,fcohen9,,fcohen@mica.edu,Maryland Institute College of Art,0,,,,,,,,,,,,,,,,
Keyless Coding,https://bitcamp2019.devpost.com/submissions/118887-keyless-coding,"Inspiration

We were initially inspired by the many Computer Science professors at UMD who like to write out their code as they lecture instead of typing it into an editor. While some use traditional pen and paper, many others use the touchscreen and stylus interface of their tablet PCs, which allows them to quickly write up code snippets and share them digitally after lecture. This code, however, cannot be immediately executed, which means that demonstrating its functionality requires retyping it into an editor, taking away from teaching time. We thought it would be helpful to find a way to go straight from handwritten code to text that can be executed in an IDE or terminal.

Over the course of our weekend at Bitcamp, this idea grew in scope, as we realized the tool's potential use to students, developers, and anyone else who might want to commit a quick note or code snippet to text without the need for a keyboard. We envision our final product as a small tool for educators, students, and professionals who prefer handwriting their code to move from idea to implementation with ease.

What it does

The Keyless Coding application uses Google Cloud Platform's Vision API to convert handwritten input to editable text. It is designed for quick code prototyping, note taking, and coding demonstrations.

When started, the application provides a lined canvas for writing. The user can fill the whole screen with text, or add code snippets incrementally, before writing the final output to a text file. The text file can then be opened in a text editor for later review or copying into a larger project. The user can also generate multiple separate files in a single session.

How we built it

We wrote the code for this project using Java in the Eclipse IDE. The user interface is implemented using the Java Abstract Window Toolkit (AWT) and the interfacing with Google's Vision API is done with the Google Cloud Tools for Eclipse plugin.

Challenges we ran into

Originally, we planned for this project to be a plugin for Eclipse IDE, rather than a standalone application. However, after a great deal of time was spent unsuccessfully trying to integrate the Google Vision API with the Eclipse Plug-in Development Environment, we determined that there were issues with compatibility that could not be resolved this weekend.

Ultimately, we were thankful for the change though, as this sped up our development pace considerably after the change and our final product is now usable by anyone, not just Eclipse developers.

What we learned

Before this weekend, we had only basic experience with creating UIs in Java and no experience with Google's Cloud Platform. Now, after an entire weekend of hacking, we are much more confident in our ability to implement projects that use these tools and hope to make use of these skills for many projects in the future. We also learned a great deal about creating plug-ins for Eclipse using its Plug-in Development Environment, even though we ended up not using it for our final product. Additionally, we reinforced our knowledge of Java and Eclipse development.

What's next for Keyless Coding

In the future, we'd like to make refinements to the UI and add more customization options for the user.
",,,,"Most Realistic Workplace Hack - TCS, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP","java, eclipse, google-cloud",,University of Maryland College Park,,Google Cloud Platform,trk1125,Thomas,King,trk1125@comcast.net,University of Maryland - College Park,2,Rjbanks919,Ryan,Banks,rjbanks919@gmail.com,bhaley7,Ben,Haley,bhaley7@terpmail.umd.edu,,,,,,,,
Cosigner,https://bitcamp2019.devpost.com/submissions/118890-cosigner,"Inspiration

We have all struggled  with waking up early to get in that workout or attend that 8 AM lecture, and often the only thing that can really motivate us is our friends... and money. These fundamentals of our app are inspired by the real life story of Tejas and Viraj who made a bet to see who would skip class first. The idea of losing money, enforced by having a friend to keep you accountable, motivated Tejas and Viraj to attend all of their 8 AM classes for the first week. We decided to bring these motivators together in an app called Cosigner, where friends can come together to pool money to see who slips up in accomplishing their daily goals.

What it does

Cosigner allows you to create groups with your friends with a collective pool of money. Each person has their own tasks that they want to accomplish, and accomplishing more tasks means you get a more significant chunk of the pool. Think you can accomplish more of your tasks than your friends? Put it to the test by downloading Cosigner!

How we built it

The app is built in Android Studio and we use socket programming to connect to an Amazon EC2 server that allows us to make queries against an Amazon RDS database. These queries provide information regarding user balances, groups, and goals. We used Java to construct classes from this raw data that can be converted into JSON string objects. We used Google's GSON library to serialize and deserialize our Java objects to and from JSON files. We found this technique to be much more scale-able as opposed to compressing objects to byte streams. This is because IOS and web development platforms universally support JSON. Using this technology, we were able to transmit client requests and server output over a TCP network.

In addition, we implemented Google Sign in using the Google Cloud platform. This required some knowledge with the Google Cloud ecosystem, OAuth2.0 authentication, and SHA1 keys, but we were able to seamlessly integrate a google account into our app. This of course relies on Google's Firebase platform. Our app accesses several fields from a resulting google sign in object to provide the information needed for a user to exist in our database.

We have also implemented PayPal into our project. PayPal was necessary as it provides a universal incentive for users to become their best selves. We used the PayPal SDK to allow clients to submit money to our business Cosigner account. This was all done in a sandbox which can easily be shifted to a live platform. We are also currently trying to use the Payouts API through Java-executed cURL commands to allow users to be paid back based on tasks that they achieve.

Challenges we ran into

We had a lot of challenges in sending data to and from the server from different machines over the same network. Android Studio handles client side server requests slightly different than traditional Java as there are many extra layers of abstraction placed on top of the native Java code. This was especially difficult since none of us had any prior experience with socket programming and serializing objects to easily send over data. We also had to work hard to figure out how to configure the EC2 server with Java server code, since this is done in an environment that none of us are familiar with. We consider these difficulties necessary impediments since these skills will prove useful in future hackathons and personal projects.

In general, it was also difficult implementing other APIs. We tried to integrate snapkit, but we had to wait for an access token that simply never arrived. Integrating the PayPal SDK was relatively easy, but learning how to use cURL and Postman to utilize the Payouts API was difficult, especially since we needed this to work in our server's Java code. Integrating the Google sign in was also tough since the SHA1 key needed is unique to the machine generating the apk, so only the apks generated by one machine can be used for google sign in which made testing difficult.

Accomplishments that we're proud of

It was incredibly exciting seeing one of our group members input a value on their phone, and seeing it appear on another screen solely through the network connection. It seems like a small feat, but the complexities of sending data through streams and TCP networking made this achievement all the more welcomed. And with this simple stepping stone, we are able to send information to our server that allows us to make queries against an Amazon RDS service. We feel that this is a very valuable achievement that has allowed us to extend our computer science knowledge beyond the classroom. It is the first time that we have really been excited by a project enough to code it for a full 36 hours.

What we learned

We have learned a lot about basic networking protocols and how information is processed. Creating this app required a knowledge of IP addresses, input/output streams, as well as how to host servers using AWS APIs. On top of these specific technologies, this project has also taught us how to work as a team and how to divide components up among different members of the group. The software development cycle is intrinsically different when involving a group as opposed to an individual. A project of this scale taught us the importance of technologies such as Git to manage edits and prevent error-prone code from making it to the main branch.

What's next for Cosigner

We intend to make Cosigner a household name. In the same way everyone just knows what Facebook is, everyone will know about Cosigner. We want to one day bring Cosigner to the app store as an app that combines the younger generation's attraction to social media with productivity. Typically social media detracts from a user's productivity as a user can get lost in scrolling through endless pictures on their feed. But with Cosigner, we want users to get lost in how they can optimize their schedule to make themselves more productive. An ambitious target for sure, but we feel we have an advantage over older generations inventing social media platforms since we understand the target demographic better. We also understand what it takes to keep motivation levels high to accomplish a goal. Remember the name Cosigner since one day you are going to hear about it again, and you might just have the chance to say that you got to see version 1.0 at Bitcamp 2019.
",https://youtu.be/I8jQPkq6zYs,https://drive.google.com/open?id=15onu-gsSAKlVj6xWeJUcI_zhsKOU83IF,https://s3.amazonaws.com/challengepost/zip_files/production/43582/zip_files/Cosigner.zip,"Best Hack to Democratize Financial Services - PayPal Credit, [Compass Challenge] Best Hack for X* - Bitcamp, Most Realistic Workplace Hack - TCS, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP, Best Financial Hack - Capital One","java, android-studio, sql, amazon-web-services, amazon-ec2, amazon-rds-relational-database-service, paypal, google-cloud, socket.io, tcp, gson, github, git",,University of Maryland,,Google Cloud Platform,gilaniasher,Asher,Gilani,gilaniasher@gmail.com,University of Maryland - College Park,3,tejasp2022,Tejas,Priyadarshi,tejasp2022@gmail.com,arjunrajkumar3k,Arjun,Rajkumar,arjun.rajkumar3k@gmail.com,virajb2000,virajb2000,,viraj.bhat@yahoo.com,,,,
Avalon Online,https://bitcamp2019.devpost.com/submissions/118892-avalon-online,"Inspiration

The game Avalon is fun so we made it online to play.

What it does

You play Avalon online!

How we built it

We used NodeJS and Express to build our backend with a stylish frontend built with React. 

Challenges we ran into

We have no experience in web dev. 

Accomplishments that we're proud of

We were able to make something that is online and can be used. We're proud of the fact that we can connect with each other. 

What we learned

Full-Stack Development and version control with a team!

What's next for Avalon Online

Full game release with expansions as well. 
",,https://github.com/gliu36/avalon-online,,,"node.js, react, express.js, javascript, html, sass",,"University of Maryland, College Park and Temple University",,,GeraldLiu,Gerald,Liu,gerryliu36@gmail.com,"University of Maryland - College Park, Temple University",3,ochoi,On,Choi,xuanran1@hotmail.com,billchheu,Bill,Chheu,billchheu@gmail.com,kanganna,kanganna,,anna.f.carandang@gmail.com,,,,
Tomo University,https://bitcamp2019.devpost.com/submissions/118895-tomo-university,"Essentially Tomo University is a half-joking-proof-of-UI-learning-platform and half Tamagotchi pet. If you don't do the quiz at the bottom of the introduction page, then your Tomo bet will go to sleep! keep it up and Adam by testing your esoteric python-knowledge.
",,https://github.com/BerkeleyPoulsen/Bitcamp2019_submssion_TomoUniversity,https://s3.amazonaws.com/challengepost/zip_files/production/43567/zip_files/Bitcamp_close_submssion_TomoUniversity.zip,"Most Entertaining Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Hack for Education - Bloomberg LP","gml, gamemaker",,University of Maryland,,,berkeleypoulsen,Berkeley,Poulsen,berkeley.poulsen@gmail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
MGRS Converter,https://bitcamp2019.devpost.com/submissions/118896-mgrs-converter,"Inspiration

My inspiration for this project from a friend telling me that their MGRS to geolocation app was taken down.

What it does

It converts MGRS military coordinates into longitude/latitude coordinates and takes the user to that specific place

How I built it

I built it using react.js and using the ArcGIS API

Challenges I ran into

I ran into first learning how to build a frontend web page using react and also learning how to maneuver it around ArcGIS API

Accomplishments that I'm proud of

I'm proud that I built a project that I really enjoy trying to build and see myself building out the project

What I learned

I learned that javascript is very frustrating to program in

What's next for bitcamp-2019

Hopefully more web development! 
",,https://github.com/rasha-hantash/bitcamp-2019,,,"javascript, html, css, react",,Virginia Commonwealth University,,,rasha-hantash,Rasha,Hantash,rasha.hantash01@gmail.com,Virginia Commonwealth University,0,,,,,,,,,,,,,,,,
SSS,https://bitcamp2019.devpost.com/submissions/118898-sss,"Inspiration

When we came here, although we were open to ideas, we had couple of ideas in mind, to implement at this hackathon with domains ranging from health to education, but none finance based. We were then team of two, and were looking for teammates and when interacted with people, one of them was willing to join if it's a financial hack. So, we then brainstormed ideas on financial category and came up with an idea for ""SSS"". There are employer sponsored benefits like 401K retirement plan, Health Savings Account (HSA), Flexible Savings Account (FSA) and Shares, which are usually individually maintained by third party. Often many employees get into confusion and are sceptical if they really should invest into these accounts and if investions, what should be there contribution? Their confusions and questions can be easily answered by SSS.

What it does

We are solving this problem by implementing an integrated solution with all the employer sponsored benefits, how much net value (total money) and face value (money in hand) will the employee be getting, if he is investing into each of these benefits. And how much profit and money would he be getting contributing into these accounts. We show different graphs one consolidated to all the employer sponsored benefits, and one each for the benefit. These graphs can help employee to easily make decision, whether if it's profitable to invest into each of the benefit, if so, how much would mean profitable.

How we built it

We built it using Python as programming language.To integrate front-end, back-end and middle-ware, we needed a framework. We were weighing between Django and Flask. We also wanted to learn new at this hackathon and improve our coding skills. Since we used Django in previous hackathon, we wanted to try out Flask! And as we started coding, and came to the point of data visualization, we were researching on how to represent our data and what python packages needs to be used. Though we juggled with few, we finally stopped at matplotlib - Python Library.. We then had to chose what kind of visualization we need to show, how to represent data and what data to represent. Please look at our screenshots to see what we built. 

Challenges we ran into

Our initial challenge was to know if this kind of any application existed, after research, we feel proud to say, that none like this exists. The first night with team of 3, we came up with the design and layout of our application and went to some sleep. When we woke up, we realized one of teammates (the one for whom we came up with financial hack) was gone. We expected him to comeback sometime the 2nd day of hacking. It took afternoon to realize he was never to come back. But as people say, when god takes one, he gives another one. Someone looking at my post from slack channel #teammate and contacted us. When explained, she quickly like the idea and willing to join. Hence we still remained team of 3. 

Our major challenge was to find compatible python library. We looked into plotly, Borah,numpy, pandas etc. We even started coding in plotly, numpy, pandas. We ran into technical issues like plotly needed creation of account, nummpy and pandas had dependency issues. And since our team consisted of both Windows and iOS environments, we had to make sure what we were using works on all platforms with out errors. After quiet research and lot of effort, we decided on using matplotlib. Even though we has issues in making it work, we were successful in completing it.

When the time came to data visualization, we didn't know what data to represent, what values should be used on x-axis, y-axis. And after a detailed discussion sessions, when we together agreed on what data to represent, there was an other one, how do we want to represent? After another discussion session, we decided to display it as histogram.

Accomplishments that we're proud of

Ofcourse, we are proud of our innovate app, and the whole journey of this hackathon. We are proud of everything we did for this app. Starting from brainstorming ideas to, banging our head to, completing our project successfully. We used real time tax bracketing, tax related data. So next years tax filling would be a cake walk for us. :p 

What we learned

Every brain storming session, every discussion we had, every error we encountered, provided us a chance to learn something new every time. All the research we did before deciding on tools and technologies were totally worth it. Every aspect of this project helped us learn and grow more.

What's next for SSS - Smart Solution for Sceptic

In SSS we just showed visualizations in employee perspective, we want to extend it to employer perspective too. We want to show visualizations on which benefit is most used by employees, which employer benefit is efficiently used by employees, what changes can employer make to encourage employees to contribute better etc.
",https://www.youtube.com/watch?v=a7CCO5C57U8&feature=youtu.be,https://github.com/kirakrishnan/bitcamp2019,,"Best Hack to Democratize Financial Services - PayPal Credit, Most Realistic Workplace Hack - TCS, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Moonshot Hack - Bitcamp, Best Financial Hack - Capital One","python, flask, html, css, matplotlib, visual-studio, pycharm",,"UVA, Villanova University, NIU",,,sripranathivr109,sri,padala,sripranathi.vr109@gmail.com,Bradley University,2,tncsowmya,Sowmya,Turaga Nc,tncsowmya@gmail.com,aravindakrishnan92,aravind k,v,aravindakrishnan92@gmail.com,,,,,,,,
Study Buddy,https://bitcamp2019.devpost.com/submissions/118899-study-buddy,"Inspiration

People are motivated by others to start new endeavors and continue learning new things. To promote a culture of collaborative learning experience, people can find others with similar interests and expand their skills by knowledge sharing. 

What it does

Users can choose other people to learn new things or teach others what they are good at.

How we built it

Android Studio is used to build Study buddy in java. We have also leveraged firebase service to create a server-less real-time database repository and authentication of users of Study Buddy. 

Challenges we ran into

Learning all the details of implementing things in android as we were unfamiliar with the process.

Accomplishments that we're proud of

We are not proficient in android app development, so it was a good learning experience to develop this app.

What we learned

Connecting android with Firebase - authentication, database and storage.

What's next for Study Buddy

Adding more features, like course wise peer-pairing and career recommendations
",,https://github.com/intekmaster/TinderClone-master,https://s3.amazonaws.com/challengepost/zip_files/production/43570/zip_files/TinderClone-master.zip,"Most Entertaining Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP","android-studio, java, firebase",,University of Maryland Baltimore County (UMBC),,,intekhabnaser,Intekhab,Naser,intekhabnaser@gmail.com,"University of Maryland - Baltimore County, University of Maryland - Baltimore",2,hy17693,Jaganathan,Velraj,hy17693@umbc.edu,abalas2124,Amrithya,Balasubramanian,abalas2124@gmail.com,,,,,,,,
Lights Out,https://bitcamp2019.devpost.com/submissions/118900-lights-out,"Inspiration

We wanted to learn how to make a VR application and wanted to promote sustainability (go green terps!) through a game.

What it does

Our project is a VR maze game that is intended to raise awareness of the importance of saving energy. The premise of our game is that the player has a limited amount of energy, which is consumed by lamps inside the maze. The player must traverse through the maze and turn off each lamp before all the energy runs out.

How we built it

Our game was built from the ground up using Unity and Microsoft Visual Studio.

Challenges we ran into

One challenge for us is that two of our team members are complete first-timers to using Unity and C#. Thus, they had to attend a Unity workshop and complete various tutorials in order to gain the necessary skills needed to complete the project. Furthermore, we encountered issues when trying to upload our code for our other members to access, as well as an untimely blue screen of death. Lastly, the game tends to cause some motion sickness.

Accomplishments that we're proud of

What we learned

We learned that it's not so hard to get started with game development, help the environment, and pursue your dreams of creating a game.

What's next for Lights Out

First off, we would like to add devices to turn off other than just lamps. In particular, we would like objects that could be found using sound, such as running faucets or TVs, to further the immersion in VR. For the lamps, we would like to enhance their lighting capabilities, by giving the walls reflective or transparent properties, making vision even more crucial to locating them and also furthering the immersion. Lastly, we have taken steps to lessen the motion sickness, but would like to eliminate it without hindering the smoothness of the game.
",,,,"[Compass Challenge] Best Hack for Energy Sustainability - GOEFER, Most Entertaining Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp","unity, visual-studio",O1,University of Maryland,Alienware Laptop|-|Oculus Rift,,hammy1000,Austin,Long,hammy1000@gmail.com,University of Maryland - College Park,2,mosesk112,Moses,Kang,mosesk112@gmail.com,charlieyuecao26,Yue,Cao,charlie.yue.cao26@gmail.com,,,,,,,,
mlarena,https://bitcamp2019.devpost.com/submissions/118903-mlarena,"Inspiration

We love competitions like MIT's _ Battle Code _ and Two Sigma's _ Halite _ as platforms for student-created AI bots to compete. Not only are they incredibly exciting competitions, but they provide endless learning experiences to computer science students and enthusiasts that are extremely difficult to reproduce in a classroom environment. We wanted to see these sorts of competitions to grow in number and popularity, so we created mlarena.

What it does

mlarena is a Platform as a Service that provides prospective AI competition hosts a convenient service for creating and running games at a large scale. All that the host has to do is upload the code (as python files, for instance) that runs their game and provides the game API. After that, other users can upload code for their own bots to play this game. In an automated match-scheduling process, the bots are pitted against each other to play the game. A leaderboard displays most successful bots using an elo rating system. Additionally, the competition host can provide an animation script that animates replays of matches directly in the browser.

How we built it

The website and database were built using bootstrap and django. All matches between bots are run through Google Cloud Functions, allowing for many games with high computational overhead to run at a large scale. Our django app was hosted and deployed via Google App Engine. 

Challenges we ran into

One challenge that we ran into dealt with the JavaScript files that competition hosts provided in order to animate replays of matches. It was difficult figuring out how to store these files and load then into the animation page. 

Accomplishments that we're proud of

We are proud of how much all of us learned throughout the development of this project from Python Django and Google Cloud Platform.

What we learned

For two of our team members, this was our first experience with Python Django. With all of us working with Python Django for this webite, we have more experience with how it works. We also all gained understanding of working with the Google Cloud Platform.

What's next for mlarena

Protecting against XSS attacks. 
",,https://github.com/jackschu/mlarena,,"Most Entertaining Hack - Bitcamp, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP","google-app-engine, google-cloud, django",,"University of Virginia, Virginia Tech",,Google Cloud Platform,hmir,Hamza,Mir,hamzasmir@gmail.com,"University of Virginia, Virginia Tech",2,Davidcthames,David,Thames,davidcthames@gmail.com,HarunFeraidon,Harun,Feraidon,harunferaidon@gmail.com,,,,,,,,
Twoot,https://bitcamp2019.devpost.com/submissions/118906-twoot,"Inspiration

I gained inspiration for this project after talking to a representative at FINRA, where he explained the basics of machine learning and gave examples of beginner projects. I became interested in sentiment analysis and the calculation of polarity through machine learning. Because I had signed up as a twitter developer before this hackathon, I figured that combining the two things into twitter sentiment analysis would be fun and relevant to a compass challenge.

What it does

My program opens up a GUI containing an input field, an analyze button, and an output field. The user enters a search query into the input field, clicks analyze, and views the resulting tweet that pops up onto the output field. The output contains the polarity of the tweet, and whether it is positive, neutral, or negative. My program meets the goal of a compass challenge in the sense that it helps solve problems in society. This is accomplished by the user entering a query about anything that could be prevalent in society, and analyze the polarity of said query. From there, they could see what is doing well or what could be fixed in their community by the polarity of the tweets.

How I built it

There are numerous python modules that were used in my program. Tkinter was used to create the GUI, Tweepy was used to gain access to tweets, and textblob was used to analyze sentiment of the obtained tweets. 

Challenges I ran into

I had a hard time figuring out the GUI format as this was my first time using the Tkinter module. The spacing and layout of all of the frames were very finicky, similar to HTML. 

Accomplishments that I'm proud of

I am happy that I was able to successfully combine a twitter api with a machine learning module into an easy to use program that is relevant to the compass challenge.

What I learned

The main thing that I learned from this project was figuring out how to utilize multiple python modules in order to create a cohesive and user-friendly program.

What's next for Twoot

The next step that I would like to take concerning Twoot would be to incorporate my own trained ai, as the sentiment analysis already uses the textblob ai. I would use machine learning to create an artificial intelligence capable of taking in real world events as training data and seeing how that affects the polarity of tweets originating from the general locations of said events.
",,,,,"python, twitter, textblob, sentiment-analysis, tweepy, tkinter",,Baltimore Polytechnic Institute (Highschool),,,jacky-le,jacky-le,,jacky.le408@gmail.com,,0,,,,,,,,,,,,,,,,
scenARy,https://bitcamp2019.devpost.com/submissions/118907-scenary,"Inspiration

We came into this hackathon with a mutual passion in augmented reality. We agreed that we would like to experiment with the technology, and set a goal to create an app that we enjoy making.

What it does

scenARy allows a user to construct a miniature digital forest in their own environment through an iOS or Android device. 

How we built it

We created a project in Unity and downloaded the ARFoundation, ARKit, and ARCore plugins. These plugins were what enabled us to create an augmented reality application which could be used on both iOS and Android devices.  We were assisted through a few online tutorials, and we also benefitted greatly from two talks that John Ball gave on Unity and Mobile AR development during the event. The 3D models that we used were from the Unity Asset Store.

Challenges we ran into

Early in the hackathon, we decided to use React-Native to accomplish our goal, but discovered after a bit of research and exploration that Unity would serve us better. That being said, we had never used Unity before, so we were challenged to build our knowledge of said tool from scratch.

Accomplishments that we're proud of

Neither of us had experience developing AR applications, and we are proud with the final result of our weekend. Additionally, it was Henry's first hackathon and one of his first times developing a project outside of school. We are both pleasantly surprised with our work.

What we learned

We learned about Unity, C#, and iOS and Android development. We learned a great deal about AR development, such as how plane detection works, and the potential of handheld devices for AR.

What's next for scenARy

For this hackathon, we stuck to a forest theme that has just 4 unique models. We could easily improve upon this by changing themes, or including more unique models to enhance user experience. Additionally, our app is pretty flexible in purpose and can serve as a foundation for future applications in augmented reality.
",,,,,"unity, arfoundation, c#, augmented-reality",,"University of Maryland, University of Maryland-Baltimore County",,,9reeno,Connor,Markwell,markwell.connor@gmail.com,"University of Maryland - Baltimore County, University of Maryland - College Park",1,Lamp-Shady,Lamp-Shady,,henrycov@gmail.com,,,,,,,,,,,,
Breach,https://bitcamp2019.devpost.com/submissions/118912-breach,"Inspiration

I really wanted to make a complete game, and build an engine for it from scratch

What it does

Creates and arcade like game to be played

How I built it

with love2d for just putting graphics on screen, and then raw lua programming on my part for the engine

Challenges I ran into

infinite floating integers causing messes with my code

Accomplishments that I'm proud of

how far I've got with it

What I learned

furthered my knowledge in lua and the game design workflow

What's next for Breach

flesh it out more and add more art
",,https://github.com/JBen01/BrechBitCamp2019.git,,Most Entertaining Hack - Bitcamp,"lua, love2d",,northern virginia community college,,,JBen01,JBen01,,jose.a.benavides01@gmail.com,Northern Virginia Community College,0,,,,,,,,,,,,,,,,
VANK,https://bitcamp2019.devpost.com/submissions/118913-vank,"VANK

A quick one and done medium for matching students to volunteering positions and short-term job opportunities
Submission for Bitcamp 2019.

Live Preview!

Contents


Stack Outline
Strategies
Bonus


Stack Outline

Front End


Deployed on Github Pages with a unique domain name 
Google Maps API
Angular version 7.3.6 


Materials
Components

Bootstrap
HTML + CSS + JavaScript


Back End


Angular version 7.3.6 
TypeScript
Node.js
JSON
npm + ng


Database


Firebase


Stategy


Separate Users and Organizations
Design a GUI that gives parties fast and simple access 
Design a rating system for both parties (users and organizations)
Designed GUI in a way that gives the user the closest organizations first in the stack


Bonus


Learn Angular, TypeScript, Google Maps, Firebase 
Pinpoint coordinates of the organizations around the users current location 


Background Knowledge

Development server

Run ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.

Code scaffolding

Run ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.

Build

Run ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.

Running unit tests

Run ng test to execute the unit tests via Karma.

Running end-to-end tests

Run ng e2e to execute the end-to-end tests via Protractor.

Further help

To get more help on the Angular CLI use ng help or go check out the Angular CLI README.
",,https://github.com/kurnal/vank,https://s3.amazonaws.com/challengepost/zip_files/production/43575/zip_files/README.md,"Best Domain Registered with Domain.com - MLH, [Compass Challenge] Best Hack for X* - Bitcamp, Best First-Time Hack - Bitcamp, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","typescript, html, css, javascript, angular.js, firebase, bootstrap, node.js, json, google-maps, google-geocoding, npm",,"University of Maryland, College Park",,,kurnal,Kurnal,Saini,kurnalsaini@gmail.com,University of Maryland - College Park,2,vsinghai,Varun,Singhai,vibhuja@gmail.com,arkomz,Arko,Mazumder,arkomz91@gmail.com,,,,,,,,
TagChat,https://bitcamp2019.devpost.com/submissions/118915-tagchat,"Inspiration

Most people use groupme as a tool to communicate important (well, most of the time?) information about the class, but the message in the chat is sometimes mixed up and it becomes hard to find effective information.
One day someone in my physics260 chat complains about people posting meme and pictures about their pets and made him difficult to find useful information. Of course, that led to a discussion. What if people can tag every message they sent and filter by tags? 

What it does

Filter the messages by tags

How I built it

We did some research and found most desktop chatting apps are built with electron, and
we found an open source project online called ""hola"", so we decided to build our functionalities upon it.

Challenges I ran into

vue.js, css and html are not that easy to learn in 36 hrs...
None of us had any prior experience with javascript, so this entire project is a huge challenge for us.

Accomplishments that I'm proud of

Although the result is far from what we initially wanted, we got the most basic functions working

What I learned

Basic knowledge with vue.js, css and html

What's next for TagChat

A lot more!
-people can add tags for other people's chat,
-tags sorted by popularity
-fix issues and bugs
",,https://github.com/dzy49/tagchatbitcamp19,,"Most Realistic Workplace Hack - TCS, Best First-Time Hack - Bitcamp","javascript, vue.js, html, mongodb, scout-trail",,University of Maryland,,,dzy49,dzy49,,deng199849@gmail.com,University of Maryland - College Park,2,lian9997,lian9997,,lianzheyuan@outlook.com,ziyuesu,Ziyue,Su,ziyuesu@terpmail.umd.edu,,,,,,,,
Blindfold,https://bitcamp2019.devpost.com/submissions/118916-blindfold,"Motivation

Back in High School when I was in my sophmore year, we were assigned a reading on Hellen Keller's book Story of my Life for that academic year. One day our school organanized a community service class trip to a special school for blind students. After reaching there I was suprised to find out from their mentors that these students were not familiar with our normal aplhabets and had braille instead; because reading and writing in normal alphabets was very difficult for them. This was stuck in my mind for a really long time. This motivated us to create this project for visually impaired individuals to learn to write normal alphabets

What it does

This projects helps and guides visually impaired individuals to write numbers by tracing along.

How we built it

We built it using HTML, JavaScript, and CSS. We also implemented a few text to speech modules.

Challenges we ran into

Although both of us had a little experience in web development. None of us had made anything similar to this before, hence we had to learn a few technologies and implement them simultaneously. 

Accomplishments that we're proud of

Completing a working prototype within our hackathon time-frame

What we learned

More than gaining technical knowledge we learnt how to effectively manage time, ask help, manage project such that the project is developed in an organized and productive way between you and your team-mate. 

What's next for Blindfold

During our time when we were developing blindfold we had several ideas which could potentially make the project easier to use for people and also be more effective in its purpose but we could not implement those ideas as we did not have enough time or knowledge but later on we are planning on spending some more time to develop this prototype into a fully functioning project.
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43577/zip_files/Bitcamp2019_Blindfold.zip,"Best First-Time Hack - Bitcamp, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Hack for Education - Bloomberg LP","html5, javascript, css, text-to-speech",,Drexel University,,,kiruthiksai,,,bkkiruthiksai@outlook.com,Drexel University,0,,,,,,,,,,,,,,,,
Kuber,https://bitcamp2019.devpost.com/submissions/118917-kuber,"Inspiration

Finance with all it's quirks and jargon is difficult to get into for people with no experience.  

What it does

This app enables millennials with no experience in finance explore investing in stock market using familiar game like interfaces. It is aimed to be a bridge between having fun and getting into investments.

How I built it

The app is built using react native for android with GCP cloud vision api and firebase.

Challenges I ran into

Using firebase database.

Accomplishments that I'm proud of

Built a mobile app using react native for the first time.

What I learned

Using React Native and explored GCP and Firebase.

What's next for Kuber

Getting it to completely working state. 
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43578/zip_files/App.js,"Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP, Best Financial Hack - Capital One","javascript, gcp, firebase",,The University of Massachusetts Lowell,,,jmankani7,,,jaikishin_mankani@student.uml.edu,University of Massachusetts - Lowell,0,,,,,,,,,,,,,,,,
ibis,https://bitcamp2019.devpost.com/submissions/118918-ibis,"Inspiration

What it does

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for ibis

.
",,,,,"google-cloud, arc-gis, esri, google, android-studio",,"University of Maryland, University of Maryland at Baltimore County",,,MCTTAN,Marie Chantal T.,Tan,mariechantaltan@gmail.com,University of Maryland - Baltimore County,0,,,,,,,,,,,,,,,,
Handterpret,https://bitcamp2019.devpost.com/submissions/118920-handterpret,"Inspiration

With more than 400,000,000 hearing-impaired individuals worldwide, it is evident that hearing loss is a major issue in society. To address the severity of this issue, we created a translator from American Sign Language to English to help improve communication between individuals who cannot understand American Sign Language but speak English and individuals who are hearing-impaired using machine learning.

What it does

The translator opens a camera application that prompts the user to input hand signs and then translates the sign language to English text. Furthermore, the user may also convert the translated text to speech. The application does not require any specific hardware, just a computer with a camera!

The probabilities of the sign matching an intended character were calculated using a Naive Bayes algorithm. The Naive Bayes classifier obtained from this algorithm is combined with a decision rule, which maps the observation to an appropriate action. 

How we built it

We used python to develop the frontend of the application. For the backend, we also used python in addition to opencv and the TensorFlow library to create the backend of the application. To help our convolutional neural network learn, we used the Keras library to train it by inputting images ourselves. 

Challenges we ran into

This was our first time using the TensorFlow and Keras libraries, so it made it difficult to separate the image the camera is recognizing from the actual hand sign. Also, it was challenging to train the neural network because we had to input images that we created ourselves, which is extremely time-consuming. Moreover, hand signs that are similar, such as hand signs for the letter A and the letter E, are hard to distinguish and require more training. 

Accomplishments that we're proud of

We are proud of creating an ASL translator application that does not use any specific hardware. Also, we managed to create a dataset large enough to recognize a lot of letters. Time was the biggest restraint, but we did what we could.

What we learned

We learned how to use the TensorFlow and Keras libraries in python and how convolutional neural networks work. 

What's next for Handterpret

The obvious next step for ASL Translator is to improve the accuracy of our translator. Since our application is not restricted to specific hardware such as LeapMotion it works with any computer with a camera, so we hope to expand our application to mobile phones.
",https://www.youtube.com/watch?v=UFaUeABDv_M&feature=youtu.be,,,"Best Moonshot Hack - Bitcamp, [DESIGN DEN] Best Bitfolio - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, [Compass Challenge] Best Hack for X* - Bitcamp, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp","python, opencv, machine-learning, neural-networks, convolutional-neural-networks, tensorflow, keras",B4,"University of Maryland, College Park",,,davidzhen0,David,Zhen,davidzhen0@gmail.com,University of Maryland - College Park,3,redblacktrees,Ekesh,Kumar,ekfrmd@outlook.com,aechill,Alex,Chill,aechill@verizon.net,TrueActionman,Farhan,Nadeem,farhannadiim@gmail.com,,,,
Open Weapon Site Finder,https://bitcamp2019.devpost.com/submissions/118922-open-weapon-site-finder,"OWSF (Open Weapon Site Finder)




We used the Google Earth Engine to pull data from the Sentinel1 satellite. We analyzed Sentinel's C-band radar data and looked for places where missiles' guidance radars cause consistent interference. We detected this low-power but consistent interference by tracking the pixels that were the ""brighest"" over the longest period of time. Using this multi-temporal analysis method, we were able to detect several types of military radar systems (more on this later), but by applying a clever polarimetry trick, we were able to isolate C-band phased array radars, which are most commonly used for Patriot surface-to-air missiles. Specifically, we analyzed the ""bright spots"" in each polarization, and noted that phased array radars interfere with each polarization differently. These differences allowed us to identify Patriot missiles by distinct X-pattern shown below. From images like these, we performed image processing to isolate the coordinates of the missile sites. While we did not have time to run our image processing payload on the entire Earth, we applied our methods to several geographic regions, including part so the US, the Middle East, Western Europe, and Eastern Asia. The sites that we found are indicated below on the map.

More information available on this project's website.

Built With


ArcGIS Online - Map
Google Cloud Platform - VM
Tensorflow - ML Framework
Google Earth Engine - Google Earth Engine


Authors


Ryan Tse - rytse
Adeeb Abbas - adeeb10abbas
Cameron Simmons - cbsimmons4

",,https://github.com/rytse/owsf,,"Best Hack with Esri APIs and SDKs - Esri, Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Use of Machine Learning - Metron","python, shell, machine-learning, maps, ip-api.com-geolocation",,"Drexel University, UMD College Park, Montgomery Blair HS",,Google Cloud Platform,adeeb10abbas,Adeeb,Abbas,adeebabbas@outlook.com,Drexel University,2,rytse,Ryan,Tse,ryantse100@gmail.com,cbsimmons4,cbsimmons4,,cbsimmons4@gmail.com,,,,,,,,
Tamoka: Capture ,https://bitcamp2019.devpost.com/submissions/118923-tamoka-capture,"Inspiration

We were inspired by both pokemon go and Pokemon Ranger to develop a fusion style game with a twist.

What it does

It functions essentially as a pokemon ranger game

How I built it

Hand made art assets, as well as unity expertise

Challenges I ran into

Planning and timing a game's execution can be a very difficult task to manager

Accomplishments that I'm proud of

It's fun to play around with

What I learned

What's next for Tamoka: Capture
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43615/zip_files/Tamoka.zip,"Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [DESIGN DEN] Best Bitfolio - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, [Compass Challenge] Best Hack for X* - Bitcamp","unity, c#",B5,George Mason University,,,mkeays,Michael-Andrew,Keays,mkeays@gmu.edu,George Mason University,1,raquelbumgarner,Raquel,Bumgarner,raquel.bumgarner@me.com,,,,,,,,,,,,
HTCPCP,https://bitcamp2019.devpost.com/submissions/118924-htcpcp,"Inspiration

The standards for Hypertext Coffee Pot Control Protocol were published as RFC 2324 as an April Fools' joke in 1998. It was an extension of HTTP that allowed for 'controlling, monitoring, and diagnosing coffee pots.' We chose to take the old joke leagues too far and actually implement it.

What it does

We've developed client and server libraries in C that allow users to build applications using HTCPCP. The server library allows you to define routes and callback functions and run them as an HTCPCP webserver, and the client library builds requests that the server can receive.

How we built it

Purely using sockets in C.

Challenges we ran into

We did everything in C, what challenge didn't we run into?

Accomplishments that we're proud of

It's working! The client library can send HTCPCP requests and the server can receive them.
",,https://github.com/JustinMMiller/HTCPCP,https://s3.amazonaws.com/challengepost/zip_files/production/43580/zip_files/HTCPCP.zip,"Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Most Entertaining Hack - Bitcamp","c, raspberry-pi",,Virginia Commonwealth University,,,r-best,Bobby,Best,bobbyisbest3@gmail.com,Virginia Commonwealth University,1,millerjm24735,Justin,Miller,millerjm24@vcu.edu,,,,,,,,,,,,
Smile!,https://bitcamp2019.devpost.com/submissions/118925-smile,"Smile!

You're on camera! Everyone could always smile a little more. 
This Chrome extension reminds you to smile before browsing social media. ML makes sure you won't get through unless you flash a genuine smile... :D

What it does

We hope that by reminding people to smile before logging on to social media, everyone can become happier over time.

How we built it

We built the machine learning portion of the hack on python using sklearn's Olivetti faces dataset to determine whether or not a person was smiling. The front end is a Javascript application written using the Chrome extension platform.

Challenges we ran into

Since it was many of our first times at a Hackathon, beginning the process was daunting. The inexperience added to the complexity of making different platforms interact with each other.

Accomplishments that we're proud of

Training a machine learning model was incredibly rewarding. Above all, we were proud of the fact that we were able to create a product from an interesting idea despite lacking a lot of technical experience. 

What we learned

Working with APIs is a painfully dull and mind-numbing process if they are not well-documented.

What's next for Smile!

Integrating the ML model better into the chrome extension would make the application more accurate and more effective for people who need the reminders.
",,https://github.com/raymondzouu/Smile2,,"Most Realistic Workplace Hack - TCS, Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp","python, javascript",,"University of Maryland, College Park",,,raymondzouu,raymondzouu,,rrzou17@gmail.com,University of Maryland - College Park,2,geiko246,,,geiko246@gmail.com,VatsalAgarwal,Vatsal,Agarwal,vatsalag99@gmail.com,,,,,,,,
Obnoxious Scheme to Convince All to Recycle (OSCAR),https://bitcamp2019.devpost.com/submissions/118927-obnoxious-scheme-to-convince-all-to-recycle-oscar,"Inspiration

We love trash talking. Don't get me wrong, we don't condone gossip in our house. But did you hear about that guy the other week who threw trash in the recycling bin? I know! Crazy right? Some people...

What it does

We have three (3) bins: compost, recycling, and trash. A voice-over is played to indicate where the user should place their trash (randomized). Sensors over each bin detect  which bin an object is placed in. If the user places the trash in the correct bin, the audio plays a pleasant message. If placed in the incorrect bin, they will be scolded. Tsk, tsk.

How we built it

We used a raspberry pi to handle the motion sensors and the audio.
The bins themselves we forged in the fires of Mount Doom.
We used a zoom mic to record the audio and audacity to edit it.

Challenges we ran into

The Arduino 101 didn't work, so we threw it in the trash.
The Arduino Uno didn't have audio so we threw it in the recycling bin.
The Google Home didn't have an easy way to play audio despite being a smart SPEAKER so we put it in the compost bin.

Everything was incredibly easy because we are all geniuses. The most difficult part of this project was tweeting out our logo as a submission for the color war contest. Twitter makes me bitter.

Originally we planned to use an IBM Watson cloud service to distinguish the type of garbage. But it turns out garbage can't detect itself. Though we got the app to ""work"", we couldn't figure out how to get it to sort the recognized objects into categories. In addition, the app does not really seem to identify things in an... appropriate manner. 

Accomplishments that we're proud of


The Voice -- it sounds both passive, and aggressive. It's a new thing I like to call aggressive-passive.
The Tweet -- We finally tweeted the thing. I can do technology yaaaaaaaaay.
The Drawing -- An Oscar-winning drawing of an oscar with oscar's head (see attached)
The Flower
The Intrigue
The Dismay
The Elaborate Joke Taken Too Far -- this


What we learned


I learned Swift swiftly
How to tweet
Some Python
What a backend API is
Apple is super finicky about developer accounts
Large companies are not always competent (not saying any names (cough IBM); we don't condone gossip here)
It's better to write something yourself than to use something pre-made that doesn't work
How to draw (See attached; please hire me Im basically an expert now)
YOU CAN FRICKEN DRAG A FILE INTO A TERMINAL AND IT COPIES THE PATH!!! AWESOME!!!! (thanks python mentor dude Johnnnnn!)


What's next for Obnoxious Scheme to Convince All to Recycle

We NEED to win an oscar.
",,https://github.com/johanvandegriff/oscar,,"Best First-Time Hack - Bitcamp, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, [Compass Challenge] Best Hack for Energy Sustainability - GOEFER, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp","raspberry-pi, cardboard, tape, pipecleaners, python, ulstrasonic-sensor, line-break-sensor, ibm-watson, swift, ios, krita, zoom-microphone, construction-paper, audacity, breadboard, wires, hairtie, superfight, markers, headphones, love, speaker, box-cutter",W13,University of Maryland College Park,,,sannem42,Emily,Sann,sannem42@umd.edu,"University of Maryland - College Park, University of Maryland - University College",3,johanvandegriff,Johan,Vandegriff,johan@vandymail.com,elianasarahk,Eliana,Krakovsky,elianasarahk@gmail.com,nrogers2,Nate,Rogers,nrogers2@terpmail.umd.edu,,,,
The Iron Bank of Bravos,https://bitcamp2019.devpost.com/submissions/118928-the-iron-bank-of-bravos,"Who Are We?

We are the Iron Bank of Bravos, Since we do business with all parties of Westeros, Its very Important for us to recognize who is a Lanister(Who Always pays his debts :P) and who is not.

Inspiration

So, we try to analyze and understand the various bodies involved in our present day Financial Market and predict their credibility. Investment market have been known to be vulnerable by ample of market makers, And today being the auspicious day of the return of GOT, we start by looking at one of the key players in the game, Investment Advisers/Brokers. As the brokers are closely related to both, the markets and the investors,and hold huge significance in keeping the markets clean and stable. 

What it does

Here, we are trying to use the data (provided by FINRA) about the brokers of different firms and backgrounds to:


Perform Unsupervised Learning  and identify correlations & similarities in the high dimensional space
Assess the credibility of the brokers and creating a metric for estimating their credibility.
Also, We work on building a Delinquent loan classifier, and look at borrowers who have defaulted on their loans(Dataset Provided by RiskSpan).


How we built it

After pre-processing and understanding the highly categorical nature of the dataset, we started out by looking at unsupervised learning approaches to make sense of the data. We applied classical machine learning and deep learning algorithms on the dataset to cluster them into groups and the insights we gained from the exercise helped us build a metric to estimate their credibility. We then did the same analysis on the borrower end and built a classifier to identify potential delinquent loans.

Challenges we ran into

Pre-processing and wrangling the xml data was fairly difficult.  The data processing was also a challenge, because of the size of the dataset. Building the metric for broker credibility also took a lot of thinking.

Accomplishments that we're proud of

Being able to make sense of the data and coming up with statistical measures that can be used in the future for prediction and classification.

What we learned

State of the art machine learning algorithms like Self-organizing maps and K-Mode Clustering, assessing the features to build a metric. We also tried deep learning methods like self organizing maps and cluster.

What's next for The Iron Bank of Bravos

We can move a step further and analyze the investors of markets to find out market manipulation patterns.
",,https://github.com/satya-umd/bitcamp19,,"Best Financial Hack - Capital One, Best Hack to Visualize Mortgage Loan Performance - RiskSpan, Best App or Site for Investment Advisor Rep Report - FINRA, Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Use of Machine Learning - Metron","python, r, google-bigquery, tableau, findata, machine-learning, node.js, github, xml, batch, linux, sublime-text, excel",,"University of Maryland, College Park",,Google Cloud Platform,himanshim,himanshim,,himanshimanglunia@gmail.com,University of Maryland - College Park,2,satya-umd,satya,Amarapalli,satya.pradeep8@gmail.com,snehal29,Snehal,Bedmutha,snehal29@terpmail.umd.edu,,,,,,,,
Moment,https://bitcamp2019.devpost.com/submissions/118929-moment,"What it does

Creates an event-based community through local live chat rooms and geo-tagged images. [bzzz words!]

How we built it

Android studio and Firebase. [and tutorials]

Challenges we ran into

Learning how to develop for Android. Neither of us had done this before...nor had much cloud experience.

Accomplishments that we're proud of

Personally, I'm just satisfied I made something remotely like an Android app. :)

What we learned

The fundamentals of Android app development and cloud back-end services.

What's next for Moment

Maybe completing the prototype.

(Not sure it compiles...but I'm linking it for proof)
",,https://github.com/MatthewZDaniel/Moment,,,"java, firebase",,George Mason University,,,mjegames,Matthew,Endries,mjegames@gmail.com,George Mason University,0,,,,,,,,,,,,,,,,
MotivateMe,https://bitcamp2019.devpost.com/submissions/118930-motivateme,"With our software we are striving for innovation related to mental health. We can help bring positivity and motivation into people's lives, which in turn will help decrease stress and negative thoughts, as well as increase mental health. Mental health is an issue that affects about 1 in 5 adults nationwide. That number increases to 1 in 4 when you narrow the demographics to college-aged adults. This is a huge issue all around the world that needs to be addressed and solves, this is the issue we are trying to tackle in our software. Our project MotivateMe gives users access to a variety of inspirational and motivational quotes that they will receive throughout the day on our GroupMe chat, they can also be members of a community of people who are also looking for more positivity in their life. On this community users can post their teachings, and advice as well as any inspirational messages they have. MotivateMe will help boost confidence, and influence happiness.
",,https://github.com/peterchun2000/BitCamp,,"[Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","ruby, html, css, javascript, python, google-cloud, sass, ruby-on-rails, groupme",,"University of Maryland, College Park",,Google Cloud Platform,peterchun2000,Peter,Chun,peterchun2000@gmail.com,"UMD, University of Maryland - College Park",3,idle-zealot,Braeden,Mollot,3mollot@gmail.com,jpatel369,Jay,Patel,jayapatel369@gmail.com,ledoanh96,,,ledoanh96@gmail.com,,,,
These Hips Don't Lie,https://bitcamp2019.devpost.com/submissions/118931-these-hips-don-t-lie,"Inspiration

We just wanted to do some jazz hands, however an unsettling feeling sunk in when Nickle Back came on Spotify next. We wanted a Spotify that understood the importance of song choice when it came to dance.

What it does

Our application takes in the sick dance moves you throw down on the street and finds how many beats per minute you are dancing at. Once it finds your rate it chooses a song that matches your tempo. Don't worry though, no matter how off beat you like to be, we dynamically update the song.

How we built it

We use your phones accelerometers and perform mathematical analysis on the acceleration vectors to finds BPM. We continue to measure a rolling average with built in tolerances to not have songs switch too much but purposeful changes in ""groove set"" will  match you to a new tune.

Challenges we ran into

React-native

Accomplishments that we're proud of

Dancing at a large hackathon like no one is watching

What we learned

What's next for These Hips Don't Lie

*Running machine learning on dances to choose songs that have particular dance moves associated with them.
*Visualizing the dance you preformed with a figure that matches your moves
",,https://github.com/JZHeadley/HipsDontLie,,"Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Most Entertaining Hack - Bitcamp","react-native, android, accelerometer",,Virginia Commonwealth University,,,Sarmentoaj,Austin,Sarmento,sarmentoaj@vcu.edu,Virginia Commonwealth University,3,jzheadley,Zephyr,Headley,headleyjz@vcu.edu,jonaylor89,John,Naylor,jonaylor89@gmail.com,Traubad,,,traubad@vcu.edu,,,,
Playlist Genie,https://bitcamp2019.devpost.com/submissions/118932-playlist-genie,"Inspiration

We found that making playlists on the spot for working out, long drives, or parties can be time consuming and tedious, so we decided to create a service to handle it for you!

What it does

Just tell Playlist Genie how long you'd like your playlist to be and how flexible you are on that duration, and it will handle the rest for you, generating a playlist to your specifications from your recent tracks on Spotify and exporting it right to your account.

How we built it

Using Javascript, Express, HTML, and interfacing with the Spotify API.

Challenges we ran into

Spotify's API is fairly difficult to work with.

Accomplishments that we're proud of

Sean learned web development from scratch for this project, Justin learned the Spotify API inside and out.

What's next for Playlist Genie

Genre specification, weighted shuffling, and sub-playlists to start! We'd love for Playlist Genie to be the interface most people use to create, edit, and manage all of their playlists on all music streaming services.
",,,https://s3.amazonaws.com/challengepost/zip_files/production/43584/zip_files/FinalProject.zip,Best First-Time Hack - Bitcamp,"express.js, node.js, tears, blood, sweat, javascript, html5",,University of Maryland,,,stackj,justin,Stackman,stackj9898@gmail.com,University of Maryland - College Park,1,seaniyoung1996,Sean,Young,sean.i.young1996@gmail.com,,,,,,,,,,,,
Map for Travelers ,https://bitcamp2019.devpost.com/submissions/118933-map-for-travelers,"Inspiration


when I visit Seattle and San Fransisco  during the past Spring break, 
I wished that there could be a app that once I typed in the hotel I stayed at and the target destinations (i.e. points of interest ), 
it will group my destinations and show my the best order of visit(Aka. avoiding making travel plans manually) 


What it does

She makes decisions!

How I built it

in two days, with javascript using mapbox without sleeping

What's next for map for travelers
",,http://104.196.206.214:5000,,"Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [DESIGN DEN] Best Bitfolio - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Use of Machine Learning - Metron","api, javascript, css",B6,University of Maryland,,,srazik,srazik,Fang,srazik@krasjet.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
Augment Anywhere,https://bitcamp2019.devpost.com/submissions/118934-augment-anywhere,"Inspiration

Our inspiration for building this was a desire to implement some of the infinite possibilities augmented reality brings to interaction with the real world. 

What it does

Allows users to tag physical objects and build augmented reality models on them.

How I built it

ARKit to enable the iOS client to create the models.
Node.js WebSocket server 
Hosted on Google Cloud Services

Challenges I ran into

Sending images over WS. Storing 3-D scenes (transformation matrices, orientations). Updating OSX and Xcode to 10.2. 

Accomplishments that I'm proud of

Coming up with cool models of how to store 3-D scenes (that I didn't end up using but will in the future).

What I learned

Zach: How to use ARKit and that your OS is a dependency. base64 encoding makes your images bigger. 
Ryan: Node.js backend development and the Google Cloud Services platform.

What's next for Augment Anywhere

Actually being able to upload the target images along with their geolocation and models so that all clients can see the same models on the same targets. 

Also, we would like to make the models that user’s share more interactive such as drawings, billboards, and even board games. The social aspect of this augmented reality project opens many doors for Augment Anywhere as an advanced social media platform. Aside from a social media, Augment Anywhere could enable parties to share 3d drawings and other digital constructs with each other.
",,https://github.com/zachwildd/augment-anywhere-client,,"Best Moonshot Hack - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","node.js, ios, arkit, google-cloud, mysql",,"University of Maryland, College Park",,Google Cloud Platform,rschweiz,,,ryanschweiz@gmail.com,University of Maryland - College Park,1,ZachWild,Zach,Wild,zacharyjwild@gmail.com,,,,,,,,,,,,
RandomGump,https://bitcamp2019.devpost.com/submissions/118935-randomgump,"Inspiration

Playing around with machine learning hyper-parameters while hoping for the best 

What it does

It keeps track of the lowest Mean Squared Error that a player achieves by messing around with hyper-parameters

How we built it

We used custom data-set that was trained on machine learning algorithms while running on Flask in the background.

Challenges we ran into

Front-end design and routes between the front-end and backend.

Accomplishments that we're proud of

Made within the last three hours of hacking. Lots of features and we learned a lot about frontend design.

What we learned

Front-end design and certain machine learning algorithms. 

What's next for RandomWalk

Better UI design, expansion to the class-room, and possibly multiplayer support
",,https://github.com/Memhir-Yasue/BitCamp2019,,"Best Domain Registered with Domain.com - MLH, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp","python, sklearn, html5, css3, bootstrap, flask",,"Temple University, VCU, NVCC",,,Memhir-YasuE,Eyasu,Woldu,tug54351@temple.edu,"Temple University, Virginia Commonwealth University, northern virgnia community college ",2,youngse8,Samuel,Young,samuel.young.103@gmail.com,natnaeltessema101,natnael,tessema,natnaeltessema101@gmail.com,,,,,,,,
Arduino Fire Alarm,https://bitcamp2019.devpost.com/submissions/118937-arduino-fire-alarm,"Inspiration

I've thought in the past, how would a deaf person know if there is a fire alarm going off in their house? There might be some devices that vibrates the whole bed, but, what if they are away from their bed? Like washing the dishes, reading in the living room, or distracted? As far as I know, there is no such device or product that is able to alert a deaf person if their fire alarm is going off.

What it does

The device alerts the deaf person of a fire alarm going off by picking up the frequency of the fire alarm. If the device detects a fire alarm going off, it will proceed to vibrate, letting the user know that the alarm is active. Not only that, the device also has a piezo buzzer that gets activated by the user by pressing a button. Once the button is pressed, the buzzer will buzz for 30 seconds along with an LED light flashing.

How we built it

I build the device using Arduino and some components, such as, a sound sensor and a piezo buzzer. I first designed the schematics for the device and proceeds to gather the necessary materials. I then proceeded to programming the device by researching different types of codes and combining them all together to fit the needs for the device. Once the programming is completed, we proceeded to transfer the pieces from a breadboard to a soldering board.

Challenges we ran into

We ran into multiple challenges on the first day while trying to develop the device. Since this is my first hackathon, I wasn't sure what to do, therefore, I wasn't able to plan out accordingly, wasting the whole first day doing nothing.
The most troublesome challenge I ran into was the hardware. During a meeting with my teammates on the first day, the idea for the device shifted to something else, which required more hardware parts. Since the MLH hardware lab has limited parts, we decided to create the initial idea instead.

Since we weren't sure how to proceed with the limited hardware parts, my team was on idle. Then we started losing numbers. In the end, only 2 of us remained out of 4.

Accomplishments that we're proud of

After finally trying to figure out how to create an algorithm to generate the necessary data from the sound sensor, we were able to find the FFT(Fast Fourier Transform) algorithm made for Arduino. After tweaking it around, the sound sensor finally was able to pick up and differentiate background noise (crowd noises) and the fire alarm noise.

What we learned

We learned that it is sometimes a good idea to stick to 1 idea and look for a workaround for it if you have time constraints.

What's next for Arduino Fire Alarm

I see a real value onto the device itself which can be extended to a wide audience rather than just for deaf people. If we had the correct equipment and parts, we could've made the device several steps ahead of the original idea.

I see real value in it during emergency situations, such as, earthquakes, search and rescue, emergency response, etc.
",,https://github.com/jordano00/arduino-fire-alarm/tree/master,,"Best First-Time Hack - Bitcamp, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp","arduino, c++",,"Towson University, George Mason University",Arduino 101,,christianffffffffffffffff,christian,fortuna,christian.fortuna.cf@gmail.com,"Towson University, George Mason University",1,smitj23,smit,,smitjani882@gmail.com,,,,,,,,,,,,
Score Keeper,https://bitcamp2019.devpost.com/submissions/118938-score-keeper,"Inspiration

We were tired of designating one person to be the score keeper during card games, board games, and tournaments, and we wanted a more convenient way of keeping score that's not paper or in a note sheet. Why don't we delegate this responsibility to the Google Home!

What it does

Keep track of each player's score during any given point in the game. The Google Action can let you set up a game, add more players to the game, add points to a given player's score, and connect all the scores to a Google Sheets spreadsheet for score-keeping control.

How we built it


We used Dialogflow to set up user intents for our score keeping actions.
The Dialogflow intents then send webhooks with necessary parameters to our python server.
Our server sends Google Sheets API calls to store and evaluate each player's score for the current round.

",,https://github.com/camjaws/camjaws.github.io,,"Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Most Entertaining Hack - Bitcamp","google-sheets-api, dialogflow, google-actions, python",,"University of Maryland, College Park",,Google Cloud Platform,DemureWolf,demurewolf,,josiahwedgwood@ymail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
I AM GREAT,https://bitcamp2019.devpost.com/submissions/118939-i-am-great,"The Idea/Problem:

There is a serious plague that has spread throughout the world (whoever is reading this might suffer from it!) The pathogen I am discussing is a lack in confidence and belief in oneself. As Jack Zenger stated, confidence proves to be equally as valuable as competence because it leads to action, attention and resilience. He discusses the Imposter Syndrome, where women frequently express that they don't feel they deserve their jobs and are ""imposters"" who could be found at any moment. A Hewlett Packard report found that men apply for a job/promotion then they meet only 60% of the qualifications, but women apply only if they meeting 100% of them. As women's experience increases over time, so does their confidence. Self confidence is what you think of yourself, self-esteem is what others think of you. With our product we hope to improve a user's self-confidence with their maintenance of skills and abilities. 

Atlantic Article Discussing the Confidence Gap

Mission:

Seeks to address the root purpose of learning skills: to build confidence and believe in one's abilities. 

Market Research

We recognized that our product is similar to Khan Academy (as well as other educational resources such as EdX and Coursea) because we are producing educational content targeted towards high schoolers and college students. However, our competitors do not emphasize the idea of continuous education, as they target students enrolled in a  course to learn topics for short-term memory. Our product seeks to have the user continually develop their skill in order for lasting remembrance, which would be refreshed by a weekly quiz. We also have a social-platform part of our app where there is user-to-user interaction through mini-battles to incentivize gaining points for their avatars. These re attributes that makes our product unique and more practical than others on the market. 

How we built it

We used the web framework Angular version 7 to architect the front, with Angular Material for the UI/UX. We also used Firebase for the user auth and database. 

Challenges we ran into

We wanted our app to look great and we ended up running into a few issues with the CSS animations and styling the Landing Page. 

Accomplishments that we're proud of

We're proud of implementing a user-authentication with Firebase, further making our demo a better proof of concept and realistic UI/UX.

What we learned

Part of our project is dependent on users gaining points through visiting other websites (resources we provide the user) and practicing their skills on the other platforms. If we were to fully develop this as a viable product to seek investment, we would be worried about copyright infringement.  

Future Updates:

We would like to have illustrations of our own superhero for each of the six learning areas because currently, we are using the Marvel v. DC rivalry as a representation of the different skills of STEM v. Humanities. We would like illustrations for an original hero representing: Engineering, Math, Science, Foreign Language, Entrepreneurship and History.

Conclusion:

Our team is so proud of the project we developed. In true Hackathon nature, we pivoted our idea on the second day and felt the deadline creeping up on us. But we spent this weekend learning about the simplicity (and frustratingly the complexities) of Angular while pursuing our passion of comic-book heroes!
",,https://github.com/mbusbyHub/fostering-client,,"Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Best Hack for Education - Bloomberg LP, Most Entertaining Hack - Bitcamp","html5, css3, angular.js, angular-materials, firebase",,New Canaan High School,,,girlwhocodes19,Stephanie,Murphy,murphystephanie2@gmail.com,Northern Virginia Community College,2,mbusbyHub,Michael,Busby,busbybam@gmail.com,Montez009,Courtney,Revada,courtney-intern@getmindright.org,,,,,,,,
BitCamp-2019,https://bitcamp2019.devpost.com/submissions/118940-bitcamp-2019,"This is an app that helps multiple people collaborate into one music playlist without even touching host's phone.
",,https://github.com/likhongomes/BitCamp-2019,,"Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Most Entertaining Hack - Bitcamp",python,,Temple University,,Google Cloud Platform,LikhonGomes,Likhon (Leo),Gomes,likhon_dg@hotmail.com,Temple University,0,,,,,,,,,,,,,,,,
Artify Yourself,https://bitcamp2019.devpost.com/submissions/118942-artify-yourself,"Inspiration

Machine learning is becoming a big thing, and generative models are becoming more popular as a form of ""creativity"" or ""intelligence"" for computers.

What it does

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for Artify Yourself
",,,,"Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp","python, tensorflow, magenta, numpy",,University of Maryland - College Park,,,yashaslokesh,Yashas,Lokesh,yashas.lokesh@gmail.com,University of Maryland - College Park,0,,,,,,,,,,,,,,,,
Vector Calc Sandbox,https://bitcamp2019.devpost.com/submissions/118943-vector-calc-sandbox,"Inspiration

A love of math, and a gap in pedagogical tools for teaching calculus 3 material in college.

What it does

This application takes advantage of the unprecedented visual and interactive capabilities of modern VR devices to create tangible experiences exploring abstract mathematical ideas. Our app aims to allow students to reach out and touch concepts that they have previously seen only in a classroom. Building a strong physical and geometric intuition is an important skill for any student pursuing a technical education, and our tools aim to enhance this skill that is often overlooked.

How we built it

We used the Unity engine, supplemented by calculations and prototyping with Mathematica.

Challenges we ran into

Implementing calculus in C#, and building in a VR environment.

Accomplishments that we're proud of

It looks awesome, and a lot of fun to use.

What we learned

A large amount. Lots of C# and Unity experience, and more than a little calculus.

What's next for Vector Calc Sandbox

Vector Fields, Curl,  Divergence, Green's theorem, and Stoke's theorem to name a few.
",,https://www.github.com/grabermtw/Vector-Calc-Sandbox,,"Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Hack for Education - Bloomberg LP, Most Entertaining Hack - Bitcamp","unity, oculus",,"University of Maryland, College Park",,,jlball,,,jlball@terpmail.umd.edu,University of Maryland - College Park,2,mgraber1,Matt,Graber,mgraber1@terpmail.umd.edu,EigenAjeet,,,agary@terpmail.umd.edu,,,,,,,,
Ship Base Detection,https://bitcamp2019.devpost.com/submissions/118944-ship-base-detection,"Inspiration

We wanted to do object recognition in ML and wanted to contribute to the country's defence

What it does

It can take in images from drone or any aerial vehicle and can make out whether there is a ship or a fleet or ship or ship base from an image of land,sea or coast. 

How we built it


We used the Maritime satellite imagery dataset to train our neural network. It is dataset of about 5000 images of land, sea,coast,ships, ship base and so on.
 We converted those images into lower resolution images using our custom made neural network architecture in keras 
We split our dataset into training and testing dataset.
We tweaked the neural network to achieve a 99% accuracy on the training and 96% on testing dataset


Challenges we ran into


The images we got from the dataset had different resolutions so we first converted it into same resolution
We made multiple changes to get a good enough neural network  architecture like deciding on which layers to use, the number of layers, their depths,etc


Accomplishments that we're proud of


We are proud of our 96% accuracy


What we learned

Making neural network from scratch

What's next for Ship Base Detection


The neural network take into consideration the location of the image and the number of ships found and report unusual activity.
We can add military establishment detection.
We can add airforce establishment detection.

",https://youtu.be/nd8u_70PNUc,https://drive.google.com/file/d/1XUjncj6KFlkkoDTaoKa6c8woIhF4jXTe/view?usp=sharing,,Best Use of Machine Learning - Metron,"keras, opencv, anaconda",,University of Maryland,,,htawade,Hrishikesh,Tawade,htawade@terpmail.umd.edu,"University of Maryland - College Park, University of Maryland - University College",1,krawal19,Kapil,Rawal,krawal@terpmail.umd.edu,,,,,,,,,,,,
Billiard Boi,https://bitcamp2019.devpost.com/submissions/118945-billiard-boi,"Inspiration

Pool is a really hard game for AI to learn, due to both the strategic search space and semi-chaotic physical outcomes.

What it does

The robot attempts to play ball biliards by hitting marbles with a cue on a table of our own making (1:3 scale approximately). 

How we built it

We manufactured the chassis with hand tools and wrote the code in python and Arduino flavored C++ (using PyCharm and CLion with PlatformIO respectively). 

Challenges we ran into

It's really hard and time intensive to manufacture a large piece of hardware with only two tools, and no workbenches. We missed the blessings of CNC. 

Accomplishments that we're proud of

We got it largely to work! It hits the marbles pretty hard.

What we learned

Lots of things.

What's next for Billiard Boi

Many things.
",,,,"Best Moonshot Hack - Bitcamp, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Most Entertaining Hack - Bitcamp","python, opencv, numpy, arduino, c, particleboard, handsaw, no-sleep",H13,"University of Maryland, University of Pennsylvania",,,RedRussianBear,Mikhail,Khrenov,mkhrenov34@gmail.com,,1,UYasher,Shriyash,Upadhyay,shriyash.upadhyay@gmail.com,,,,,,,,,,,,
Turtleshell,https://bitcamp2019.devpost.com/submissions/118946-turtleshell,"Inspiration

Hard to find housing around campus, current tools are not intuitive and very tedious

What it does

Consolidates all of your preferences and finds the best housing matches for you. Also offers to help you find compatible roommates.

How we built it

We used HTML, CSS, Javascript (in node.js with express and handlebars)

Challenges we ran into

The lack of time caused us to not reach the amount of functionality we envisioned having

Accomplishments that we're proud of

Having a working web application at our first hack with a real world application

What we learned

Teamwork, delegation of tasks, hard skills of web development, communication, time management

What's next for Turtleshell

Finishing the functionality we had originally planned but had to sacrifice due to lack of time
",,https://nameless-mesa-34455.herokuapp.com/,,Best Moonshot Hack - Bitcamp,"html, css, javascript, node.js, express.js, handlebars.js",,University of Maryland,,,apan2596,Angela,Pan,a.pan2596@gmail.com,University of Maryland - College Park,1,KevinZong,Kevin,Zong,7kevinzong@gmail.com,,,,,,,,,,,,
Site Selection & Financial Analysis using GANs & GIS Data,https://bitcamp2019.devpost.com/submissions/118947-site-selection-financial-analysis-using-gans-gis-data,"Inspiration

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for Site Selection & Financial Analysis using GANs & GIS Data
",,http://theyboonkedourshit.com,,"Best Hack to Democratize Financial Services - PayPal Credit, Best Financial Hack - Capital One, Best Hack with Esri APIs and SDKs - Esri, Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, Best Domain Registered with Domain.com - MLH, [Compass Challenge] Best Hack for Energy Sustainability - GOEFER, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Use of Machine Learning - Metron","javascript, python, machine-learning, gans, gis",,University Of Maryland - College Park,,,ashishdasu,ashishdasu,,adasu@umd.edu,"University of Maryland - College Park, University of Maryland - University College",2,achyutreddy24,Achyut,Reddy,achyutreddy24@gmail.com,calvinhirsch7,Calvin,Hirsch,calvinhirsch7@gmail.com,,,,,,,,
Beacon,https://bitcamp2019.devpost.com/submissions/118948-beacon,"Inspiration

We all agreed that we could use a system to recommend options to save money on things like food, clothes, tech...

What it does

Looks at your recent purchases and looks for similar purchase options around the area. 

How we built it

We used the capital one nessie api to create a mock checkings account with mock purchases. Since we are all food oriented, we wanted to focus on only food purchases. To do this we parsed through the current month's purchases and found all food-related buys. Then using the nessie and google places api we found similar restaurants in a 1 mile radius of the original purchase. In order to show where these ""recommended"" places were we plotted them on a google map. 

Challenges we ran into

A huge problem that we had was communicating the apis with eachother and communicating the apis to the html. 

Accomplishments that we're proud of

We are extremely proud of how much we learned and how hard we worked. 

What we learned

Google maps api, html, google places api, capital one nessie 

What's next for Beacon

Next for beacon, instead of offering recommendations for food we offer recommendations for other categories like clothes, tech, or gas options. 
",,https://github.com/dpatl/bcamp,,"Best Financial Hack - Capital One, Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, Most Entertaining Hack - Bitcamp","google-maps, javascript, html5, capital-one",A10,University of Maryland,,,kwong70,Kendall,Wong,kwong12@umd.edu,University of Maryland - College Park,2,ttrapaid,Timmy,Trapaidze,ttrapaid@terpmail.umd.edu,dpatel17,Deep,Patel,dpatel17@umd.edu,,,,,,,,
Brainergy,https://bitcamp2019.devpost.com/submissions/118949-brainergy,"Inspiration

Curiosity of the nutrition values of different foods I eat

What it does

Analyzes a piece of food in a picture and returns nutritional values. It will also tell you if a food is considered a brain food and let the user know what are the benefits of consuming it. 

How we built it

Using GCP Vision AI, Edamam Food API, Vue.js, Express.js, ngrok, scss

Challenges we ran into

Getting GCP Vision AI, and Edamam Food API to work properly

Accomplishments that we're proud of

Getting GCP Vision AI, Edamam Food API to work

What we learned

GCP Vision AI, Edamam Food AP

What's next for Brainergy

More complicated foods like salads and foods that incorporate different ingredients 
",,,,"[Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Hack for Education - Bloomberg LP, Best Use of Machine Learning - Metron","vue, gcp, axios, html5, css3, vision-ai, express.js, scss, ngrok",,"Brooklyn College,Brooklyn College,Brooklyn College",,Domain.com|-|Google Cloud Platform,pokelegocuber,Vincent,Xie,pokelegocuber@yahoo.com,Brooklyn College of the City University of New York,2,kevinwong1997,Kevin,Wong,kevinwong1997@hotmail.com,Deckins,Benny,Thai,bennythai2013@hotmail.com,,,,,,,,
Bitcamp Hack,https://bitcamp2019.devpost.com/submissions/118950-bitcamp-hack,"Inspiration

ATMs

What it does

Helps turn ATMs into more than just traditional ATMs

How we built it

With Love.

Challenges we ran into

Time

Accomplishments that we're proud of

Teamwork

What we learned

Teamwork

What's next for Bitcamp Hack

World Peace
",,,,"Best IoT Hack using a Qualcomm Device - MLH, Best Hack to Democratize Financial Services - PayPal Credit, Best Financial Hack - Capital One, Best Hack to Visualize Mortgage Loan Performance - RiskSpan, Best App or Site for Investment Advisor Rep Report - FINRA, Most Realistic Workplace Hack - TCS, Best Hack with Esri APIs and SDKs - Esri, Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [DESIGN DEN] Best Bitfolio - Bitcamp, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Best Use of Snap Kit - MLH, Best Domain Registered with Domain.com - MLH, Best use of Blockstack - MLH, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, [Compass Challenge] Best Hack for Energy Sustainability - GOEFER, [Compass Challenge] Best Hack for X* - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Hack for Education - Bloomberg LP, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp","love, esri, nessie, capital-one-api, capital-one, google-cloud, gcp, machine-learning, snap-kit, domain.com, quaclcomm, dragon-board, blockstack, python, java, javascript, html, css",C1,Montgomery College,,,PerryP,Perry,Publico,perryapublico@gmail.com,"College of Southern Maryland, Pennsylvania State University",1,TOyefule,Tolani,Oyefule,tolani.oyefule@gmail.com,,,,,,,,,,,,
DocBase,https://bitcamp2019.devpost.com/submissions/118951-docbase,"Inspiration

Always searched for an answer to eliminate the hassle of asking Medical Professionals to collect appropriate data for Deep Learning Models. It can be very time consuming and difficult task to get a regulated and reliable dataset.

Being a researcher, I was interested in implementing the new paper and also inspired by the structured format of a dataset recently released by NIH for chest X-rays. Gave a deep thought and considered implementing it in the Hackathon.

What it does

Automating the system of Dataset generation as well as Sharing for guided assistance to the Medical Professionals by the Medical Professionals.

How I built it

Trained a DenseNet121 Deep learning architecture on a Dataset of 112,120 frontal-view X-rays. The network was configured in PyTorch Python and trained on a Rutgers University GPU Cluster . 
The Web Dev is done in Django python to create a platform for professionals to share it with others.

Challenges I ran into

Challenged severely by Web Dev part of the project. 
Reason - The Fine Tuning of the Model consumed a lot of time thus leaving very less time for Web Dev and UI subsection of the project.

Accomplishments that I'm proud of

An amazing average accuracy of 85.0846 on the test set trained on a 121 layer Dense CNN.

What I learned

Implementation of Class Activation Maps to localize the disease visualizations on XRays.
Specifically 3 different approaches and significance of each.

What's next for DocBase

Possible Deployment as a Web App and Improvements like addition of more deep learning models to diagnose more diseases as well as create a structured dataset on the go.
",,https://github.com/rushin682/docbase,https://s3.amazonaws.com/challengepost/zip_files/production/43591/zip_files/docbase-master_2.zip,Best Use of Machine Learning - Metron,"python, pytorch, nvidia, cuda, pandas, jupyter",,"Rutgers University, NB",,,rhg50,Rushin,Gindra,rhg50@scarletmail.rutgers.edu,"Rutgers, The State University of New Jersey",0,,,,,,,,,,,,,,,,
Betadata,https://bitcamp2019.devpost.com/submissions/118952-betadata,"Inspiration

Ever want to search a video for a specific topic or object? Additionally, this is performed on Youtube ads to find out if they investing in them is a good idea.

What it does

In video search

How I built it

built google cloud ml apis and reactjs

Challenges I ran into

REACTJS!

Accomplishments that I'm proud of

First solo hack I've done in a while

What I learned

How to use react route

What's next for Betadata

Training it recognized more entities
",,,,"Best App or Site for Investment Advisor Rep Report - FINRA, Most Realistic Workplace Hack - TCS, Best Hack with Esri APIs and SDKs - Esri, Best Moonshot Hack - Bitcamp, Best use of Blockstack - MLH, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Use of Machine Learning - Metron","node.js, react, firebase, google-cloud, flask, python",,Temple University,Alienware Laptop,Blockstack,WilDun,Derrick,Wilson-Duncan,derrick.duncan@temple.edu,Temple University,0,,,,,,,,,,,,,,,,
Book Hero,https://bitcamp2019.devpost.com/submissions/118953-book-hero,"Inspiration

We thought of what services hadn't been scaled up yet, and we started viewing various markets. Books came into the discussion and while we talked about textbooks we realized that we all save a lot of money by letting each other borrow our textbooks. We decided to expand this idea to regular books because the library is not always dependable. This makes education more accessible since people won't be discouraged by the high price of academic literature like textbooks or books about cracking the coding interview. This also fosters a sense of community. You may get to know the individuals you are borrowing books from and may find commonality through the subjects you are interested in. So all the English nerds of the neighborhood know each other because they borrow books from each other while all the CS nerds will know each other and could recommend books to each other. Getting into a an area of interest would be so easy since you could just connect to one person who sells a collection of a certain interest and then read their collection or possibly ask for more information so that you too can enter the community, which fosters inclusivity.

What it does

Book Hero allows you to post your collection of books to let people borrow them, and allow you to borrow those books from other people's collections.

How we built it

With code and brainpower. We used node.js and express.js to connect to the Goodreads API to allow the user to search through a library of real books and connect to MongoDB to store people's profiles. The pages were coded with HTML and CSS.

Challenges we ran into

Thinking of how we would implement the book renting idea was a huge challenge. The idea was actually put on the back burner for a while because we were wondering how delivery would work, but eventually, we came up with the idea of incorporating location data so that the books could be picked up by individuals.

Accomplishments that we're proud of

The slick UI and database implementation.

What we learned

Sometimes all people need is to be connected. Our service does not provide people a physical service, but it does give them the means to do what they could not otherwise. Individually this was our first hackathon, so 2 of our group members both learned HTML, CSS, and some node.js. Another one of our group members learned more node.js, MongoDB, and some express.js.

What's next for Book Hero

Adding a feature to sort based on distance to your current location would be the next step, and also adding recommendations by people who own collections to further the community aspect.
",,https://bookhero-hlbwiwtkhm.now.sh/,,"Best Hack with Esri APIs and SDKs - Esri, Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [DESIGN DEN] Best Bitfolio - Bitcamp, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo","node.js, express.js, mongoose, mongodb, goodreads, html, css",C2,university of maryland college park,,,abhisaivenkat,Abhishek,Venkat,abhisaivenkat@gmail.com,University of Maryland - College Park,3,jason43lee,Jason,Lee,jason43lee@gmail.com,trueman695,Trueman,Phamdo,trueman@phamdo.com,matthewmichaels18,Matthew,Michaels,matthew.michaels18@gmail.com,,,,
Mapping Depression through Tweets,https://bitcamp2019.devpost.com/submissions/118954-mapping-depression-through-tweets,"What it does

Major depression is one of the most common mental health issues around the globe. Oftentimes, those who are depressed go to social media such as Twitter and Facebook to express their feelings. Oftentimes, these signs are left undetected or they are not handled properly. Our novel approach aims to solve this challenge by mapping tweets indicative of depression as well as crisis centers across the United States. This is a fast and efficient way of finding localized areas of high depression and providing crisis centers with information as to how prevalent depression is in their area. 

How we built it

We first utilized the Twint tool for real-time scraping of Twitter data in the United States during the past two days. We then utilized NLTK tools to preprocess the text from the tweets and transform it into data that could be fed into a pre-trained Convolutional LSTM network. Once we filtered tweets were indicative of depression, we used the Twint tool to access a general location of the user and used ArcGIS geo-encoding API to extract longitude and latitude coordinates. Our web application, which relies on a Flask framework then took these coordinates and utilized the Google Maps API to create a heatmap. We were also able to extract locations of crisis centers from the Suicide Prevention Hotline website and plot those on our map. After creating this, we focused on making it real-time, so that the heatmap can be updated based on new tweets. 

Challenges we ran into

The biggest challenge we ran into was perhaps taking the Twitter data and extracting the relevant information. We found that the Twitter API was restrictive in some senses and instead used the Twint tool which allowed for faster calls and was more flexible. Another challenge was connecting the backend machine learning algorithms to the Flask application. 

Accomplishments that we're proud of

We were able to accomplish our goals for a working MVP. 

What we learned

We learned to utilize the Twint API for real-time scraping of tweets and the levels of preprocessing necessary for proper analysis. We also learned how to work with the Google-Maps API in Flask as well as the ArcGIS API for geocoding, both of which were key for the project to be successful. Most importantly, we learned how to create a full end-to-end application as a team. There were a lot of moving parts all of which were dependent on each other. 

What's next for Mapping Depression through Tweets

The team is looking to extract more data for better analysis as well as automatically determining high-risk areas through census and geographical data to contact crisis centers. We also are considering creating a mobile app version for this. Another potential avenue for this project would be to extract data from other types of social media such as Instagram or Facebook. 
",,https://github.com/jonahtash/mappingselfharmrisk,,"Best Hack with Esri APIs and SDKs - Esri, Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta","twint, keras, nltk, flask, javascript, google-maps",,"University of Maryland, College Park",,,VatsalAgarwal,Vatsal,Agarwal,vatsalag99@gmail.com,University of Maryland - College Park,3,geiko246,,,geiko246@gmail.com,raymondzouu,raymondzouu,,rrzou17@gmail.com,jonahtash,jonahtash,,jonahntash@gmail.com,,,,
Sunrise: The Path to a Bright Future,https://bitcamp2019.devpost.com/submissions/118955-sunrise-the-path-to-a-bright-future,"Inspiration

One of the largest problems facing the medical field is patient compliance. This is especially true for mental illnesses and disorders . According to a 2013 study, one of the leading causes of non compliance in psychiatric treatment is irregular attendance to clinic accounting for about 55%. Another cause is lack of education about medication and ignorance about side effects of medication at 61%. It was also observed that social supervision was very poor in non-compliant patients whereas 49.4% of compliant patients had very good family support.

What it does

Provides psychiatrist with a dashboard to visualize patient sentiment between patient visits. 

How we built it

Three steps: obtaining the text input through a chrome extension, feeding it to the classifier to detect emotion and sending it to the front end for data visualization.  

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for Sunrise
",,https://github.com/lookcw/Sunrise,,"Most Realistic Workplace Hack - TCS, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, [Compass Challenge] Best Hack for X* - Bitcamp, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Use of Machine Learning - Metron","javascript, python, redux, digitalocean, json, machine-learning",,university of maryland,,,VinayVeluvolu,VinayVeluvolu,,vinayveluvolu@gmail.com,"University of Maryland - University College, University of Maryland - College Park",3,jparch,Jerry,Peng,png.jrry@gmail.com,lookcw,lookcw,,clook@terpmail.umd.edu,anoop8patel,anoop8patel,,anoop8patel@gmail.com,,,,
ARCity,https://bitcamp2019.devpost.com/submissions/118957-arcity,"Inspiration

We wanted to build something that helped to solve a problem that we all believe is an important issue. In local communities, especially in larger cities, it is hard for less affluent areas to get access to the resources needed to improve or maintain their neighborhoods. Using this AR application not only provides a learning tool to show various discrepancies in neighborhoods (food deserts, income inequality etc.), but it also provides a way for individuals to get involved with the planning and tangibly make a difference.

What it does

The app launches a view of College Park on the ground in front of the user and the user can walk around and see the information presented (locations of restaurants, liquor stores, libraries and grocery stores). Exploring the data can show where food deserts exist, for example. Users will eventually have the ability to add on to the experience by voting for projects that they would like to see started in their neighborhoods. 

How we built it

We used Android Studio to build our application. This combined with the ESRI API/AR (Beta) SDK and the 'living-atlas' database, we were able to create an AR experience that lets the user explore College park. Our main tasks involved compiling the layers we wanted to show using the online Scene Viewer, creating a startup interface to introduce the idea behind the project, understanding the AR SDK and how to best adapt that to our needs, and manipulating features on the map to emphasize statistics.

Challenges we ran into

Getting the scene to show up in AR, not having the ability to easily put any kind of layer in the scene, unfamiliarity with the ESRI API and the AR SDK, being able to extrude buildings so they show up in 3D, plotting points in real time in the app so that we can make projects that others can 'vote' on, not being able to limit the amount of data the app is trying to display at one time

Accomplishments that we're proud of

Creating a complete application that achieves a goal that we set for ourselves at the start of the project, Team building, learning how to work with software/API/SDK that we have never used or seen before, multiple big challenges were faced when working with the SDK, so overcoming each of the hurdles, one step at a time, was exciting.

What we learned

We learned more about Android Studio development, we learned A LOT about GIS and how powerful it is. We gained a new perspective on what goals are attainable and how to budget our time effectively. We learned effective communication and that the sponsor of the challenge usually has a lot of knowledge about how we can go about our project.

What's next for ARCity

We want to continue this project and implement further the ability to vote on different projects in your neighborhood. Ideally, we hook up the application to a DB so that we can easily set/get the number of votes that a particular project receives.
",https://youtu.be/39lpe7Orl1M,https://github.com/mvorsteg/CityData,https://s3.amazonaws.com/challengepost/zip_files/production/43592/zip_files/src.zip,"Best Hack with Esri APIs and SDKs - Esri, Best Moonshot Hack - Bitcamp, [Compass Challenge] Best Hack for X* - Bitcamp, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit","android-studio, java, esri, gis, living-atlas",,"University of Maryland, College Park",,,timothyh444,Timothy,Henderson,timothyh@terpmail.umd.edu,University of Maryland - College Park,2,minersail,Jordan,Woo,jkwoo1234@gmail.com,bahaaharraz,Bahaa,Harraz,bahaaharraz@gmail.com,,,,,,,,
anonymous message,https://bitcamp2019.devpost.com/submissions/118958-anonymous-message,"Inspiration

I found out that some people have trouble talking to close friends or family members even they may have something to pour out. This can cause some serious mental health problem. Anonymous message solves the problem! Conversations between anonymous strangers are much easier!

What it does

It matches people with similar interests and connects them anonymously. 

How we built it

The front end is on ios. So it is developed with mainly swift and some objective-c to use third party libraries. The backend is built on a VM instance bought from Ali-cloud(centOS 7). The environment is set up by XAMPP and database we used MySQL with the help of PHP.

Challenges we ran into

We have a small team so basically, all coding work is done by one person. The workload was the main challenge but we managed to build a fully functioning app. Designing was also a challenge because we have to distinguish our app from other social apps by specifically targeting a specific group of people

Accomplishments that we're proud of

First, we are proud of the idea (building a social app for anti-social people). We are also proud of the final product. We managed to build the entire 10-page app (front end and back end) all from scratch. Even the workload was huge, our ""anonymous message"" still looks pretty and works perfectly.

What we learned

To be honest, before this project we are more like individual developers. We are shocked by how powerful we are if we work toward a common goal. Even though we only have 3 people but I think we have accomplished something that would take me 1 month if I work alone. 

What's next for anonymous message

First: improve UI and user experiences
Then: Improve matching algorithms on the backend.
Finally: Marketing! Let people who have the need know this app!
",,https://github.com/drsteve1998/Bitcamp2019,https://s3.amazonaws.com/challengepost/zip_files/production/43596/zip_files/Bitcamp2019-master_%282%29.zip,"Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, [Compass Challenge] Best Hack for X* - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform","swift, objective-c, php, mysql, google-cloud, perl, apache, centos",,"university of maryland, college park",,Google Cloud Platform,drsteve1998,drsteve1998,,stevenduan1998@gmail.com,"University of Maryland - College Park, Northern Virginia Community College",2,John46,,,john46luo@gmail.com,tcdao,,,thchuong371994@hotmail.com,,,,,,,,
Education For All,https://bitcamp2019.devpost.com/submissions/118959-education-for-all,"Inspiration

What it doesProject to improve education for all....

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for Education For All
",,,,,,,bradley university,,,tncsowmya,Sowmya,Turaga Nc,tncsowmya@gmail.com,Bradley University,2,aravindakrishnan92,aravind k,v,aravindakrishnan92@gmail.com,sripranathivr109,sri,padala,sripranathi.vr109@gmail.com,,,,,,,,
Live Better,https://bitcamp2019.devpost.com/submissions/118965-live-better,"Inspiration

Homelessness is a large issue in Baltimore, as well as many other cities across the country. To go along with the theme, ""Build with Purpose"" and the Compass Challenge, we have decided to develop a program that addresses the issue and provides aid to those in difficult conditions.

What it does

Similar to instant text updates for MTA bus times, users will be able to text their station ID to our number and receive a text back with directions and time needed to travel to the nearest shelters and support facilities so they can be helped.

How I built it

We started by implementing a google-maps window onto our webpage with their API key and marked all bus stations within the region with coordinates found in MTA's database.

Challenges I ran into

We had trouble finding and implementing a way to interact with messages from cellphones to receive area ID's and returning the correct list of destinations to the sender.

Accomplishments that I'm proud of

We are proud of correctly implementing the window for google-maps and precisely marking all of the bus stations within the region.

What I learned

As a group, we learned how to coordinate and distribute tasks amongst one another. We also learned how to work with PHP and different API's to access necessary data.

What's next for Live Better

We could expand further so the application covers more ground along the east coast. Creating a mobile app for the program can also boost usage and bring awareness to the issue of homelessness.
",,https://github.com/team-live-better/homeless-helper,https://s3.amazonaws.com/challengepost/zip_files/production/43598/zip_files/homeless-helper-master.zip,Best First-Time Hack - Bitcamp,"html, javascript, github, google-places, sublime-text, php, mta-data",,Baltimore Polytechnic Institute,,,yaozheng123,yaozheng123,,yaozheng123.com@gmail.com,,3,Fronkles,Fronkles,,tagaytayfrank@gmail.com,randydoan109,Randy,Doan,randydoan109@gmail.com,avontaejones13,Avontae,Jones,avontaejones13@gmail.com,,,,
UMD Ticket Exchange,https://bitcamp2019.devpost.com/submissions/118971-umd-ticket-exchange,"Our Inspiration

The inspriation for this web app is the noticed need for a centralized platform for communication between students when dealing with events around campus. Students continue to use a variety of social media and other forms of messaging to coordination the exchange of tickets for events.

## What it does
We created this app to allow a student to upload a file of their ticket in which other students will be able to see while browsing through upcoming events. Students can select an event and see all the users that are currently trying to exchange their ticket. We will have a system to keep track of trust worthy users so that when choosing a user to make a request to, they can feel that this will be a trust worthy person. Only students that register and confirm their terpmail will be able to make it through this process.

Once a user uploads a file, other users will make a request for this ticket. The user who uploaded the file will be able to see all other users that have made a request and can choose which user will be approved to download the file. 

How we built it

Using the Flask framework along with pymongo to connect to our MongoDB, we set up a web app that uses routing, small pieces of front-end request, along with heavy back-end logic in attempt to make this service as secure and smooth as possible.
",,https://github.com/Flyer107/TickeX_DB,,"Best First-Time Hack - Bitcamp, Best Hack for Education - Bloomberg LP","flask, jquery, jinja, javascript, python, html5, css3, mongodb",,University of Maryland,,,jzohdi,,,jakez1@live.com,University of Maryland - College Park,1,nsobti,Nitin,Sobti,nsobti@umd.edu,,,,,,,,,,,,
BananAR Phone,https://bitcamp2019.devpost.com/submissions/118989-bananar-phone,"Inspiration

Potassium

What it does

The world's first augmented reality banana phone app

How I built it

AR and bananas 

Challenges I ran into

Apple

Accomplishments that I'm proud of

Eco sustainability

What I learned

Banana tech

What's next for BananAR Phone

More potassium
",,,,"Best Moonshot Hack - Bitcamp, Best First-Time Hack - Bitcamp, [DESIGN DEN] Best Bitfolio - Bitcamp, [HARDWARE VILLAGE] Best Hardware Hack - Bitcamp, Best Use of Snap Kit - MLH, Best Domain Registered with Domain.com - MLH, Best use of Blockstack - MLH, [Compass Challenge] Best Hack for Fostering Continuous Education - Exerceo, [Compass Challenge] Best Hack for Mental Health - Sigma Phi Delta, [Compass Challenge] Best Hack for Energy Sustainability - GOEFER, [Compass Challenge] Best Hack for X* - Bitcamp, Best Use of Google Cloud Platform Services or APIs - Google Cloud Platform, Best Data Visualization Hack to Solve a Real-World Challenge - OPIS By IHS Markit, Best Hack for Education - Bloomberg LP, Best Use of Machine Learning - Metron, Most Entertaining Hack - Bitcamp","bananas, potasium, augmented-reality, snapkit, google-cloud, gcp",C3,Trump University,,,jay_hype,Not Perry,Not Perry,jay_hype@yahoo.com,Montgomery College,0,,,,,,,,,,,,,,,,
Wavy Sand Bed,https://bitcamp2019.devpost.com/submissions/119011-wavy-sand-bed,"Inspiration: We wanted to make something fun.

What it does: Injects pressurized air into sand to make it have fluid-like properties, reduces the gravitational pressure.

How we built it: Lots of hard work, sweat, and tears

Challenges we ran into: Finding a drill

Accomplishments that we're proud of: Just being able to put it together

What we learned: It's hard finding a drill.

What's next for Wavy Sand Bed: Motion detection
",,,,Most Entertaining Hack - Bitcamp,"arduino, leds, sand, pipes, pressurized-air",,"University of Maryland, College Park",Arduino 101,,kngo1234,Kelly,Ngo,kngo1234@terpmail.umd.edu,University of Maryland - College Park,1,alugo,Alex,Lugo,alugocp@aim.com,,,,,,,,,,,,
Five-in-a-Row,https://bitcamp2019.devpost.com/submissions/119041-five-in-a-row,"Five-in-a-Row
",,https://github.com/mchen132/Five-in-a-Row,https://s3.amazonaws.com/challengepost/zip_files/production/43631/zip_files/FiveInARow.zip,,java,,University of Maryland,,,mchen132,mchen132,,540529022cmk@gmail.com,University of Maryland - College Park,1,haoranli17365,haoranli17365,,1291934910@qq.com,,,,,,,,,,,,